<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<clones>
    <clone nlines="15" distance="1">
        <source file="org/gjt/sp/jedit/gui/FilteredListModel.java" startline="163" endline="177">
protected Set&lt;Integer&gt; saveSelection()
	{
		if (list == null)
			return null;
		int[] rows = list.getSelectedIndices();
		if (rows.length == 0)
			return null;

		Set&lt;Integer&gt; selectedRows = new HashSet&lt;Integer&gt;(rows.length);
		for (int row : rows)
		{
			selectedRows.add(getTrueRow(row));
		}
		return selectedRows;
	}
</source>
        <source file="org/gjt/sp/jedit/gui/FilteredTableModel.java" startline="185" endline="199">
private Set&lt;Integer&gt; saveSelection()
	{
		if (table == null)
			return null;
		int[] rows = table.getSelectedRows();
		if (rows.length == 0)
			return null;

		Set&lt;Integer&gt; selectedRows = new HashSet&lt;Integer&gt;(rows.length);
		for (int row : rows)
		{
			selectedRows.add(getTrueRow(row));
		}
		return selectedRows;
	}
</source>
    </clone>
    <clone nlines="7" distance="1">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="553" endline="559">
@Test(expected = MalformedInputException.class)
	public void readShouldThrowExceptionOnMalformedInputWithThrottledReader()
		throws IOException, InvocationTargetException, NoSuchMethodException, InstantiationException,
		       IllegalAccessException
	{
		getThrottledReader("\\u21aL").read();
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="561" endline="567">
@Test(expected = MalformedInputException.class)
	public void read_charArray_ShouldThrowExceptionOnMalformedInputWithThrottledReader()
		throws IOException, InvocationTargetException, NoSuchMethodException, InstantiationException,
		       IllegalAccessException
	{
		getThrottledReader("\\u21aL").read(bufferArray);
	}
</source>
    </clone>
    <clone nlines="7" distance="1">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="553" endline="559">
@Test(expected = MalformedInputException.class)
	public void readShouldThrowExceptionOnMalformedInputWithThrottledReader()
		throws IOException, InvocationTargetException, NoSuchMethodException, InstantiationException,
		       IllegalAccessException
	{
		getThrottledReader("\\u21aL").read();
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="577" endline="583">
@Test(expected = MalformedInputException.class)
	public void read_CharBuffer_ShouldThrowExceptionOnMalformedInputWithThrottledReader()
		throws IOException, InvocationTargetException, NoSuchMethodException, InstantiationException,
		       IllegalAccessException
	{
		getThrottledReader("\\u21aL").read(buffer);
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="installer/CBZip2OutputStream.java" startline="391" endline="396">
public void flush()
        throws IOException
    {
        super.flush();
        m_bsStream.flush();
    }
</source>
        <source file="installer/TarOutputStream.java" startline="116" endline="122">
public void
	close()
		throws IOException
		{
		this.finish();
		this.buffer.close();
		}
</source>
    </clone>
    <clone nlines="10" distance="3">
        <source file="org/gjt/sp/jedit/pluginmgr/PluginList.java" startline="385" endline="394">
Branch getCompatibleBranch()
		{
			for (Branch branch : branches)
			{
				if (branch.canSatisfyDependencies())
					return branch;
			}

			return null;
		}
</source>
        <source file="org/gjt/sp/jedit/pluginmgr/PluginList.java" startline="456" endline="465">
boolean canSatisfyDependencies()
		{
			for (Dependency dep : deps)
			{
				if (!dep.canSatisfy())
					return false;
			}

			return true;
		}
</source>
    </clone>
    <clone nlines="10" distance="1">
        <source file="org/gjt/sp/jedit/bsh/org/objectweb/asm/ClassWriter.java" startline="685" endline="694">
Item newClass (final String value) {
    key2.set(CLASS, value, null, null);
    Item result = get(key2);
    if (result == null) {
      pool.put12(CLASS, newUTF8(value).index);
      result = new Item(index++, key2);
      put(result);
    }
    return result;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/org/objectweb/asm/ClassWriter.java" startline="857" endline="866">
private Item newString (final String value) {
    key2.set(STR, value, null, null);
    Item result = get(key2);
    if (result == null) {
      pool.put12(STR, newUTF8(value).index);
      result = new Item(index++, key2);
      put(result);
    }
    return result;
  }
</source>
    </clone>
    <clone nlines="18" distance="2">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="5216" endline="5234">
void fireNarrowActive()
	{
		Object[] listeners = listenerList.getListenerList();
		for(int i = listeners.length - 2; i &gt;= 0; i--)
		{
			if(listeners[i] == StatusListener.class)
			{
				try
				{
					((StatusListener)listeners[i+1])
						.narrowActive(this);
				}
				catch(Throwable t)
				{
					Log.log(Log.ERROR,this,t);
				}
			}
		}
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="5368" endline="5385">
private void fireCaretEvent()
	{
		Object[] listeners = listenerList.getListenerList();
		for(int i = listeners.length - 2; i &gt;= 0; i--)
		{
			if(listeners[i] == CaretListener.class)
			{
				try
				{
					((CaretListener)listeners[i+1]).caretUpdate(caretEvent);
				}
				catch(Throwable t)
				{
					Log.log(Log.ERROR,this,t);
				}
			}
		}
	}
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/PerspectiveManager.java" startline="249" endline="256">
static
	{
		String settingsDirectory = jEdit.getSettingsDirectory();
		if(settingsDirectory != null)
		{
			perspectiveXML = new SettingsXML(settingsDirectory, PERSPECTIVE_FILENAME);
		}
	}
</source>
        <source file="org/gjt/sp/jedit/JEditKillRing.java" startline="49" endline="56">
JEditKillRing()
	{
		String settingsDirectory = jEdit.getSettingsDirectory();
		if(settingsDirectory != null)
		{
			killringXML = new SettingsXML(settingsDirectory, "killring");
		}
	}
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/PerspectiveManager.java" startline="249" endline="256">
static
	{
		String settingsDirectory = jEdit.getSettingsDirectory();
		if(settingsDirectory != null)
		{
			perspectiveXML = new SettingsXML(settingsDirectory, PERSPECTIVE_FILENAME);
		}
	}
</source>
        <source file="org/gjt/sp/jedit/JEditRegisterSaver.java" startline="42" endline="49">
JEditRegisterSaver()
	{
		String settingsDirectory = jEdit.getSettingsDirectory();
		if(settingsDirectory != null)
		{
			registersXML = new SettingsXML(settingsDirectory, "registers");
		}
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="561" endline="567">
@Test(expected = MalformedInputException.class)
	public void read_charArray_ShouldThrowExceptionOnMalformedInputWithThrottledReader()
		throws IOException, InvocationTargetException, NoSuchMethodException, InstantiationException,
		       IllegalAccessException
	{
		getThrottledReader("\\u21aL").read(bufferArray);
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="569" endline="575">
@Test(expected = MalformedInputException.class)
	public void read_charArray_int_int_ShouldThrowExceptionOnMalformedInputWithThrottledReader()
		throws IOException, InvocationTargetException, NoSuchMethodException, InstantiationException,
		       IllegalAccessException
	{
		getThrottledReader("\\u21aL").read(bufferArray, 0, 1);
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="577" endline="583">
@Test(expected = MalformedInputException.class)
	public void read_CharBuffer_ShouldThrowExceptionOnMalformedInputWithThrottledReader()
		throws IOException, InvocationTargetException, NoSuchMethodException, InstantiationException,
		       IllegalAccessException
	{
		getThrottledReader("\\u21aL").read(buffer);
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="569" endline="575">
@Test(expected = MalformedInputException.class)
	public void read_charArray_int_int_ShouldThrowExceptionOnMalformedInputWithThrottledReader()
		throws IOException, InvocationTargetException, NoSuchMethodException, InstantiationException,
		       IllegalAccessException
	{
		getThrottledReader("\\u21aL").read(bufferArray, 0, 1);
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/syntax/Chunk.java" startline="337" endline="342">
final Chunk snippetBefore(int snipOffset)
	{
		assert 0 &lt;= snipOffset &amp;&amp; snipOffset &lt; length;
		return new Chunk(id, offset, snipOffset,
			rules, style, background);
	}
</source>
        <source file="org/gjt/sp/jedit/syntax/Chunk.java" startline="348" endline="353">
final Chunk snippetAfter(int snipOffset)
	{
		assert 0 &lt;= snipOffset &amp;&amp; snipOffset &lt; length;
		return new Chunk(id, offset + snipOffset, length - snipOffset,
			rules, style, background);
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="installer/TarOutputStream.java" startline="221" endline="226">
public void
	write( byte[] wBuf )
		throws IOException
		{
		this.write( wBuf, 0, wBuf.length );
		}
</source>
        <source file="installer/TarInputStream.java" startline="358" endline="363">
public int
	read( byte[] buf )
		throws IOException
		{
		return this.read( buf, 0, buf.length );
		}
</source>
    </clone>
    <clone nlines="7" distance="3">
        <source file="org/gjt/sp/jedit/buffer/UndoManager.java" startline="318" endline="324">
private Edit getLastEdit()
	{
		if(undosLast instanceof CompoundEdit)
			return ((CompoundEdit)undosLast).last;
		else
			return undosLast;
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/TargetError.java" startline="71" endline="78">
public Throwable getTarget()
	{
		// check for easy mistake
		if(target instanceof InvocationTargetException)
			return((InvocationTargetException)target).getTargetException();
		else
			return target;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/bsh/classpath/BshClassPath.java" startline="838" endline="843">
void startClassMapping() {
		if ( mappingFeedbackListener != null )
			mappingFeedbackListener.startClassMapping();
		else
			System.err.println( "Start ClassPath Mapping" );
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/classpath/BshClassPath.java" startline="852" endline="857">
void errorWhileMapping( String s ) {
		if ( mappingFeedbackListener != null )
			mappingFeedbackListener.errorWhileMapping( s );
		else
			System.err.println( s );
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/bsh/classpath/BshClassPath.java" startline="859" endline="864">
void endClassMapping() {
		if ( mappingFeedbackListener != null )
			mappingFeedbackListener.endClassMapping();
		else
			System.err.println( "End ClassPath Mapping" );
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/classpath/BshClassPath.java" startline="852" endline="857">
void errorWhileMapping( String s ) {
		if ( mappingFeedbackListener != null )
			mappingFeedbackListener.errorWhileMapping( s );
		else
			System.err.println( s );
	}
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/Marker.java" startline="98" endline="106">
void removePosition()
	{
		// forget the cached Position instance
		if(position != null)
		{
			pos = position.getOffset();
			position = null;
		}
	}
</source>
        <source file="org/gjt/sp/jedit/GUIUtilities.java" startline="1552" endline="1559">
public static void hideSplashScreen()
	{
		if(splash != null)
		{
			splash.dispose();
			splash = null;
		}
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/Marker.java" startline="98" endline="106">
void removePosition()
	{
		// forget the cached Position instance
		if(position != null)
		{
			pos = position.getOffset();
			position = null;
		}
	}
</source>
        <source file="org/gjt/sp/jedit/GUIUtilities.java" startline="2327" endline="2333">
private void cancelResizeSave()
		{
			if (resizeDelayFuture != null) {
				resizeDelayFuture.cancel(false);
				resizeDelayFuture = null;
			}
		}
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/Marker.java" startline="98" endline="106">
void removePosition()
	{
		// forget the cached Position instance
		if(position != null)
		{
			pos = position.getOffset();
			position = null;
		}
	}
</source>
        <source file="org/gjt/sp/jedit/gui/PingPongList.java" startline="165" endline="172">
public void removeLeftTitle()
	{
		if (leftLabel != null)
		{
			leftPanel.remove(leftLabel);
			leftLabel = null;
		}
	}
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/Marker.java" startline="98" endline="106">
void removePosition()
	{
		// forget the cached Position instance
		if(position != null)
		{
			pos = position.getOffset();
			position = null;
		}
	}
</source>
        <source file="org/gjt/sp/jedit/gui/PingPongList.java" startline="175" endline="182">
public void removeRightTitle()
	{
		if (rightLabel != null)
		{
			rightPanel.remove(rightLabel);
			rightLabel = null;
		}
	}
</source>
    </clone>
    <clone nlines="8" distance="3">
        <source file="org/gjt/sp/jedit/textarea/Gutter.java" startline="379" endline="386">
void dispose()
	{
		if (buffer != null)
		{
			buffer.removeBufferListener(bufferListener);
			buffer = null;
		}
	}
</source>
        <source file="org/gjt/sp/jedit/GUIUtilities.java" startline="1552" endline="1559">
public static void hideSplashScreen()
	{
		if(splash != null)
		{
			splash.dispose();
			splash = null;
		}
	}
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/textarea/Gutter.java" startline="379" endline="386">
void dispose()
	{
		if (buffer != null)
		{
			buffer.removeBufferListener(bufferListener);
			buffer = null;
		}
	}
</source>
        <source file="org/gjt/sp/jedit/GUIUtilities.java" startline="2327" endline="2333">
private void cancelResizeSave()
		{
			if (resizeDelayFuture != null) {
				resizeDelayFuture.cancel(false);
				resizeDelayFuture = null;
			}
		}
</source>
    </clone>
    <clone nlines="8" distance="3">
        <source file="org/gjt/sp/jedit/textarea/Gutter.java" startline="379" endline="386">
void dispose()
	{
		if (buffer != null)
		{
			buffer.removeBufferListener(bufferListener);
			buffer = null;
		}
	}
</source>
        <source file="org/gjt/sp/jedit/Marker.java" startline="98" endline="106">
void removePosition()
	{
		// forget the cached Position instance
		if(position != null)
		{
			pos = position.getOffset();
			position = null;
		}
	}
</source>
    </clone>
    <clone nlines="8" distance="1">
        <source file="org/gjt/sp/jedit/textarea/Gutter.java" startline="379" endline="386">
void dispose()
	{
		if (buffer != null)
		{
			buffer.removeBufferListener(bufferListener);
			buffer = null;
		}
	}
</source>
        <source file="org/gjt/sp/jedit/gui/PingPongList.java" startline="165" endline="172">
public void removeLeftTitle()
	{
		if (leftLabel != null)
		{
			leftPanel.remove(leftLabel);
			leftLabel = null;
		}
	}
</source>
    </clone>
    <clone nlines="8" distance="1">
        <source file="org/gjt/sp/jedit/textarea/Gutter.java" startline="379" endline="386">
void dispose()
	{
		if (buffer != null)
		{
			buffer.removeBufferListener(bufferListener);
			buffer = null;
		}
	}
</source>
        <source file="org/gjt/sp/jedit/gui/PingPongList.java" startline="175" endline="182">
public void removeRightTitle()
	{
		if (rightLabel != null)
		{
			rightPanel.remove(rightLabel);
			rightLabel = null;
		}
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/AbstractOptionPane.java" startline="113" endline="118">
@Override
	public final void save()
	{
		if(initialized)
			_save();
	}
</source>
        <source file="org/gjt/sp/jedit/search/SearchDialog.java" startline="246" endline="251">
@EBHandler
	public void handleSearchSettingsChanged(EBMessage msg)
	{
		if(!saving)
			load();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/AbstractOptionPane.java" startline="113" endline="118">
@Override
	public final void save()
	{
		if(initialized)
			_save();
	}
</source>
        <source file="org/gjt/sp/jedit/PluginJAR.java" startline="1791" endline="1798">
@Override
			public void run()
			{
				if (!activated)
					return;

				startPlugin();
			}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/search/HyperSearchOperationNode.java" startline="224" endline="231">
public SearchMatcher getSearchMatcher()
	{
		// The searchMatcher has to remember the noWordSep property that was used
		// because in case of HyperSearchOperationNode, the same SearchMatcher
		// is used for several Buffers that can be of different edit modes.
		searchMatcher.setNoWordSep(noWordSep);
		return searchMatcher;
	}
</source>
        <source file="org/gjt/sp/jedit/io/AutoDetection.java" startline="176" endline="181">
public BufferedInputStream getRewindedStream()
			throws IOException
		{
			markedStream.reset();
			return markedStream;
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/io/AutoDetection.java" startline="176" endline="181">
public BufferedInputStream getRewindedStream()
			throws IOException
		{
			markedStream.reset();
			return markedStream;
		}
</source>
        <source file="org/gjt/sp/jedit/proto/jeditresource/PluginResURLConnection.java" startline="141" endline="147">
@Nonnull
	public InputStream getInputStream()
		throws IOException, FileNotFoundException
	{
		connect();
		return in;
	}
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="installer/TarEntry.java" startline="105" endline="111">
public
	TarEntry( File file )
		throws InvalidHeaderException
		{
		this.initialize();
		this.getFileTarHeader( this.header, file );
		}
</source>
        <source file="installer/TarEntry.java" startline="119" endline="125">
public
	TarEntry( byte[] headerBuf )
		throws InvalidHeaderException
		{
		this.initialize();
		this.parseTarHeader( this.header, headerBuf );
		}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="872" endline="878">
public VFSFile[] _listFiles(Object session, String directory,
		Component comp)
		throws IOException
	{
		VFSManager.error(comp,directory,"vfs.not-supported.list",new String[] { name });
		return null;
	}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="1029" endline="1035">
public InputStream _createInputStream(Object session,
		String path, boolean ignoreErrors, Component comp)
		throws IOException
	{
		VFSManager.error(comp,path,"vfs.not-supported.load",new String[] { name });
		return null;
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="installer/TarOutputStream.java" startline="103" endline="108">
public void
	finish()
		throws IOException
		{
		this.writeEOFRecord();
		}
</source>
        <source file="installer/TarInputStream.java" startline="118" endline="123">
public void
	close()
		throws IOException
		{
		this.buffer.close();
		}
</source>
    </clone>
    <clone nlines="14" distance="2">
        <source file="org/gjt/sp/jedit/PluginJAR.java" startline="2073" endline="2086">
private static void writeStringArray(DataOutputStream dout,
			String[] str) throws IOException
		{
			if(str == null)
			{
				dout.writeInt(0);
			}
			else
			{
				dout.writeInt(str.length);
				for (String s : str)
					writeString(dout, s);
			}
		}
</source>
        <source file="org/gjt/sp/jedit/PluginJAR.java" startline="2089" endline="2102">
private static void writeBooleanArray(DataOutputStream dout,
			boolean[] bools) throws IOException
		{
			if(bools == null)
			{
				dout.writeInt(0);
			}
			else
			{
				dout.writeInt(bools.length);
				for (boolean bool : bools)
					dout.writeBoolean(bool);
			}
		}
</source>
    </clone>
    <clone nlines="13" distance="4">
        <source file="installer/CBZip2InputStream.java" startline="810" endline="822">
private void makeMaps()
    {
        m_nInUse = 0;
        for( int i = 0; i &lt; 256; i++ )
        {
            if( m_inUse[ i ] )
            {
                m_seqToUnseq[ m_nInUse ] = (char)i;
                m_unseqToSeq[ i ] = (char)m_nInUse;
                m_nInUse++;
            }
        }
    }
</source>
        <source file="installer/CBZip2OutputStream.java" startline="1189" endline="1202">
private void makeMaps()
    {
        int i;
        m_nInUse = 0;
        for( i = 0; i &lt; 256; i++ )
        {
            if( m_inUse[ i ] )
            {
                m_seqToUnseq[ m_nInUse ] = (char)i;
                m_unseqToSeq[ i ] = (char)m_nInUse;
                m_nInUse++;
            }
        }
    }
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/textarea/DisplayManager.java" startline="638" endline="643">
void invalidateScreenLineCounts()
	{
		screenLineMgr.invalidateScreenLineCounts();
		firstLine.setCallReset(true);
		scrollLineCount.setCallReset(true);
	}
</source>
        <source file="installer/SwingInstall.java" startline="398" endline="403">
public void run()
								{
									parent.remove(message);
									parent.revalidate();
									parent.repaint();
								}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="6444" endline="6449">
@Override
			public char first()
			{
				index = 0;
				return current();
			}
</source>
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="290" endline="295">
@Override
		public String getSymlinkPath()
		{
			fetchAttrs();
			return super.getSymlinkPath();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="6444" endline="6449">
@Override
			public char first()
			{
				index = 0;
				return current();
			}
</source>
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="298" endline="303">
@Override
		public long getLength()
		{
			fetchAttrs();
			return super.getLength();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="6444" endline="6449">
@Override
			public char first()
			{
				index = 0;
				return current();
			}
</source>
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="306" endline="311">
@Override
		public boolean isReadable()
		{
			fetchAttrs();
			return super.isReadable();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="6444" endline="6449">
@Override
			public char first()
			{
				index = 0;
				return current();
			}
</source>
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="314" endline="319">
@Override
		public boolean isWriteable()
		{
			fetchAttrs();
			return super.isWriteable();
		}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="6444" endline="6449">
@Override
			public char first()
			{
				index = 0;
				return current();
			}
</source>
        <source file="org/gjt/sp/jedit/help/HelpViewer.java" startline="462" endline="467">
@Override
			public void run()
			{
				queuedTOCReload = false;
				toc.load();
			}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="6444" endline="6449">
@Override
			public char first()
			{
				index = 0;
				return current();
			}
</source>
        <source file="org/gjt/sp/jedit/gui/HistoryModel.java" startline="127" endline="132">
@Override
	public void removeAllElements()
	{
		modified = true;
		super.removeAllElements();
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="6444" endline="6449">
@Override
			public char first()
			{
				index = 0;
				return current();
			}
</source>
        <source file="org/gjt/sp/jedit/JEditMode.java" startline="128" endline="133">
@Override
	public void init()
	{
		initialized = true;
		super.init();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/DockableWindowManagerImpl.java" startline="1033" endline="1038">
@Override
	public void disposeDockableWindow(String name)
	{
		// Nothing to do here; called as a response to plugin unloading,
		// handled differently by this implementation.
	}
</source>
        <source file="org/gjt/sp/jedit/menu/EnhancedMenu.java" startline="181" endline="187">
@EBHandler
		public void handlePropertiesChanged(PropertiesChanged msg)
		{
			// while this might be questionable, some
			// menus depend on properties
			menuOutOfDate = true;
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/DockableWindowManagerImpl.java" startline="1033" endline="1038">
@Override
	public void disposeDockableWindow(String name)
	{
		// Nothing to do here; called as a response to plugin unloading,
		// handled differently by this implementation.
	}
</source>
        <source file="org/gjt/sp/jedit/gui/CompletionPopup.java" startline="361" endline="368">
@Override
		public Object getElementAt(int index)
		{
			// This value is not used.
			// The list is only rendered by components
			// returned by getCellRenderer().
			return candidates;
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/PluginJAR.java" startline="1791" endline="1798">
@Override
			public void run()
			{
				if (!activated)
					return;

				startPlugin();
			}
</source>
        <source file="org/gjt/sp/jedit/search/SearchDialog.java" startline="246" endline="251">
@EBHandler
	public void handleSearchSettingsChanged(EBMessage msg)
	{
		if(!saving)
			load();
	}
</source>
    </clone>
    <clone nlines="9" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3807" endline="3815">
final private boolean jj_3R_161() {
    if (jj_3R_164()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_169()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4290" endline="4298">
final private boolean jj_3R_29() {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_7()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="9" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3828" endline="3836">
final private boolean jj_3R_158() {
    if (jj_3R_161()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_167()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4290" endline="4298">
final private boolean jj_3R_29() {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_7()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="9" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3864" endline="3872">
final private boolean jj_3R_153() {
    if (jj_3R_158()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_165()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4290" endline="4298">
final private boolean jj_3R_29() {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_7()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="9" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3905" endline="3913">
final private boolean jj_3R_148() {
    if (jj_3R_153()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_162()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4290" endline="4298">
final private boolean jj_3R_29() {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_7()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="9" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3946" endline="3954">
final private boolean jj_3R_135() {
    if (jj_3R_148()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_159()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4290" endline="4298">
final private boolean jj_3R_29() {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_7()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="9" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4250" endline="4258">
final private boolean jj_3R_76() {
    if (jj_3R_29()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_111()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4290" endline="4298">
final private boolean jj_3R_29() {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_7()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="9" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4260" endline="4268">
final private boolean jj_3R_134() {
    if (jj_3R_39()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_147()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4290" endline="4298">
final private boolean jj_3R_29() {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_7()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="9" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4501" endline="4509">
final private boolean jj_3R_75() {
    if (jj_3R_109()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_110()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4290" endline="4298">
final private boolean jj_3R_29() {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_7()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="9" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4543" endline="4551">
final private boolean jj_3R_163() {
    if (jj_3R_31()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_4()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4290" endline="4298">
final private boolean jj_3R_29() {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_7()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="9" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4728" endline="4736">
final private boolean jj_3R_205() {
    if (jj_3R_112()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_210()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4290" endline="4298">
final private boolean jj_3R_29() {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_7()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="9" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5061" endline="5069">
final private boolean jj_3R_33() {
    if (jj_3R_57()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_58()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4290" endline="4298">
final private boolean jj_3R_29() {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_7()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="9" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5355" endline="5363">
final private boolean jj_3R_183() {
    if (jj_3R_193()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_29()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4290" endline="4298">
final private boolean jj_3R_29() {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_7()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="9" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5464" endline="5472">
final private boolean jj_3R_181() {
    if (jj_3R_191()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_209()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4290" endline="4298">
final private boolean jj_3R_29() {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_7()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="9" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5485" endline="5493">
final private boolean jj_3R_178() {
    if (jj_3R_181()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_200()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4290" endline="4298">
final private boolean jj_3R_29() {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_7()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="9" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5534" endline="5542">
final private boolean jj_3R_170() {
    if (jj_3R_178()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_192()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4290" endline="4298">
final private boolean jj_3R_29() {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_7()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="9" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5590" endline="5598">
final private boolean jj_3R_168() {
    if (jj_3R_170()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_182()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4290" endline="4298">
final private boolean jj_3R_29() {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_7()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="9" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5671" endline="5679">
final private boolean jj_3R_164() {
    if (jj_3R_166()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_171()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4290" endline="4298">
final private boolean jj_3R_29() {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_7()) { jj_scanpos = xsp; break; }
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/bsh/ParserTokenManager.java" startline="1975" endline="1980">
public ParserTokenManager(JavaCharStream stream)
{
   if (JavaCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}
</source>
        <source file="org/gjt/sp/jedit/bsh/classpath/BshClassPath.java" startline="831" endline="836">
public static void addMappingFeedback( MappingFeedback mf ) 
	{
		if ( mappingFeedbackListener != null )
			throw new RuntimeException("Unimplemented: already a listener");
		mappingFeedbackListener = mf;
	}
</source>
    </clone>
    <clone nlines="11" distance="2">
        <source file="org/gjt/sp/jedit/pluginmgr/MirrorListHandler.java" startline="103" endline="113">
public void startDocument()
	{
		try
		{
			pushElement(null);
		}
		catch (Exception e)
		{
			Log.log(Log.ERROR, this, e);
		}
	}
</source>
        <source file="org/gjt/sp/jedit/ActionListHandler.java" startline="144" endline="155">
@Override
	public void startDocument()
	{
		try
		{
			pushElement(null);
		}
		catch (Exception e)
		{
			Log.log(Log.ERROR,this, e);
		}
	}
</source>
    </clone>
    <clone nlines="11" distance="2">
        <source file="org/gjt/sp/jedit/pluginmgr/MirrorListHandler.java" startline="103" endline="113">
public void startDocument()
	{
		try
		{
			pushElement(null);
		}
		catch (Exception e)
		{
			Log.log(Log.ERROR, this, e);
		}
	}
</source>
        <source file="org/gjt/sp/jedit/gui/DockableWindowFactory.java" startline="297" endline="308">
@Override
		public void startDocument()
		{
			try
			{
				pushElement(null);
			}
			catch (Exception e)
			{
				Log.log(Log.ERROR, this, e);
			}
		}
</source>
    </clone>
    <clone nlines="11" distance="2">
        <source file="org/gjt/sp/jedit/pluginmgr/PluginListHandler.java" startline="203" endline="213">
public void startDocument()
	{
		try
		{
			pushElement(null);
		}
		catch (Exception e)
		{
			Log.log(Log.ERROR, this, e);
		}
	}
</source>
        <source file="org/gjt/sp/jedit/ActionListHandler.java" startline="144" endline="155">
@Override
	public void startDocument()
	{
		try
		{
			pushElement(null);
		}
		catch (Exception e)
		{
			Log.log(Log.ERROR,this, e);
		}
	}
</source>
    </clone>
    <clone nlines="11" distance="2">
        <source file="org/gjt/sp/jedit/pluginmgr/PluginListHandler.java" startline="203" endline="213">
public void startDocument()
	{
		try
		{
			pushElement(null);
		}
		catch (Exception e)
		{
			Log.log(Log.ERROR, this, e);
		}
	}
</source>
        <source file="org/gjt/sp/jedit/gui/DockableWindowFactory.java" startline="297" endline="308">
@Override
		public void startDocument()
		{
			try
			{
				pushElement(null);
			}
			catch (Exception e)
			{
				Log.log(Log.ERROR, this, e);
			}
		}
</source>
    </clone>
    <clone nlines="11" distance="1">
        <source file="org/gjt/sp/jedit/pluginmgr/MirrorListHandler.java" startline="103" endline="113">
public void startDocument()
	{
		try
		{
			pushElement(null);
		}
		catch (Exception e)
		{
			Log.log(Log.ERROR, this, e);
		}
	}
</source>
        <source file="org/gjt/sp/jedit/ServiceListHandler.java" startline="104" endline="114">
public void startDocument()
	{
		try
		{
			pushElement(null);
		}
		catch (Exception e)
		{
			Log.log(Log.ERROR, e, e);
		}
	}
</source>
    </clone>
    <clone nlines="11" distance="1">
        <source file="org/gjt/sp/jedit/pluginmgr/PluginListHandler.java" startline="203" endline="213">
public void startDocument()
	{
		try
		{
			pushElement(null);
		}
		catch (Exception e)
		{
			Log.log(Log.ERROR, this, e);
		}
	}
</source>
        <source file="org/gjt/sp/jedit/ServiceListHandler.java" startline="104" endline="114">
public void startDocument()
	{
		try
		{
			pushElement(null);
		}
		catch (Exception e)
		{
			Log.log(Log.ERROR, e, e);
		}
	}
</source>
    </clone>
    <clone nlines="11" distance="3">
        <source file="org/gjt/sp/jedit/ServiceListHandler.java" startline="104" endline="114">
public void startDocument()
	{
		try
		{
			pushElement(null);
		}
		catch (Exception e)
		{
			Log.log(Log.ERROR, e, e);
		}
	}
</source>
        <source file="org/gjt/sp/jedit/ActionListHandler.java" startline="144" endline="155">
@Override
	public void startDocument()
	{
		try
		{
			pushElement(null);
		}
		catch (Exception e)
		{
			Log.log(Log.ERROR,this, e);
		}
	}
</source>
    </clone>
    <clone nlines="11" distance="3">
        <source file="org/gjt/sp/jedit/ServiceListHandler.java" startline="104" endline="114">
public void startDocument()
	{
		try
		{
			pushElement(null);
		}
		catch (Exception e)
		{
			Log.log(Log.ERROR, e, e);
		}
	}
</source>
        <source file="org/gjt/sp/jedit/gui/DockableWindowFactory.java" startline="297" endline="308">
@Override
		public void startDocument()
		{
			try
			{
				pushElement(null);
			}
			catch (Exception e)
			{
				Log.log(Log.ERROR, this, e);
			}
		}
</source>
    </clone>
    <clone nlines="7" distance="3">
        <source file="org/gjt/sp/jedit/bsh/Primitive.java" startline="830" endline="836">
public static Object [] unwrap( Object[] args )
    {
		Object [] oa = new Object[ args.length ];
        for(int i=0; i&lt;args.length; i++)
            oa[i] = unwrap( args[i] );
		return oa;
    }
</source>
        <source file="org/gjt/sp/jedit/bsh/ClassGeneratorUtil.java" startline="1072" endline="1078">
static String[] getTypeDescriptors( Class [] cparams )
	{
		String [] sa = new String [cparams.length];
		for(int i=0; i&lt;sa.length; i++)
			sa[i] = BSHType.getTypeDescriptor( cparams[i] );
		return sa;
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="231" endline="236">
protected VFS(String name, int caps, String[] extAttrs)
	{
		this.name = name;
		this.caps = caps;
		this.extAttrs = extAttrs;
	}
</source>
        <source file="org/gjt/sp/jedit/gui/tray/JEditSwingTrayIcon.java" startline="95" endline="101">
@Override
	void setTrayIconArgs(boolean restore, String userDir, String[] args)
	{
		this.restore = restore;
		this.userDir = userDir;
		this.args = args;
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="org/gjt/sp/jedit/options/ShortcutsOptionPane.java" startline="713" endline="721">
private boolean isValidName(Object name)
		{
			for (String keymap : keymaps)
			{
				if (keymap.equals(name))
					return true;
			}
			return false;
		}
</source>
        <source file="org/gjt/sp/jedit/Macros.java" startline="447" endline="456">
public static Handler getHandlerForPathName(String pathName)
	{
		for (Handler handler : macroHandlers)
		{
			if (handler.accept(pathName))
				return handler;
		}

		return null;
	}
</source>
    </clone>
    <clone nlines="13" distance="2">
        <source file="org/gjt/sp/jedit/PluginJAR.java" startline="1990" endline="2002">
private static String[] readStringArray(DataInputStream din)
			throws IOException
		{
			int len = din.readInt();
			if(len == 0)
				return null;
			String[] str = new String[len];
			for(int i = 0; i &lt; len; i++)
			{
				str[i] = readString(din);
			}
			return str;
		}
</source>
        <source file="org/gjt/sp/jedit/PluginJAR.java" startline="2005" endline="2017">
private static boolean[] readBooleanArray(DataInputStream din)
			throws IOException
		{
			int len = din.readInt();
			if(len == 0)
				return null;
			boolean[] bools = new boolean[len];
			for(int i = 0; i &lt; len; i++)
			{
				bools[i] = din.readBoolean();
			}
			return bools;
		}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="installer/CBZip2OutputStream.java" startline="504" endline="509">
private void bsSetStream( OutputStream f )
    {
        m_bsStream = f;
        m_bsLive = 0;
        m_bsBuff = 0;
    }
</source>
        <source file="installer/CBZip2InputStream.java" startline="664" endline="669">
private void bsSetStream( final InputStream input )
    {
        m_input = input;
        m_bsLive = 0;
        m_bsBuff = 0;
    }
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/bsh/Modifiers.java" startline="70" endline="75">
private void validateForClass() 
	{ 
		validateForMethod(); // volatile, transient
		insureNo("native", "Class");
		insureNo("synchronized", "Class");
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/Modifiers.java" startline="64" endline="69">
private void validateForField() 
	{ 
		insureNo("synchronized", "Variable");
		insureNo("native", "Variable");
		insureNo("abstract", "Variable");
	}
</source>
    </clone>
    <clone nlines="7" distance="3">
        <source file="org/gjt/sp/jedit/GUIUtilities.java" startline="2327" endline="2333">
private void cancelResizeSave()
		{
			if (resizeDelayFuture != null) {
				resizeDelayFuture.cancel(false);
				resizeDelayFuture = null;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/GUIUtilities.java" startline="1552" endline="1559">
public static void hideSplashScreen()
	{
		if(splash != null)
		{
			splash.dispose();
			splash = null;
		}
	}
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/GUIUtilities.java" startline="2327" endline="2333">
private void cancelResizeSave()
		{
			if (resizeDelayFuture != null) {
				resizeDelayFuture.cancel(false);
				resizeDelayFuture = null;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/gui/PingPongList.java" startline="165" endline="172">
public void removeLeftTitle()
	{
		if (leftLabel != null)
		{
			leftPanel.remove(leftLabel);
			leftLabel = null;
		}
	}
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/GUIUtilities.java" startline="2327" endline="2333">
private void cancelResizeSave()
		{
			if (resizeDelayFuture != null) {
				resizeDelayFuture.cancel(false);
				resizeDelayFuture = null;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/gui/PingPongList.java" startline="175" endline="182">
public void removeRightTitle()
	{
		if (rightLabel != null)
		{
			rightPanel.remove(rightLabel);
			rightLabel = null;
		}
	}
</source>
    </clone>
    <clone nlines="9" distance="1">
        <source file="org/gjt/sp/jedit/bsh/NameSpace.java" startline="1616" endline="1625">
String getPackage()
    {
        if ( packageName != null )
            return packageName;

        if ( parent != null )
            return parent.getPackage();

        return null;
    }
</source>
        <source file="org/gjt/sp/jedit/bsh/NameSpace.java" startline="221" endline="229">
SimpleNode getNode()
    {
        if ( callerInfoNode != null )
            return callerInfoNode;
        if ( parent != null )
            return parent.getNode();
        else
            return null;
    }
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="2725" endline="2731">
PropValue(Object value, boolean defaultValue)
		{
			if(value == null)
				throw new NullPointerException();
			this.value = value;
			this.defaultValue = defaultValue;
		}
</source>
        <source file="org/gjt/sp/util/PropertiesBean.java" startline="77" endline="83">
protected PropertiesBean(String root, char arraysep)
	{
		if (root == null)
			throw new IllegalArgumentException("root cannot be null");
		this.root = root;
		this.arraysep = arraysep;
	}
</source>
    </clone>
    <clone nlines="7" distance="1">
        <source file="org/gjt/sp/jedit/gui/FilesChangedDialog.java" startline="401" endline="407">
Renderer()
		{
			entryFont = UIManager.getFont("Tree.font");
			if(entryFont == null)
				entryFont = jEdit.getFontProperty("metal.secondary.font");
			groupFont = entryFont.deriveFont(Font.BOLD);
		}
</source>
        <source file="org/gjt/sp/jedit/browser/FileCellRenderer.java" startline="53" endline="59">
public FileCellRenderer()
	{
		plainFont = UIManager.getFont("Tree.font");
		if(plainFont == null)
			plainFont = jEdit.getFontProperty("metal.secondary.font");
		boldFont = plainFont.deriveFont(Font.BOLD);
	}
</source>
    </clone>
    <clone nlines="7" distance="1">
        <source file="org/gjt/sp/jedit/gui/FilesChangedDialog.java" startline="401" endline="407">
Renderer()
		{
			entryFont = UIManager.getFont("Tree.font");
			if(entryFont == null)
				entryFont = jEdit.getFontProperty("metal.secondary.font");
			groupFont = entryFont.deriveFont(Font.BOLD);
		}
</source>
        <source file="org/gjt/sp/jedit/gui/OptionsDialog.java" startline="500" endline="506">
public PaneNameRenderer()
		{
			paneFont = UIManager.getFont("Tree.font");
			if(paneFont == null)
				paneFont = jEdit.getFontProperty("metal.secondary.font");
			groupFont = paneFont.deriveFont(Font.BOLD);
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="75" endline="80">
@Override
	//{{{ getParent() method
	public Node getParent()
	{
		return parent;
	}
</source>
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="322" endline="327">
@Override
		public long getModified()
		{
			fetchAttrs();
			return modified;
		}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="75" endline="80">
@Override
	//{{{ getParent() method
	public Node getParent()
	{
		return parent;
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="68" endline="73">
@Override
	//{{{ getChildren() method
	public Vector&lt;Node&gt; getChildren()
	{
		return children;
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="75" endline="80">
@Override
	//{{{ getParent() method
	public Node getParent()
	{
		return parent;
	}
</source>
        <source file="org/gjt/sp/jedit/gui/CompletionPopup.java" startline="361" endline="368">
@Override
		public Object getElementAt(int index)
		{
			// This value is not used.
			// The list is only rendered by components
			// returned by getCellRenderer().
			return candidates;
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="322" endline="327">
@Override
		public long getModified()
		{
			fetchAttrs();
			return modified;
		}
</source>
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="290" endline="295">
@Override
		public String getSymlinkPath()
		{
			fetchAttrs();
			return super.getSymlinkPath();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="322" endline="327">
@Override
		public long getModified()
		{
			fetchAttrs();
			return modified;
		}
</source>
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="298" endline="303">
@Override
		public long getLength()
		{
			fetchAttrs();
			return super.getLength();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="322" endline="327">
@Override
		public long getModified()
		{
			fetchAttrs();
			return modified;
		}
</source>
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="306" endline="311">
@Override
		public boolean isReadable()
		{
			fetchAttrs();
			return super.isReadable();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="322" endline="327">
@Override
		public long getModified()
		{
			fetchAttrs();
			return modified;
		}
</source>
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="314" endline="319">
@Override
		public boolean isWriteable()
		{
			fetchAttrs();
			return super.isWriteable();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="322" endline="327">
@Override
		public long getModified()
		{
			fetchAttrs();
			return modified;
		}
</source>
        <source file="org/gjt/sp/jedit/proto/jeditresource/PluginResURLConnection.java" startline="141" endline="147">
@Nonnull
	public InputStream getInputStream()
		throws IOException, FileNotFoundException
	{
		connect();
		return in;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="322" endline="327">
@Override
		public long getModified()
		{
			fetchAttrs();
			return modified;
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="6444" endline="6449">
@Override
			public char first()
			{
				index = 0;
				return current();
			}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/util/Task.java" startline="96" endline="101">
@Override
	public void setStatus(String status)
	{
		this.status = status;
		TaskManager.instance.fireStatusUpdated(this);
	}
</source>
        <source file="org/gjt/sp/util/Task.java" startline="82" endline="87">
@Override
	public final void setValue(long value)
	{
		this.value = value;
		TaskManager.instance.fireValueUpdated(this);
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/util/Task.java" startline="96" endline="101">
@Override
	public void setStatus(String status)
	{
		this.status = status;
		TaskManager.instance.fireStatusUpdated(this);
	}
</source>
        <source file="org/gjt/sp/util/Task.java" startline="89" endline="94">
@Override
	public final void setMaximum(long maximum)
	{
		this.maximum = maximum;
		TaskManager.instance.fireMaximumUpdated(this);
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/HistoryModel.java" startline="127" endline="132">
@Override
	public void removeAllElements()
	{
		modified = true;
		super.removeAllElements();
	}
</source>
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="290" endline="295">
@Override
		public String getSymlinkPath()
		{
			fetchAttrs();
			return super.getSymlinkPath();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/HistoryModel.java" startline="127" endline="132">
@Override
	public void removeAllElements()
	{
		modified = true;
		super.removeAllElements();
	}
</source>
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="298" endline="303">
@Override
		public long getLength()
		{
			fetchAttrs();
			return super.getLength();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/HistoryModel.java" startline="127" endline="132">
@Override
	public void removeAllElements()
	{
		modified = true;
		super.removeAllElements();
	}
</source>
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="306" endline="311">
@Override
		public boolean isReadable()
		{
			fetchAttrs();
			return super.isReadable();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/HistoryModel.java" startline="127" endline="132">
@Override
	public void removeAllElements()
	{
		modified = true;
		super.removeAllElements();
	}
</source>
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="314" endline="319">
@Override
		public boolean isWriteable()
		{
			fetchAttrs();
			return super.isWriteable();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/JEditMode.java" startline="128" endline="133">
@Override
	public void init()
	{
		initialized = true;
		super.init();
	}
</source>
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="290" endline="295">
@Override
		public String getSymlinkPath()
		{
			fetchAttrs();
			return super.getSymlinkPath();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/JEditMode.java" startline="128" endline="133">
@Override
	public void init()
	{
		initialized = true;
		super.init();
	}
</source>
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="298" endline="303">
@Override
		public long getLength()
		{
			fetchAttrs();
			return super.getLength();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/JEditMode.java" startline="128" endline="133">
@Override
	public void init()
	{
		initialized = true;
		super.init();
	}
</source>
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="306" endline="311">
@Override
		public boolean isReadable()
		{
			fetchAttrs();
			return super.isReadable();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/JEditMode.java" startline="128" endline="133">
@Override
	public void init()
	{
		initialized = true;
		super.init();
	}
</source>
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="314" endline="319">
@Override
		public boolean isWriteable()
		{
			fetchAttrs();
			return super.isWriteable();
		}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/gui/HistoryModel.java" startline="127" endline="132">
@Override
	public void removeAllElements()
	{
		modified = true;
		super.removeAllElements();
	}
</source>
        <source file="org/gjt/sp/jedit/help/HelpViewer.java" startline="462" endline="467">
@Override
			public void run()
			{
				queuedTOCReload = false;
				toc.load();
			}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/JEditMode.java" startline="128" endline="133">
@Override
	public void init()
	{
		initialized = true;
		super.init();
	}
</source>
        <source file="org/gjt/sp/jedit/help/HelpViewer.java" startline="462" endline="467">
@Override
			public void run()
			{
				queuedTOCReload = false;
				toc.load();
			}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/options/StatusBarOptionPane.java" startline="540" endline="545">
@Override
		public void cancel()
		{
			value = null;
			dispose();
		}
</source>
        <source file="org/gjt/sp/jedit/gui/AddModeDialog.java" startline="154" endline="159">
@Override
		public void cancel()
		{
			canceled = true;
			dispose();
		}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/options/StatusBarOptionPane.java" startline="540" endline="545">
@Override
		public void cancel()
		{
			value = null;
			dispose();
		}
</source>
        <source file="org/gjt/sp/jedit/gui/ContextAddDialog.java" startline="157" endline="162">
@Override
	public void ok()
	{
		isOK = true;
		dispose();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/options/StatusBarOptionPane.java" startline="540" endline="545">
@Override
		public void cancel()
		{
			value = null;
			dispose();
		}
</source>
        <source file="org/gjt/sp/jedit/gui/BufferSwitcher.java" startline="69" endline="74">
@Override
			public void popupMenuWillBecomeVisible(
				PopupMenuEvent e)
			{
				itemSelectedBefore = getSelectedItem();
			}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/options/StatusBarOptionPane.java" startline="540" endline="545">
@Override
		public void cancel()
		{
			value = null;
			dispose();
		}
</source>
        <source file="org/gjt/sp/jedit/help/HelpViewer.java" startline="462" endline="467">
@Override
			public void run()
			{
				queuedTOCReload = false;
				toc.load();
			}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/options/StatusBarOptionPane.java" startline="540" endline="545">
@Override
		public void cancel()
		{
			value = null;
			dispose();
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="6444" endline="6449">
@Override
			public char first()
			{
				index = 0;
				return current();
			}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/options/StatusBarOptionPane.java" startline="540" endline="545">
@Override
		public void cancel()
		{
			value = null;
			dispose();
		}
</source>
        <source file="org/gjt/sp/jedit/gui/HistoryModel.java" startline="127" endline="132">
@Override
	public void removeAllElements()
	{
		modified = true;
		super.removeAllElements();
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/options/StatusBarOptionPane.java" startline="540" endline="545">
@Override
		public void cancel()
		{
			value = null;
			dispose();
		}
</source>
        <source file="org/gjt/sp/jedit/JEditMode.java" startline="128" endline="133">
@Override
	public void init()
	{
		initialized = true;
		super.init();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/options/StatusBarOptionPane.java" startline="540" endline="545">
@Override
		public void cancel()
		{
			value = null;
			dispose();
		}
</source>
        <source file="org/gjt/sp/jedit/EditPane.java" startline="645" endline="650">
@EBHandler
	public void handlePropertiesChanged(PropertiesChanged msg)
	{
		propertiesChanged();
		loadBufferSwitcher();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/ActionBar.java" startline="415" endline="420">
@Override
		public void addNotify()
		{
			super.addNotify();
			repeat = nonDigit = false;
		}
</source>
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="414" endline="419">
@Override
	public void addNotify()
	{
		super.addNotify();
		EditBus.addToBus(this);
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/ActionBar.java" startline="415" endline="420">
@Override
		public void addNotify()
		{
			super.addNotify();
			repeat = nonDigit = false;
		}
</source>
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="127" endline="132">
@Override
	public void addNotify()
	{
		super.addNotify();
		EditBus.addToBus(this);
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/ActionBar.java" startline="415" endline="420">
@Override
		public void addNotify()
		{
			super.addNotify();
			repeat = nonDigit = false;
		}
</source>
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="135" endline="140">
@Override
	public void removeNotify()
	{
		super.removeNotify();
		EditBus.removeFromBus(this);
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/ActionBar.java" startline="415" endline="420">
@Override
		public void addNotify()
		{
			super.addNotify();
			repeat = nonDigit = false;
		}
</source>
        <source file="org/gjt/sp/util/ThreadUtilities.java" startline="241" endline="246">
@Override
		public void run()
		{
			runnable.run();
			done.countDown();
		}
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4691" endline="4698">
final private boolean jj_3R_120() {
    if (jj_scan_token(CONTINUE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(69)) jj_scanpos = xsp;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5114" endline="5123">
final private boolean jj_3_12() {
    if (jj_3R_33()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(100)) {
    jj_scanpos = xsp;
    if (jj_scan_token(101)) return true;
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4691" endline="4698">
final private boolean jj_3R_120() {
    if (jj_scan_token(CONTINUE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(69)) jj_scanpos = xsp;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5148" endline="5157">
final private boolean jj_3R_218() {
    if (jj_3R_33()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(100)) {
    jj_scanpos = xsp;
    if (jj_scan_token(101)) return true;
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4691" endline="4698">
final private boolean jj_3R_120() {
    if (jj_scan_token(CONTINUE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(69)) jj_scanpos = xsp;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5649" endline="5658">
final private boolean jj_3_24() {
    if (jj_3R_41()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(13)) {
    jj_scanpos = xsp;
    if (jj_scan_token(37)) return true;
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4700" endline="4707">
final private boolean jj_3R_119() {
    if (jj_scan_token(BREAK)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(69)) jj_scanpos = xsp;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5114" endline="5123">
final private boolean jj_3_12() {
    if (jj_3R_33()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(100)) {
    jj_scanpos = xsp;
    if (jj_scan_token(101)) return true;
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4700" endline="4707">
final private boolean jj_3R_119() {
    if (jj_scan_token(BREAK)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(69)) jj_scanpos = xsp;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5148" endline="5157">
final private boolean jj_3R_218() {
    if (jj_3R_33()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(100)) {
    jj_scanpos = xsp;
    if (jj_scan_token(101)) return true;
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4700" endline="4707">
final private boolean jj_3R_119() {
    if (jj_scan_token(BREAK)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(69)) jj_scanpos = xsp;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5649" endline="5658">
final private boolean jj_3_24() {
    if (jj_3R_41()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(13)) {
    jj_scanpos = xsp;
    if (jj_scan_token(37)) return true;
    }
    return false;
  }
</source>
    </clone>
    <clone nlines="11" distance="4">
        <source file="org/gjt/sp/jedit/menu/EnhancedMenuItem.java" startline="91" endline="101">
public Dimension getPreferredSize()
	{
		Dimension d = super.getPreferredSize();

		if(shortcut != null)
		{
			FontMetrics fm = getFontMetrics(acceleratorFont);
			d.width += (fm.stringWidth(shortcut) + fm.stringWidth("AAAA"));
		}
		return d;
	}
</source>
        <source file="org/gjt/sp/jedit/menu/EnhancedCheckBoxMenuItem.java" startline="96" endline="107">
@Override
	public Dimension getPreferredSize()
	{
		Dimension d = super.getPreferredSize();

		if(shortcut != null)
		{
			FontMetrics fm = getFontMetrics(EnhancedMenuItem.acceleratorFont);
			d.width += (fm.stringWidth(shortcut) + fm.stringWidth("AAAA"));
		}
		return d;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/EditAbbrevDialog.java" startline="56" endline="62">
public String getAbbrev()
	{
		if(!isOK)
			return null;

		return editor.getAbbrev();
	}
</source>
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="2385" endline="2390">
public boolean canUndo()
	{
		if (undoMgr == null)
			return false;
		return undoMgr.canUndo();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/EditAbbrevDialog.java" startline="56" endline="62">
public String getAbbrev()
	{
		if(!isOK)
			return null;

		return editor.getAbbrev();
	}
</source>
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="2397" endline="2402">
public boolean canRedo()
	{
		if (undoMgr == null)
			return false;
		return undoMgr.canRedo();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/EditAbbrevDialog.java" startline="65" endline="71">
public String getExpansion()
	{
		if(!isOK)
			return null;

		return editor.getExpansion();
	}
</source>
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="2385" endline="2390">
public boolean canUndo()
	{
		if (undoMgr == null)
			return false;
		return undoMgr.canUndo();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/EditAbbrevDialog.java" startline="65" endline="71">
public String getExpansion()
	{
		if(!isOK)
			return null;

		return editor.getExpansion();
	}
</source>
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="2397" endline="2402">
public boolean canRedo()
	{
		if (undoMgr == null)
			return false;
		return undoMgr.canRedo();
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/gui/EditAbbrevDialog.java" startline="56" endline="62">
public String getAbbrev()
	{
		if(!isOK)
			return null;

		return editor.getAbbrev();
	}
</source>
        <source file="org/gjt/sp/jedit/View.java" startline="959" endline="965">
public Buffer getBuffer()
	{
		if(editPane == null)
			return null;
		else
			return editPane.getBuffer();
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/gui/EditAbbrevDialog.java" startline="56" endline="62">
public String getAbbrev()
	{
		if(!isOK)
			return null;

		return editor.getAbbrev();
	}
</source>
        <source file="org/gjt/sp/jedit/View.java" startline="1042" endline="1048">
public JEditTextArea getTextArea()
	{
		if(editPane == null)
			return null;
		else
			return editPane.getTextArea();
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/gui/EditAbbrevDialog.java" startline="65" endline="71">
public String getExpansion()
	{
		if(!isOK)
			return null;

		return editor.getExpansion();
	}
</source>
        <source file="org/gjt/sp/jedit/View.java" startline="959" endline="965">
public Buffer getBuffer()
	{
		if(editPane == null)
			return null;
		else
			return editPane.getBuffer();
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/gui/EditAbbrevDialog.java" startline="65" endline="71">
public String getExpansion()
	{
		if(!isOK)
			return null;

		return editor.getExpansion();
	}
</source>
        <source file="org/gjt/sp/jedit/View.java" startline="1042" endline="1048">
public JEditTextArea getTextArea()
	{
		if(editPane == null)
			return null;
		else
			return editPane.getTextArea();
	}
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="installer/TarEntry.java" startline="144" endline="150">
public boolean
	equals( TarEntry it )
		{
		return
			this.header.name.toString().equals
				( it.header.name.toString() );
		}
</source>
        <source file="installer/TarEntry.java" startline="160" endline="166">
public boolean
	isDescendent( TarEntry desc )
		{
		return
			desc.header.name.toString().startsWith
				( this.header.name.toString() );
		}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="org/gjt/sp/jedit/Buffer.java" startline="1473" endline="1481">
public Marker getMarker(char shortcut)
	{
		for (Marker marker : markers)
		{
			if(marker.getShortcut() == shortcut)
				return marker;
		}
		return null;
	}
</source>
        <source file="org/gjt/sp/jedit/Macros.java" startline="447" endline="456">
public static Handler getHandlerForPathName(String pathName)
	{
		for (Handler handler : macroHandlers)
		{
			if (handler.accept(pathName))
				return handler;
		}

		return null;
	}
</source>
    </clone>
    <clone nlines="9" distance="3">
        <source file="org/gjt/sp/jedit/Buffer.java" startline="1473" endline="1481">
public Marker getMarker(char shortcut)
	{
		for (Marker marker : markers)
		{
			if(marker.getShortcut() == shortcut)
				return marker;
		}
		return null;
	}
</source>
        <source file="org/gjt/sp/jedit/Buffer.java" startline="1411" endline="1420">
public Marker getMarkerAtLine(int line)
	{
		for (Marker marker : markers)
		{
			if (getLineOfOffset(marker.getPosition()) == line)
				return marker;
		}

		return null;
	}
</source>
    </clone>
    <clone nlines="12" distance="2">
        <source file="org/gjt/sp/jedit/options/BrowserColorsOptionPane.java" startline="340" endline="351">
public Class getColumnClass(int col)
	{
		switch(col)
		{
		case 0:
			return String.class;
		case 1:
			return Color.class;
		default:
			throw new InternalError();
		}
	}
</source>
        <source file="org/gjt/sp/jedit/gui/JCheckBoxList.java" startline="316" endline="328">
@Override
	public Class getColumnClass(int col)
	{
		switch(col)
		{
		case 0:
			return Boolean.class;
		case 1:
			return String.class;
		default:
			throw new InternalError();
		}
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="installer/TarInputStream.java" startline="502" endline="507">
public TarEntry
		createEntry( File path )
			throws InvalidHeaderException
			{
			return new TarEntry( path );
			}
</source>
        <source file="installer/TarInputStream.java" startline="509" endline="514">
public TarEntry
		createEntry( byte[] headerBuf )
			throws InvalidHeaderException
			{
			return new TarEntry( headerBuf );
			}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/msg/DynamicMenuChanged.java" startline="44" endline="49">
public DynamicMenuChanged(String name)
	{
		super(null);

		this.name = name;
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/classpath/DiscreteFilesClassLoader.java" startline="63" endline="68">
public DiscreteFilesClassLoader( 
		BshClassManager classManager, ClassSourceMap map ) 
	{
		super( classManager );
		this.map = map;
	}
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/msg/VFSUpdate.java" startline="37" endline="45">
public VFSUpdate(String path)
	{
		super(null);

		if(path == null)
			throw new NullPointerException("Path must be non-null");

		this.path = path;
	}
</source>
        <source file="org/gjt/sp/jedit/msg/EditPaneUpdate.java" startline="68" endline="75">
public EditPaneUpdate(EditPane editPane, Object what)
	{
		super(editPane);
		if(what == null)
			throw new NullPointerException("What must be non-null");

		this.what = what;
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="org/gjt/sp/jedit/msg/VFSUpdate.java" startline="37" endline="45">
public VFSUpdate(String path)
	{
		super(null);

		if(path == null)
			throw new NullPointerException("Path must be non-null");

		this.path = path;
	}
</source>
        <source file="org/gjt/sp/jedit/msg/ViewUpdate.java" startline="71" endline="79">
public ViewUpdate(View view, Object what)
	{
		super(view);

		if(what == null)
			throw new NullPointerException("What must be non-null");

		this.what = what;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="installer/TarEntry.java" startline="92" endline="97">
public
	TarEntry( String name )
		{
		this.initialize();
		this.nameTarHeader( this.header, name );
		}
</source>
        <source file="installer/TarEntry.java" startline="119" endline="125">
public
	TarEntry( byte[] headerBuf )
		throws InvalidHeaderException
		{
		this.initialize();
		this.parseTarHeader( this.header, headerBuf );
		}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="installer/TarEntry.java" startline="92" endline="97">
public
	TarEntry( String name )
		{
		this.initialize();
		this.nameTarHeader( this.header, name );
		}
</source>
        <source file="installer/TarEntry.java" startline="105" endline="111">
public
	TarEntry( File file )
		throws InvalidHeaderException
		{
		this.initialize();
		this.getFileTarHeader( this.header, file );
		}
</source>
    </clone>
    <clone nlines="7" distance="1">
        <source file="org/gjt/sp/util/TaskManager.java" startline="89" endline="95">
public void removeTaskListener(TaskListener listener)
	{
		if (listeners.contains(listener))
		{
			listeners.remove(listener);
		}
	}
</source>
        <source file="org/gjt/sp/util/TaskManager.java" startline="81" endline="87">
public void addTaskListener(TaskListener listener)
	{
		if (!listeners.contains(listener))
		{
			listeners.add(listener);
		}
	}
</source>
    </clone>
    <clone nlines="9" distance="3">
        <source file="org/gjt/sp/jedit/pluginmgr/PluginManager.java" startline="357" endline="365">
public void processKeyEvents(KeyEvent ke)
	{
		if ((ke.getID() == KeyEvent.KEY_PRESSED) &amp;&amp;
		    (ke.getKeyCode() == KeyEvent.VK_ESCAPE))
		{
			cancel();
			ke.consume();
		}
	}
</source>
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="1797" endline="1806">
public void keyPressed(KeyEvent e)
		{
			if ((e.getKeyCode() == KeyEvent.VK_DOWN) ||
			    (e.getKeyCode() == KeyEvent.VK_ENTER ))
			{
				doPopup();
				e.consume();
				return;
			}
		}
</source>
    </clone>
    <clone nlines="7" distance="3">
        <source file="org/gjt/sp/jedit/bsh/JavaCharStream.java" startline="491" endline="497">
public void Done()
  {
     nextCharBuf = null;
     buffer = null;
     bufline = null;
     bufcolumn = null;
  }
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="60" endline="67">
@AfterClass
	public static void oneTimeTearDown()
	{
		native2ASCIIEncoding = null;
		iso_8859_1 = null;
		bufferArray = null;
		buffer = null;
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/textarea/Gutter.java" startline="290" endline="296">
public void updateBorder()
	{
		if (textArea.hasFocus())
			setBorder(focusBorder);
		else
			setBorder(noFocusBorder);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/DockableWindowManager.java" startline="263" endline="269">
public void toggleDockableWindow(String name)
	{
		if(isDockableWindowVisible(name))
			removeDockableWindow(name);
		else
			addDockableWindow(name);
	}
</source>
    </clone>
    <clone nlines="15" distance="4">
        <source file="org/gjt/sp/jedit/bsh/ClassGenerator.java" startline="10" endline="24">
public static ClassGenerator getClassGenerator() 
		throws UtilEvalError
	{
		if ( cg == null ) 
		{
			try {
				Class clas = Class.forName( "org.gjt.sp.jedit.bsh.ClassGeneratorImpl" );
				cg = (ClassGenerator)clas.newInstance();
			} catch ( Exception e ) {
				throw new Unavailable("ClassGenerator unavailable: "+e);
			}
		}
	
		return cg;
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/ReflectManager.java" startline="53" endline="68">
public static ReflectManager getReflectManager() 
		throws Unavailable
	{
		if ( rfm == null ) 
		{
			Class clas;
			try {
				clas = Class.forName( "org.gjt.sp.jedit.bsh.reflect.ReflectManagerImpl" );
				rfm = (ReflectManager)clas.newInstance();
			} catch ( Exception e ) {
				throw new Unavailable("Reflect Manager unavailable: "+e);
			}
		}
	
		return rfm;
	}
</source>
    </clone>
    <clone nlines="10" distance="4">
        <source file="org/gjt/sp/jedit/search/BufferListSet.java" startline="40" endline="49">
public synchronized String getFirstFile(View view)
	{
		if(files == null)
			files = _getFiles(view);

		if(files == null || files.length == 0)
			return null;
		else
			return files[0];
	}
</source>
        <source file="org/gjt/sp/jedit/search/BufferListSet.java" startline="52" endline="61">
public synchronized String getLastFile(View view)
	{
		if(files == null)
			files = _getFiles(view);

		if(files == null || files.length == 0)
			return null;
		else
			return files[files.length - 1];
	}
</source>
    </clone>
    <clone nlines="44" distance="2">
        <source file="org/gjt/sp/jedit/bsh/ParseException.java" startline="221" endline="264">
protected String add_escapes(String str) {
      StringBuilder retval = new StringBuilder();
      char ch;
      for (int i = 0; i &lt; str.length(); i++) {
        switch (str.charAt(i))
        {
           case 0 :
              continue;
           case '\b':
              retval.append("\\b");
              continue;
           case '\t':
              retval.append("\\t");
              continue;
           case '\n':
              retval.append("\\n");
              continue;
           case '\f':
              retval.append("\\f");
              continue;
           case '\r':
              retval.append("\\r");
              continue;
           case '\"':
              retval.append("\\\"");
              continue;
           case '\'':
              retval.append("\\\'");
              continue;
           case '\\':
              retval.append("\\\\");
              continue;
           default:
              if ((ch = str.charAt(i)) &lt; 0x20 || ch &gt; 0x7e) {
                 String s = "0000" + Integer.toString(ch, 16);
                 retval.append("\\u" + s.substring(s.length() - 4, s.length()));
              } else {
                 retval.append(ch);
              }
              continue;
        }
      }
      return retval.toString();
   }
</source>
        <source file="org/gjt/sp/jedit/bsh/TokenMgrError.java" startline="40" endline="83">
protected static final String addEscapes(String str) {
	  StringBuilder retval = new StringBuilder();
      char ch;
      for (int i = 0; i &lt; str.length(); i++) {
        switch (str.charAt(i))
        {
           case 0 :
              continue;
           case '\b':
              retval.append("\\b");
              continue;
           case '\t':
              retval.append("\\t");
              continue;
           case '\n':
              retval.append("\\n");
              continue;
           case '\f':
              retval.append("\\f");
              continue;
           case '\r':
              retval.append("\\r");
              continue;
           case '\"':
              retval.append("\\\"");
              continue;
           case '\'':
              retval.append("\\\'");
              continue;
           case '\\':
              retval.append("\\\\");
              continue;
           default:
              if ((ch = str.charAt(i)) &lt; 0x20 || ch &gt; 0x7e) {
                 String s = "0000" + Integer.toString(ch, 16);
                 retval.append("\\u" + s.substring(s.length() - 4, s.length()));
              } else {
                 retval.append(ch);
              }
              continue;
        }
      }
      return retval.toString();
   }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/NameSpace.java" startline="491" endline="497">
This getThis( Interpreter declaringInterpreter )
    {
        if ( thisReference == null )
            thisReference = This.getThis( this, declaringInterpreter );

        return thisReference;
    }
</source>
        <source file="org/gjt/sp/jedit/search/HyperSearchResult.java" startline="49" endline="54">
public Buffer getBuffer(View view)
	{
		if(buffer == null)
			buffer = jEdit.openFile(view,path);
		return buffer;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/HistoryModel.java" startline="119" endline="124">
@Override
	public boolean removeElement(Object obj)
	{
		modified = true;
		return super.removeElement(obj);
	}
</source>
        <source file="org/gjt/sp/jedit/browser/VFSDirectoryEntryTable.java" startline="267" endline="273">
@Override
	public void scrollRectToVisible(Rectangle rect)
	{
		// avoid scrolling to the right
		rect.width = 0;
		super.scrollRectToVisible(rect);
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/statusbar/BufferSetWidgetFactory.java" startline="72" endline="77">
@Override
				public void removeNotify()
				{
					super.removeNotify();
					EditBus.removeFromBus(BufferSetWidget.this);
				}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/TaskMonitorWidgetFactory.java" startline="93" endline="98">
@Override
        public void removeNotify()
        {
            super.removeNotify();
            TaskManager.instance.removeTaskListener(this);
        }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/statusbar/LastModifiedWidgetFactory.java" startline="75" endline="80">
@Override
				public void removeNotify()
				{
					super.removeNotify();
					EditBus.removeFromBus(LastModifiedWidget.this);
				}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/TaskMonitorWidgetFactory.java" startline="93" endline="98">
@Override
        public void removeNotify()
        {
            super.removeNotify();
            TaskManager.instance.removeTaskListener(this);
        }
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/statusbar/BufferSetWidgetFactory.java" startline="72" endline="77">
@Override
				public void removeNotify()
				{
					super.removeNotify();
					EditBus.removeFromBus(BufferSetWidget.this);
				}
</source>
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="175" endline="180">
@Override
	public void addNotify()
	{
		super.addNotify();
		TaskManager.instance.addTaskListener(taskHandler);
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/statusbar/BufferSetWidgetFactory.java" startline="72" endline="77">
@Override
				public void removeNotify()
				{
					super.removeNotify();
					EditBus.removeFromBus(BufferSetWidget.this);
				}
</source>
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="183" endline="188">
@Override
	public void removeNotify()
	{
		super.removeNotify();
		TaskManager.instance.removeTaskListener(taskHandler);
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/statusbar/LastModifiedWidgetFactory.java" startline="75" endline="80">
@Override
				public void removeNotify()
				{
					super.removeNotify();
					EditBus.removeFromBus(LastModifiedWidget.this);
				}
</source>
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="175" endline="180">
@Override
	public void addNotify()
	{
		super.addNotify();
		TaskManager.instance.addTaskListener(taskHandler);
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/statusbar/LastModifiedWidgetFactory.java" startline="75" endline="80">
@Override
				public void removeNotify()
				{
					super.removeNotify();
					EditBus.removeFromBus(LastModifiedWidget.this);
				}
</source>
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="183" endline="188">
@Override
	public void removeNotify()
	{
		super.removeNotify();
		TaskManager.instance.removeTaskListener(taskHandler);
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="175" endline="180">
@Override
	public void addNotify()
	{
		super.addNotify();
		TaskManager.instance.addTaskListener(taskHandler);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/TaskMonitorWidgetFactory.java" startline="85" endline="91">
@Override
        public void addNotify()
        {
            super.addNotify();
            TaskManager.instance.addTaskListener(this);
            update();
        }
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="183" endline="188">
@Override
	public void removeNotify()
	{
		super.removeNotify();
		TaskManager.instance.removeTaskListener(taskHandler);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/TaskMonitorWidgetFactory.java" startline="85" endline="91">
@Override
        public void addNotify()
        {
            super.addNotify();
            TaskManager.instance.addTaskListener(this);
            update();
        }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="175" endline="180">
@Override
	public void addNotify()
	{
		super.addNotify();
		TaskManager.instance.addTaskListener(taskHandler);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/TaskMonitorWidgetFactory.java" startline="93" endline="98">
@Override
        public void removeNotify()
        {
            super.removeNotify();
            TaskManager.instance.removeTaskListener(this);
        }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="183" endline="188">
@Override
	public void removeNotify()
	{
		super.removeNotify();
		TaskManager.instance.removeTaskListener(taskHandler);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/TaskMonitorWidgetFactory.java" startline="93" endline="98">
@Override
        public void removeNotify()
        {
            super.removeNotify();
            TaskManager.instance.removeTaskListener(this);
        }
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="175" endline="180">
@Override
	public void addNotify()
	{
		super.addNotify();
		TaskManager.instance.addTaskListener(taskHandler);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/SelectionLengthWidgetFactory.java" startline="127" endline="133">
@Override
			public void addNotify()
			{
				super.addNotify();
				visible = true;
				textArea.addCaretListener(this);
			}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="183" endline="188">
@Override
	public void removeNotify()
	{
		super.removeNotify();
		TaskManager.instance.removeTaskListener(taskHandler);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/SelectionLengthWidgetFactory.java" startline="127" endline="133">
@Override
			public void addNotify()
			{
				super.addNotify();
				visible = true;
				textArea.addCaretListener(this);
			}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="430" endline="435">
@Test
	public void readShouldCorrectlyHandleEOF() throws IOException
	{
		int c = getReader("").read();
		assertThat(c, is(equalTo(-1)));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="437" endline="442">
@Test
	public void read_charArray_ShouldCorrectlyHandleEOF() throws IOException
	{
		int c = getReader("").read(bufferArray);
		assertThat(c, is(equalTo(-1)));
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="430" endline="435">
@Test
	public void readShouldCorrectlyHandleEOF() throws IOException
	{
		int c = getReader("").read();
		assertThat(c, is(equalTo(-1)));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="114" endline="119">
@Test
	public void readShouldConvertEscapeSequence() throws IOException
	{
		int c = getReader("\\u21aF").read();
		assertThat((char) c, is(equalTo('\u21aF')));
	}
</source>
    </clone>
    <clone nlines="10" distance="1">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1433" endline="1442">
@Test
	public void append_CharSequence_int_int_ShouldEncodeASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append("\\u21aF", 0, 6);
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21aF")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1538" endline="1547">
@Test
	public void append_CharSequence_int_int_ShouldEncodeNullCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append(null, 0, 4);
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("null")));
	}
</source>
    </clone>
    <clone nlines="10" distance="1">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1516" endline="1525">
@Test
	public void append_CharSequence_int_int_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append("\u21AF", 0, 1);
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1538" endline="1547">
@Test
	public void append_CharSequence_int_int_ShouldEncodeNullCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append(null, 0, 4);
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("null")));
	}
</source>
    </clone>
    <clone nlines="10" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1549" endline="1558">
@Test
	public void append_CharSequence_ShouldEncodeNullCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append(null);
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("null")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1538" endline="1547">
@Test
	public void append_CharSequence_int_int_ShouldEncodeNullCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append(null, 0, 4);
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("null")));
	}
</source>
    </clone>
    <clone nlines="10" distance="1">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1549" endline="1558">
@Test
	public void append_CharSequence_ShouldEncodeNullCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append(null);
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("null")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1444" endline="1453">
@Test
	public void append_CharSequence_ShouldEncodeASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append("\\u21aF");
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21aF")));
	}
</source>
    </clone>
    <clone nlines="10" distance="1">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1549" endline="1558">
@Test
	public void append_CharSequence_ShouldEncodeNullCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append(null);
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("null")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1505" endline="1514">
@Test
	public void append_char_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append('\u21AF');
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
    </clone>
    <clone nlines="10" distance="1">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1549" endline="1558">
@Test
	public void append_CharSequence_ShouldEncodeNullCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append(null);
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("null")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1527" endline="1536">
@Test
	public void append_CharSequence_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append("\u21AF");
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
    </clone>
    <clone nlines="7" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3971" endline="3977">
final private boolean jj_3R_108() {
    if (jj_3R_135()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_156()) jj_scanpos = xsp;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4678" endline="4684">
final private boolean jj_3R_176() {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_180()) jj_scanpos = xsp;
    return false;
  }
</source>
    </clone>
    <clone nlines="7" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4121" endline="4127">
final private boolean jj_3R_152() {
    if (jj_3R_69()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_17()) jj_scanpos = xsp;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4678" endline="4684">
final private boolean jj_3R_176() {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_180()) jj_scanpos = xsp;
    return false;
  }
</source>
    </clone>
    <clone nlines="7" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5627" endline="5633">
final private boolean jj_3R_166() {
    if (jj_3R_168()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_179()) jj_scanpos = xsp;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4678" endline="4684">
final private boolean jj_3R_176() {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_180()) jj_scanpos = xsp;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4833" endline="4838">
final private boolean jj_3_15() {
    if (jj_3R_32()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_scan_token(CLASS)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4157" endline="4162">
final private boolean jj_3_19() {
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4833" endline="4838">
final private boolean jj_3_15() {
    if (jj_3R_32()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_scan_token(CLASS)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4575" endline="4580">
final private boolean jj_3R_123() {
    if (jj_scan_token(THROW)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4833" endline="4838">
final private boolean jj_3_15() {
    if (jj_3R_32()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_scan_token(CLASS)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4721" endline="4726">
final private boolean jj_3R_133() {
    if (jj_scan_token(LBRACE)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACE)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4833" endline="4838">
final private boolean jj_3_15() {
    if (jj_3R_32()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_scan_token(CLASS)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4781" endline="4786">
final private boolean jj_3R_131() {
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4833" endline="4838">
final private boolean jj_3_15() {
    if (jj_3R_32()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_scan_token(CLASS)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4932" endline="4937">
final private boolean jj_3R_99() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4833" endline="4838">
final private boolean jj_3_15() {
    if (jj_3R_32()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_scan_token(CLASS)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5141" endline="5146">
final private boolean jj_3_11() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_29()) return true;
    if (jj_scan_token(LBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4833" endline="4838">
final private boolean jj_3_15() {
    if (jj_3R_32()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_scan_token(CLASS)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5338" endline="5343">
final private boolean jj_3R_201() {
    if (jj_scan_token(CASE)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(COLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4833" endline="4838">
final private boolean jj_3_15() {
    if (jj_3R_32()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_scan_token(CLASS)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3838" endline="3843">
final private boolean jj_3R_40() {
    if (jj_scan_token(IDENTIFIER)) return true;
    if (jj_scan_token(COLON)) return true;
    if (jj_3R_45()) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4833" endline="4838">
final private boolean jj_3_15() {
    if (jj_3R_32()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_scan_token(CLASS)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4714" endline="4719">
final private boolean jj_3R_128() {
    if (jj_scan_token(IMPORT)) return true;
    if (jj_scan_token(STAR)) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="8" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4281" endline="4288">
final private boolean jj_3R_69() {
    if (jj_scan_token(LPAREN)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_106()) jj_scanpos = xsp;
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4691" endline="4698">
final private boolean jj_3R_120() {
    if (jj_scan_token(CONTINUE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(69)) jj_scanpos = xsp;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="8" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4281" endline="4288">
final private boolean jj_3R_69() {
    if (jj_scan_token(LPAREN)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_106()) jj_scanpos = xsp;
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4700" endline="4707">
final private boolean jj_3R_119() {
    if (jj_scan_token(BREAK)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(69)) jj_scanpos = xsp;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="8" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4534" endline="4541">
final private boolean jj_3R_43() {
    if (jj_scan_token(LPAREN)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_75()) jj_scanpos = xsp;
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4691" endline="4698">
final private boolean jj_3R_120() {
    if (jj_scan_token(CONTINUE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(69)) jj_scanpos = xsp;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="8" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4534" endline="4541">
final private boolean jj_3R_43() {
    if (jj_scan_token(LPAREN)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_75()) jj_scanpos = xsp;
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4700" endline="4707">
final private boolean jj_3R_119() {
    if (jj_scan_token(BREAK)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(69)) jj_scanpos = xsp;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="8" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4634" endline="4641">
final private boolean jj_3R_121() {
    if (jj_scan_token(RETURN)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_188()) jj_scanpos = xsp;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4691" endline="4698">
final private boolean jj_3R_120() {
    if (jj_scan_token(CONTINUE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(69)) jj_scanpos = xsp;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="8" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4634" endline="4641">
final private boolean jj_3R_121() {
    if (jj_scan_token(RETURN)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_188()) jj_scanpos = xsp;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4700" endline="4707">
final private boolean jj_3R_119() {
    if (jj_scan_token(BREAK)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(69)) jj_scanpos = xsp;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4227" endline="4232">
final private boolean jj_3_18() {
    if (jj_scan_token(NEW)) return true;
    if (jj_3R_36()) return true;
    if (jj_3R_150()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4157" endline="4162">
final private boolean jj_3_19() {
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4227" endline="4232">
final private boolean jj_3_18() {
    if (jj_scan_token(NEW)) return true;
    if (jj_3R_36()) return true;
    if (jj_3R_150()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4575" endline="4580">
final private boolean jj_3R_123() {
    if (jj_scan_token(THROW)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4227" endline="4232">
final private boolean jj_3_18() {
    if (jj_scan_token(NEW)) return true;
    if (jj_3R_36()) return true;
    if (jj_3R_150()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4721" endline="4726">
final private boolean jj_3R_133() {
    if (jj_scan_token(LBRACE)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACE)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4227" endline="4232">
final private boolean jj_3_18() {
    if (jj_scan_token(NEW)) return true;
    if (jj_3R_36()) return true;
    if (jj_3R_150()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4781" endline="4786">
final private boolean jj_3R_131() {
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4227" endline="4232">
final private boolean jj_3_18() {
    if (jj_scan_token(NEW)) return true;
    if (jj_3R_36()) return true;
    if (jj_3R_150()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4932" endline="4937">
final private boolean jj_3R_99() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4227" endline="4232">
final private boolean jj_3_18() {
    if (jj_scan_token(NEW)) return true;
    if (jj_3R_36()) return true;
    if (jj_3R_150()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5141" endline="5146">
final private boolean jj_3_11() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_29()) return true;
    if (jj_scan_token(LBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4227" endline="4232">
final private boolean jj_3_18() {
    if (jj_scan_token(NEW)) return true;
    if (jj_3R_36()) return true;
    if (jj_3R_150()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5338" endline="5343">
final private boolean jj_3R_201() {
    if (jj_scan_token(CASE)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(COLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4227" endline="4232">
final private boolean jj_3_18() {
    if (jj_scan_token(NEW)) return true;
    if (jj_3R_36()) return true;
    if (jj_3R_150()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4833" endline="4838">
final private boolean jj_3_15() {
    if (jj_3R_32()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_scan_token(CLASS)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4227" endline="4232">
final private boolean jj_3_18() {
    if (jj_scan_token(NEW)) return true;
    if (jj_3R_36()) return true;
    if (jj_3R_150()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4840" endline="4845">
final private boolean jj_3_31() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4227" endline="4232">
final private boolean jj_3_18() {
    if (jj_scan_token(NEW)) return true;
    if (jj_3R_36()) return true;
    if (jj_3R_150()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5578" endline="5583">
final private boolean jj_3_27() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4227" endline="4232">
final private boolean jj_3_18() {
    if (jj_scan_token(NEW)) return true;
    if (jj_3R_36()) return true;
    if (jj_3R_150()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3838" endline="3843">
final private boolean jj_3R_40() {
    if (jj_scan_token(IDENTIFIER)) return true;
    if (jj_scan_token(COLON)) return true;
    if (jj_3R_45()) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4227" endline="4232">
final private boolean jj_3_18() {
    if (jj_scan_token(NEW)) return true;
    if (jj_3R_36()) return true;
    if (jj_3R_150()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4714" endline="4719">
final private boolean jj_3R_128() {
    if (jj_scan_token(IMPORT)) return true;
    if (jj_scan_token(STAR)) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/GrabKeyDialog.java" startline="87" endline="93">
public String getShortcut()
	{
		if(isOK)
			return shortcut.getShortcut();
		else
			return null;
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/EvalError.java" startline="106" endline="111">
public String getErrorText() { 
		if ( node != null )
			return node.getText() ;
		else
			return "&lt;unknown error&gt;";
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/GrabKeyDialog.java" startline="87" endline="93">
public String getShortcut()
	{
		if(isOK)
			return shortcut.getShortcut();
		else
			return null;
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/EvalError.java" startline="120" endline="125">
public String getErrorSourceFile() {
		if ( node != null )
			return node.getSourceFile() ;
		else
			return "&lt;unknown file&gt;";
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/GrabKeyDialog.java" startline="87" endline="93">
public String getShortcut()
	{
		if(isOK)
			return shortcut.getShortcut();
		else
			return null;
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/EvalError.java" startline="113" endline="118">
public int getErrorLineNumber() { 
		if ( node != null )
			return node.getLineNumber() ;
		else
			return -1;
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/util/Log.java" startline="536" endline="542">
public int getSize()
		{
			if(wrap)
				return MAXLINES;
			else
				return logLineCount;
		}
</source>
        <source file="org/gjt/sp/jedit/bsh/Interpreter.java" startline="1139" endline="1144">
public String getSourceFileInfo() {
		if ( sourceFileInfo != null )
			return sourceFileInfo;
		else
			return "&lt;unknown source&gt;";
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/util/Log.java" startline="536" endline="542">
public int getSize()
		{
			if(wrap)
				return MAXLINES;
			else
				return logLineCount;
		}
</source>
        <source file="org/gjt/sp/jedit/buffer/KillRing.java" startline="122" endline="129">
@Override
	public int getSize()
	{
		if(wrap)
			return ring.length;
		else
			return count;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/EvalError.java" startline="106" endline="111">
public String getErrorText() { 
		if ( node != null )
			return node.getText() ;
		else
			return "&lt;unknown error&gt;";
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/EvalError.java" startline="113" endline="118">
public int getErrorLineNumber() { 
		if ( node != null )
			return node.getLineNumber() ;
		else
			return -1;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/EvalError.java" startline="120" endline="125">
public String getErrorSourceFile() {
		if ( node != null )
			return node.getSourceFile() ;
		else
			return "&lt;unknown file&gt;";
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/EvalError.java" startline="113" endline="118">
public int getErrorLineNumber() { 
		if ( node != null )
			return node.getLineNumber() ;
		else
			return -1;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/bsh/Interpreter.java" startline="1139" endline="1144">
public String getSourceFileInfo() {
		if ( sourceFileInfo != null )
			return sourceFileInfo;
		else
			return "&lt;unknown source&gt;";
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/EvalError.java" startline="106" endline="111">
public String getErrorText() { 
		if ( node != null )
			return node.getText() ;
		else
			return "&lt;unknown error&gt;";
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/bsh/Interpreter.java" startline="1139" endline="1144">
public String getSourceFileInfo() {
		if ( sourceFileInfo != null )
			return sourceFileInfo;
		else
			return "&lt;unknown source&gt;";
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/EvalError.java" startline="120" endline="125">
public String getErrorSourceFile() {
		if ( node != null )
			return node.getSourceFile() ;
		else
			return "&lt;unknown file&gt;";
	}
</source>
    </clone>
    <clone nlines="10" distance="4">
        <source file="org/gjt/sp/jedit/bsh/classpath/ClassManagerImpl.java" startline="244" endline="253">
public URL getResource( String path ) 
	{
		URL url = null;
		if ( baseLoader != null )
			// classloader wants no leading slash
			url = baseLoader.getResource( path.substring(1) );
		if ( url == null )
			url = super.getResource( path );
		return url;
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/classpath/ClassManagerImpl.java" startline="259" endline="272">
public InputStream getResourceAsStream( String path ) 
	{
		InputStream in = null;
		if ( baseLoader != null )
		{
			// classloader wants no leading slash
			in = baseLoader.getResourceAsStream( path.substring(1) );
		}
		if ( in == null )
		{
			in = super.getResourceAsStream( path );
		}
		return in;
	}
</source>
    </clone>
    <clone nlines="12" distance="2">
        <source file="org/gjt/sp/jedit/options/BrowserColorsOptionPane.java" startline="326" endline="337">
public String getColumnName(int index)
	{
		switch(index)
		{
		case 0:
			return jEdit.getProperty("options.browser.colors.glob");
		case 1:
			return jEdit.getProperty("options.browser.colors.color");
		default:
			return null;
		}
	}
</source>
        <source file="org/gjt/sp/jedit/options/AbbrevsOptionPane.java" startline="442" endline="454">
@Override
		public String getColumnName(int index)
		{
			switch(index)
			{
				case 0:
					return jEdit.getProperty("options.abbrevs.abbrev");
				case 1:
					return jEdit.getProperty("options.abbrevs.expand");
				default:
					return null;
			}
		}
</source>
    </clone>
    <clone nlines="12" distance="2">
        <source file="org/gjt/sp/jedit/options/BrowserColorsOptionPane.java" startline="326" endline="337">
public String getColumnName(int index)
	{
		switch(index)
		{
		case 0:
			return jEdit.getProperty("options.browser.colors.glob");
		case 1:
			return jEdit.getProperty("options.browser.colors.color");
		default:
			return null;
		}
	}
</source>
        <source file="org/gjt/sp/jedit/options/SyntaxHiliteOptionPane.java" startline="204" endline="216">
@Override
		public String getColumnName(int index)
		{
			switch(index)
			{
				case 0:
					return jEdit.getProperty("options.syntax.object");
				case 1:
					return jEdit.getProperty("options.syntax.style");
				default:
					return null;
			}
		}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/datatransfer/RichTextTransferable.java" startline="56" endline="61">
public Object getTransferData(DataFlavor flavor) throws UnsupportedFlavorException, IOException
	{
		if (!isDataFlavorSupported(flavor))
			throw new UnsupportedFlavorException(flavor);
		return new JEditRichText(text, mode);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/BufferSwitcher.java" startline="248" endline="255">
@Override
		public Object getTransferData(DataFlavor flavor)
				throws UnsupportedFlavorException, IOException
		{
			if (!isDataFlavorSupported(flavor))
				throw new UnsupportedFlavorException(flavor);
			return new BufferTransferableData(buffer, source);
		}
</source>
    </clone>
    <clone nlines="8" distance="2">
        <source file="org/gjt/sp/jedit/textarea/Gutter.java" startline="530" endline="537">
public void setLineNumberAlignment(int alignment)
	{
		if (this.alignment == alignment) return;

		this.alignment = alignment;

		repaint();
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/Gutter.java" startline="556" endline="563">
public void setExpanded(boolean expanded)
	{
		if (this.expanded == expanded) return;

		this.expanded = expanded;

		textArea.revalidate();
	}
</source>
    </clone>
    <clone nlines="10" distance="1">
        <source file="org/gjt/sp/jedit/menu/EnhancedMenuItem.java" startline="170" endline="179">
public void mouseEntered(MouseEvent evt)
		{
			msg = jEdit.getProperty(action + ".mouse-over");
			if(msg != null)
			{
				GUIUtilities.getView((Component)evt.getSource())
					.getStatus().setMessage(msg);
				msgSet = true;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/gui/EnhancedButton.java" startline="93" endline="102">
public void mouseEntered(MouseEvent evt)
		{
			String msg = jEdit.getProperty(action + ".mouse-over");
			if(msg != null)
			{
				GUIUtilities.getView((Component)evt.getSource())
					.getStatus().setMessage(msg);
				msgSet = true;
			}
		}
</source>
    </clone>
    <clone nlines="10" distance="3">
        <source file="org/gjt/sp/jedit/menu/EnhancedMenuItem.java" startline="170" endline="179">
public void mouseEntered(MouseEvent evt)
		{
			msg = jEdit.getProperty(action + ".mouse-over");
			if(msg != null)
			{
				GUIUtilities.getView((Component)evt.getSource())
					.getStatus().setMessage(msg);
				msgSet = true;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/menu/EnhancedCheckBoxMenuItem.java" startline="189" endline="199">
@Override
		public void mouseEntered(MouseEvent evt)
		{
			String msg = jEdit.getProperty(action + ".mouse-over");
			if(msg != null)
			{
				GUIUtilities.getView((Component)evt.getSource())
					.getStatus().setMessage(msg);
				msgSet = true;
			}
		}
</source>
    </clone>
    <clone nlines="10" distance="2">
        <source file="org/gjt/sp/jedit/EditPane.java" startline="270" endline="279">
public void focusOnTextArea()
	{
		SwingUtilities.invokeLater(new Runnable()
		{
			public void run()
			{
				textArea.requestFocus();
			}
		});
	}
</source>
        <source file="installer/SwingInstall.java" startline="740" endline="750">
public void done()
		{
			SwingUtilities.invokeLater(new Runnable()
			{
				public void run()
				{
					currentPage++;
					pageChanged();
				}
			});
		}
</source>
    </clone>
    <clone nlines="10" distance="4">
        <source file="org/gjt/sp/jedit/EditPane.java" startline="270" endline="279">
public void focusOnTextArea()
	{
		SwingUtilities.invokeLater(new Runnable()
		{
			public void run()
			{
				textArea.requestFocus();
			}
		});
	}
</source>
        <source file="installer/SwingInstall.java" startline="710" endline="719">
public void setMaximum(final int max)
		{
			SwingUtilities.invokeLater(new Runnable()
			{
				public void run()
				{
					progress.setMaximum(max);
				}
			});
		}
</source>
    </clone>
    <clone nlines="10" distance="4">
        <source file="org/gjt/sp/jedit/EditPane.java" startline="270" endline="279">
public void focusOnTextArea()
	{
		SwingUtilities.invokeLater(new Runnable()
		{
			public void run()
			{
				textArea.requestFocus();
			}
		});
	}
</source>
        <source file="installer/SwingInstall.java" startline="768" endline="777">
public void message(final String message)
		{
			SwingUtilities.invokeLater(new Runnable()
			{
				public void run()
				{
					progress.setString(message);
				}
			});
		}
</source>
    </clone>
    <clone nlines="12" distance="2">
        <source file="org/gjt/sp/jedit/gui/statusbar/OverwriteWidgetFactory.java" startline="106" endline="117">
public void propertiesChanged()
		{
			// retarded GTK look and feel!
			Font font = new JLabel().getFont();
			//UIManager.getFont("Label.font");
			FontMetrics fm = overwrite.getFontMetrics(font);
			Dimension dim = new Dimension(
						      Math.max(fm.charWidth('o'),fm.charWidth('O')) + 1,
						      fm.getHeight());
			overwrite.setPreferredSize(dim);
			overwrite.setMaximumSize(dim);
		}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/MultiSelectWidgetFactory.java" startline="100" endline="112">
@Override
		public void propertiesChanged()
		{
			// retarded GTK look and feel!
			Font font = new JLabel().getFont();
			//UIManager.getFont("Label.font");
			FontMetrics fm = multiSelect.getFontMetrics(font);
			Dimension dim = new Dimension(
						      Math.max(fm.charWidth('m'),fm.charWidth('M')) + 1,
						      fm.getHeight());
			multiSelect.setPreferredSize(dim);
			multiSelect.setMaximumSize(dim);
		}
</source>
    </clone>
    <clone nlines="13" distance="2">
        <source file="org/gjt/sp/jedit/gui/statusbar/RectSelectWidgetFactory.java" startline="100" endline="112">
public void propertiesChanged()
	    {
		    // retarded GTK look and feel!
		    Font font = new JLabel().getFont();
		    //UIManager.getFont("Label.font");
		    FontMetrics fm = rectSelect.getFontMetrics(font);
		    Dimension dim = new Dimension(
						  Math.max(fm.charWidth('r'),fm.charWidth('R')) + 1,
						  fm.getHeight());
		    rectSelect.setPreferredSize(dim);
		    rectSelect.setMaximumSize(dim);
		    
	    }
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/MultiSelectWidgetFactory.java" startline="100" endline="112">
@Override
		public void propertiesChanged()
		{
			// retarded GTK look and feel!
			Font font = new JLabel().getFont();
			//UIManager.getFont("Label.font");
			FontMetrics fm = multiSelect.getFontMetrics(font);
			Dimension dim = new Dimension(
						      Math.max(fm.charWidth('m'),fm.charWidth('M')) + 1,
						      fm.getHeight());
			multiSelect.setPreferredSize(dim);
			multiSelect.setMaximumSize(dim);
		}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/gui/InputHandler.java" startline="400" endline="406">
public void invokeLastAction()
	{
		if(lastAction == null)
			view.getToolkit().beep();
		else
			invokeAction(lastAction);
	}
</source>
        <source file="org/gjt/sp/jedit/View.java" startline="850" endline="856">
public void resplit()
	{
		if(lastSplitConfig == null)
			getToolkit().beep();
		else
			setSplitConfig(null,lastSplitConfig);
	}
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="4579" endline="4585">
public void shiftIndentRight()
	{
		if(!buffer.isEditable())
			getToolkit().beep();
		else
			buffer.shiftIndentRight(getSelectedLines());
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="4446" endline="4454">
public void removeTrailingWhiteSpace()
	{
		if(!buffer.isEditable())
			getToolkit().beep();
		else
		{
			buffer.removeTrailingWhiteSpace(getSelectedLines());
		}
	}
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="4579" endline="4585">
public void shiftIndentRight()
	{
		if(!buffer.isEditable())
			getToolkit().beep();
		else
			buffer.shiftIndentRight(getSelectedLines());
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="4564" endline="4572">
public void shiftIndentLeft()
	{
		if(!buffer.isEditable())
			getToolkit().beep();
		else
		{
			buffer.shiftIndentLeft(getSelectedLines());
		}
	}
</source>
    </clone>
    <clone nlines="10" distance="4">
        <source file="org/gjt/sp/jedit/Macros.java" startline="447" endline="456">
public static Handler getHandlerForPathName(String pathName)
	{
		for (Handler handler : macroHandlers)
		{
			if (handler.accept(pathName))
				return handler;
		}

		return null;
	}
</source>
        <source file="org/gjt/sp/jedit/Macros.java" startline="464" endline="473">
public static Handler getHandler(String name)
	{
		for (Handler handler : macroHandlers)
		{
			if (handler.getName().equals(name))
				return handler;
		}

		return null;
	}
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/indent/IndentRuleFactory.java" startline="38" endline="45">
public static IndentRule indentNextLine(String regexp)
		throws PatternSyntaxException
	{
		return new RegexpIndentRule(regexp,
			new IndentAction.Decrease(),
			new IndentAction.Increase(),
			null,true);
	}
</source>
        <source file="org/gjt/sp/jedit/indent/IndentRuleFactory.java" startline="47" endline="55">
public static IndentRule unindentThisLine(String regexp)
		throws PatternSyntaxException
	{
		return new RegexpIndentRule(regexp,
			null,
			new IndentAction.Increase(),
			new IndentAction.Decrease(),
			false);
	}
</source>
    </clone>
    <clone nlines="8" distance="2">
        <source file="org/gjt/sp/jedit/GUIUtilities.java" startline="1552" endline="1559">
public static void hideSplashScreen()
	{
		if(splash != null)
		{
			splash.dispose();
			splash = null;
		}
	}
</source>
        <source file="org/gjt/sp/jedit/gui/PingPongList.java" startline="165" endline="172">
public void removeLeftTitle()
	{
		if (leftLabel != null)
		{
			leftPanel.remove(leftLabel);
			leftLabel = null;
		}
	}
</source>
    </clone>
    <clone nlines="8" distance="2">
        <source file="org/gjt/sp/jedit/GUIUtilities.java" startline="1552" endline="1559">
public static void hideSplashScreen()
	{
		if(splash != null)
		{
			splash.dispose();
			splash = null;
		}
	}
</source>
        <source file="org/gjt/sp/jedit/gui/PingPongList.java" startline="175" endline="182">
public void removeRightTitle()
	{
		if (rightLabel != null)
		{
			rightPanel.remove(rightLabel);
			rightLabel = null;
		}
	}
</source>
    </clone>
    <clone nlines="14" distance="4">
        <source file="org/gjt/sp/util/Log.java" startline="214" endline="227">
public static void flushStream()
	{
		if(stream != null)
		{
			try
			{
				stream.flush();
			}
			catch(IOException io)
			{
				io.printStackTrace(realErr);
			}
		}
	}
</source>
        <source file="org/gjt/sp/util/Log.java" startline="234" endline="248">
public static void closeStream()
	{
		if(stream != null)
		{
			try
			{
				stream.close();
				stream = null;
			}
			catch(IOException io)
			{
				io.printStackTrace(realErr);
			}
		}
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/pluginmgr/MirrorListHandler.java" startline="137" endline="142">
private String pushElement(String name)
	{
		name = name == null ? null : name.intern();
		stateStack.push(name);
		return name;
	}
</source>
        <source file="org/gjt/sp/jedit/ActionListHandler.java" startline="175" endline="182">
private String pushElement(String name)
	{
		name = (name == null) ? null : name.intern();

		stateStack.push(name);

		return name;
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/pluginmgr/MirrorListHandler.java" startline="137" endline="142">
private String pushElement(String name)
	{
		name = name == null ? null : name.intern();
		stateStack.push(name);
		return name;
	}
</source>
        <source file="org/gjt/sp/jedit/gui/DockableWindowFactory.java" startline="368" endline="375">
private String pushElement(String name)
		{
			name = (name == null) ? null : name.intern();

			stateStack.push(name);

			return name;
		}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/pluginmgr/MirrorListHandler.java" startline="137" endline="142">
private String pushElement(String name)
	{
		name = name == null ? null : name.intern();
		stateStack.push(name);
		return name;
	}
</source>
        <source file="org/gjt/sp/jedit/ServiceListHandler.java" startline="139" endline="146">
private String pushElement(String name)
	{
		name = (name == null) ? null : name.intern();

		stateStack.push(name);

		return name;
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/textarea/ChunkCache.java" startline="391" endline="397">
int getSubregionStartOffset(int line, int offset)
	{
		LineInfo[] lineInfos = getLineInfosForPhysicalLine(line);
		LineInfo info = lineInfos[getSubregionOfOffset(offset,lineInfos)];
		return textArea.getLineStartOffset(info.physicalLine)
			+ info.offset;
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/ChunkCache.java" startline="407" endline="413">
int getSubregionEndOffset(int line, int offset)
	{
		LineInfo[] lineInfos = getLineInfosForPhysicalLine(line);
		LineInfo info = lineInfos[getSubregionOfOffset(offset,lineInfos)];
		return textArea.getLineStartOffset(info.physicalLine)
			+ info.offset + info.length;
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/pluginmgr/InstallPanel.java" startline="1048" endline="1054">
SelectallButton()
		{
			super(jEdit.getProperty("install-plugins.select-all"));
			addActionListener(this);
			pluginModel.addTableModelListener(this);
			setEnabled(false);
		}
</source>
        <source file="org/gjt/sp/jedit/pluginmgr/InstallPanel.java" startline="1172" endline="1178">
InstallButton()
		{
			super(jEdit.getProperty("install-plugins.install"));
			pluginModel.addTableModelListener(this);
			addActionListener(this);
			setEnabled(false);
		}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/pluginmgr/InstallPanel.java" startline="1172" endline="1178">
InstallButton()
		{
			super(jEdit.getProperty("install-plugins.install"));
			pluginModel.addTableModelListener(this);
			addActionListener(this);
			setEnabled(false);
		}
</source>
        <source file="org/gjt/sp/jedit/pluginmgr/ManagePanel.java" startline="944" endline="950">
RemoveButton()
		{
			super(jEdit.getProperty("manage-plugins.remove"));
			table.getSelectionModel().addListSelectionListener(this);
			addActionListener(this);
			setEnabled(false);
		}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/pluginmgr/InstallPanel.java" startline="1172" endline="1178">
InstallButton()
		{
			super(jEdit.getProperty("install-plugins.install"));
			pluginModel.addTableModelListener(this);
			addActionListener(this);
			setEnabled(false);
		}
</source>
        <source file="org/gjt/sp/jedit/pluginmgr/ManagePanel.java" startline="1176" endline="1182">
HelpButton()
		{
			super(jEdit.getProperty("manage-plugins.help"));
			table.getSelectionModel().addListSelectionListener(this);
			addActionListener(this);
			setEnabled(false);
		}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/pluginmgr/InstallPanel.java" startline="1109" endline="1114">
ChoosePluginSet()
		{
			setIcon(GUIUtilities.loadIcon(jEdit.getProperty("install-plugins.choose-plugin-set.icon")));
			addActionListener(this);
			updateUI();
		}
</source>
        <source file="org/gjt/sp/jedit/pluginmgr/ManagePanel.java" startline="835" endline="840">
RestoreButton()
		{
			setIcon(GUIUtilities.loadIcon(jEdit.getProperty("manage-plugins.restore.icon")));
			addActionListener(this);
			setToolTipText("Choose a PluginSet, select/deselect plugins based on set.");
		}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/pluginmgr/InstallPanel.java" startline="1109" endline="1114">
ChoosePluginSet()
		{
			setIcon(GUIUtilities.loadIcon(jEdit.getProperty("install-plugins.choose-plugin-set.icon")));
			addActionListener(this);
			updateUI();
		}
</source>
        <source file="org/gjt/sp/jedit/pluginmgr/InstallPanel.java" startline="1151" endline="1156">
ClearPluginSet()
		{
			setIcon(GUIUtilities.loadIcon(jEdit.getProperty("install-plugins.clear-plugin-set.icon")));
			setToolTipText("clear plugin set");
			addActionListener(this);
		}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/pluginmgr/ManagePanel.java" startline="835" endline="840">
RestoreButton()
		{
			setIcon(GUIUtilities.loadIcon(jEdit.getProperty("manage-plugins.restore.icon")));
			addActionListener(this);
			setToolTipText("Choose a PluginSet, select/deselect plugins based on set.");
		}
</source>
        <source file="org/gjt/sp/jedit/pluginmgr/InstallPanel.java" startline="1151" endline="1156">
ClearPluginSet()
		{
			setIcon(GUIUtilities.loadIcon(jEdit.getProperty("install-plugins.clear-plugin-set.icon")));
			setToolTipText("clear plugin set");
			addActionListener(this);
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/bsh/classpath/BshClassPath.java" startline="852" endline="857">
void errorWhileMapping( String s ) {
		if ( mappingFeedbackListener != null )
			mappingFeedbackListener.errorWhileMapping( s );
		else
			System.err.println( s );
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/classpath/BshClassPath.java" startline="845" endline="850">
void classMapping( String msg ) {
		if ( mappingFeedbackListener != null ) {
			mappingFeedbackListener.classMapping( msg );
		} else
			System.err.println( "Mapping: "+msg );
	}
</source>
    </clone>
    <clone nlines="7" distance="1">
        <source file="org/gjt/sp/jedit/bsh/ExternalNameSpace.java" startline="74" endline="80">
void setVariable( 
		String name, Object value, boolean strictJava, boolean recurse ) 
		throws UtilEvalError 
	{
		super.setVariable( name, value, strictJava, recurse );
		putExternalMap( name, value );
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/ExternalNameSpace.java" startline="161" endline="167">
public void	setTypedVariable(
		String	name, Class type, Object value,	Modifiers modifiers )
		throws UtilEvalError 
	{
		super.setTypedVariable( name, type, value, modifiers );
		putExternalMap( name, value );
    }
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/CompletionPopup.java" startline="361" endline="368">
@Override
		public Object getElementAt(int index)
		{
			// This value is not used.
			// The list is only rendered by components
			// returned by getCellRenderer().
			return candidates;
		}
</source>
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="322" endline="327">
@Override
		public long getModified()
		{
			fetchAttrs();
			return modified;
		}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/gui/CompletionPopup.java" startline="361" endline="368">
@Override
		public Object getElementAt(int index)
		{
			// This value is not used.
			// The list is only rendered by components
			// returned by getCellRenderer().
			return candidates;
		}
</source>
        <source file="org/gjt/sp/jedit/menu/EnhancedMenu.java" startline="181" endline="187">
@EBHandler
		public void handlePropertiesChanged(PropertiesChanged msg)
		{
			// while this might be questionable, some
			// menus depend on properties
			menuOutOfDate = true;
		}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/CompletionPopup.java" startline="361" endline="368">
@Override
		public Object getElementAt(int index)
		{
			// This value is not used.
			// The list is only rendered by components
			// returned by getCellRenderer().
			return candidates;
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="68" endline="73">
@Override
	//{{{ getChildren() method
	public Vector&lt;Node&gt; getChildren()
	{
		return children;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/browser/VFSDirectoryEntryTable.java" startline="267" endline="273">
@Override
	public void scrollRectToVisible(Rectangle rect)
	{
		// avoid scrolling to the right
		rect.width = 0;
		super.scrollRectToVisible(rect);
	}
</source>
        <source file="org/gjt/sp/jedit/options/ShortcutsOptionPane.java" startline="141" endline="146">
@Override
			public void actionPerformed(ActionEvent arg0)
			{
				filterTF.setText("");
				filterTF.requestFocus();
			}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/BufferSwitcher.java" startline="69" endline="74">
@Override
			public void popupMenuWillBecomeVisible(
				PopupMenuEvent e)
			{
				itemSelectedBefore = getSelectedItem();
			}
</source>
        <source file="org/gjt/sp/jedit/gui/AddModeDialog.java" startline="154" endline="159">
@Override
		public void cancel()
		{
			canceled = true;
			dispose();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/BufferSwitcher.java" startline="69" endline="74">
@Override
			public void popupMenuWillBecomeVisible(
				PopupMenuEvent e)
			{
				itemSelectedBefore = getSelectedItem();
			}
</source>
        <source file="org/gjt/sp/jedit/gui/ContextAddDialog.java" startline="157" endline="162">
@Override
	public void ok()
	{
		isOK = true;
		dispose();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/BufferSwitcher.java" startline="69" endline="74">
@Override
			public void popupMenuWillBecomeVisible(
				PopupMenuEvent e)
			{
				itemSelectedBefore = getSelectedItem();
			}
</source>
        <source file="org/gjt/sp/jedit/search/SearchDialog.java" startline="246" endline="251">
@EBHandler
	public void handleSearchSettingsChanged(EBMessage msg)
	{
		if(!saving)
			load();
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/BufferSwitcher.java" startline="69" endline="74">
@Override
			public void popupMenuWillBecomeVisible(
				PopupMenuEvent e)
			{
				itemSelectedBefore = getSelectedItem();
			}
</source>
        <source file="org/gjt/sp/jedit/EditPane.java" startline="645" endline="650">
@EBHandler
	public void handlePropertiesChanged(PropertiesChanged msg)
	{
		propertiesChanged();
		loadBufferSwitcher();
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/menu/EnhancedMenu.java" startline="181" endline="187">
@EBHandler
		public void handlePropertiesChanged(PropertiesChanged msg)
		{
			// while this might be questionable, some
			// menus depend on properties
			menuOutOfDate = true;
		}
</source>
        <source file="org/gjt/sp/jedit/gui/BufferSwitcher.java" startline="69" endline="74">
@Override
			public void popupMenuWillBecomeVisible(
				PopupMenuEvent e)
			{
				itemSelectedBefore = getSelectedItem();
			}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="398" endline="403">
@Override
	public void focusOnDefaultComponent()
	{
		// pathField.requestFocus();
		defaultFocusComponent.requestFocus();
	}
</source>
        <source file="org/gjt/sp/jedit/gui/AddModeDialog.java" startline="154" endline="159">
@Override
		public void cancel()
		{
			canceled = true;
			dispose();
		}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="398" endline="403">
@Override
	public void focusOnDefaultComponent()
	{
		// pathField.requestFocus();
		defaultFocusComponent.requestFocus();
	}
</source>
        <source file="org/gjt/sp/jedit/gui/ContextAddDialog.java" startline="157" endline="162">
@Override
	public void ok()
	{
		isOK = true;
		dispose();
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="398" endline="403">
@Override
	public void focusOnDefaultComponent()
	{
		// pathField.requestFocus();
		defaultFocusComponent.requestFocus();
	}
</source>
        <source file="org/gjt/sp/jedit/gui/BufferSwitcher.java" startline="69" endline="74">
@Override
			public void popupMenuWillBecomeVisible(
				PopupMenuEvent e)
			{
				itemSelectedBefore = getSelectedItem();
			}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="398" endline="403">
@Override
	public void focusOnDefaultComponent()
	{
		// pathField.requestFocus();
		defaultFocusComponent.requestFocus();
	}
</source>
        <source file="org/gjt/sp/jedit/help/HelpViewer.java" startline="462" endline="467">
@Override
			public void run()
			{
				queuedTOCReload = false;
				toc.load();
			}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="398" endline="403">
@Override
	public void focusOnDefaultComponent()
	{
		// pathField.requestFocus();
		defaultFocusComponent.requestFocus();
	}
</source>
        <source file="org/gjt/sp/jedit/gui/HistoryModel.java" startline="127" endline="132">
@Override
	public void removeAllElements()
	{
		modified = true;
		super.removeAllElements();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="398" endline="403">
@Override
	public void focusOnDefaultComponent()
	{
		// pathField.requestFocus();
		defaultFocusComponent.requestFocus();
	}
</source>
        <source file="org/gjt/sp/jedit/JEditMode.java" startline="128" endline="133">
@Override
	public void init()
	{
		initialized = true;
		super.init();
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="398" endline="403">
@Override
	public void focusOnDefaultComponent()
	{
		// pathField.requestFocus();
		defaultFocusComponent.requestFocus();
	}
</source>
        <source file="org/gjt/sp/jedit/options/StatusBarOptionPane.java" startline="540" endline="545">
@Override
		public void cancel()
		{
			value = null;
			dispose();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="398" endline="403">
@Override
	public void focusOnDefaultComponent()
	{
		// pathField.requestFocus();
		defaultFocusComponent.requestFocus();
	}
</source>
        <source file="org/gjt/sp/jedit/AbstractOptionPane.java" startline="113" endline="118">
@Override
	public final void save()
	{
		if(initialized)
			_save();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/textarea/JEditTextArea.java" startline="79" endline="84">
@Override
	public void dispose()
	{
		EditBus.removeFromBus(this);
		super.dispose();
	}
</source>
        <source file="org/gjt/sp/jedit/options/ShortcutsOptionPane.java" startline="141" endline="146">
@Override
			public void actionPerformed(ActionEvent arg0)
			{
				filterTF.setText("");
				filterTF.requestFocus();
			}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/textarea/JEditTextArea.java" startline="79" endline="84">
@Override
	public void dispose()
	{
		EditBus.removeFromBus(this);
		super.dispose();
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/SelectionLengthWidgetFactory.java" startline="137" endline="143">
@Override
			public void removeNotify()
			{
				visible = false;
				textArea.removeCaretListener(this);
				super.removeNotify();
			}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/textarea/JEditTextArea.java" startline="79" endline="84">
@Override
	public void dispose()
	{
		EditBus.removeFromBus(this);
		super.dispose();
	}
</source>
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="414" endline="419">
@Override
	public void addNotify()
	{
		super.addNotify();
		EditBus.addToBus(this);
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/textarea/JEditTextArea.java" startline="79" endline="84">
@Override
	public void dispose()
	{
		EditBus.removeFromBus(this);
		super.dispose();
	}
</source>
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="127" endline="132">
@Override
	public void addNotify()
	{
		super.addNotify();
		EditBus.addToBus(this);
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/textarea/JEditTextArea.java" startline="79" endline="84">
@Override
	public void dispose()
	{
		EditBus.removeFromBus(this);
		super.dispose();
	}
</source>
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="135" endline="140">
@Override
	public void removeNotify()
	{
		super.removeNotify();
		EditBus.removeFromBus(this);
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/textarea/JEditTextArea.java" startline="79" endline="84">
@Override
	public void dispose()
	{
		EditBus.removeFromBus(this);
		super.dispose();
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/ErrorsWidgetFactory.java" startline="306" endline="311">
@Override
		public void dispose()
		{
			GUIUtilities.saveGeometry(this, "status.errorWidget");
			super.dispose();
		}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/AddModeDialog.java" startline="154" endline="159">
@Override
		public void cancel()
		{
			canceled = true;
			dispose();
		}
</source>
        <source file="org/gjt/sp/jedit/help/HelpViewer.java" startline="462" endline="467">
@Override
			public void run()
			{
				queuedTOCReload = false;
				toc.load();
			}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/ContextAddDialog.java" startline="157" endline="162">
@Override
	public void ok()
	{
		isOK = true;
		dispose();
	}
</source>
        <source file="org/gjt/sp/jedit/help/HelpViewer.java" startline="462" endline="467">
@Override
			public void run()
			{
				queuedTOCReload = false;
				toc.load();
			}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/AddModeDialog.java" startline="154" endline="159">
@Override
		public void cancel()
		{
			canceled = true;
			dispose();
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="6444" endline="6449">
@Override
			public char first()
			{
				index = 0;
				return current();
			}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/ContextAddDialog.java" startline="157" endline="162">
@Override
	public void ok()
	{
		isOK = true;
		dispose();
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="6444" endline="6449">
@Override
			public char first()
			{
				index = 0;
				return current();
			}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/AddModeDialog.java" startline="154" endline="159">
@Override
		public void cancel()
		{
			canceled = true;
			dispose();
		}
</source>
        <source file="org/gjt/sp/jedit/gui/HistoryModel.java" startline="127" endline="132">
@Override
	public void removeAllElements()
	{
		modified = true;
		super.removeAllElements();
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/AddModeDialog.java" startline="154" endline="159">
@Override
		public void cancel()
		{
			canceled = true;
			dispose();
		}
</source>
        <source file="org/gjt/sp/jedit/JEditMode.java" startline="128" endline="133">
@Override
	public void init()
	{
		initialized = true;
		super.init();
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/ContextAddDialog.java" startline="157" endline="162">
@Override
	public void ok()
	{
		isOK = true;
		dispose();
	}
</source>
        <source file="org/gjt/sp/jedit/gui/HistoryModel.java" startline="127" endline="132">
@Override
	public void removeAllElements()
	{
		modified = true;
		super.removeAllElements();
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/ContextAddDialog.java" startline="157" endline="162">
@Override
	public void ok()
	{
		isOK = true;
		dispose();
	}
</source>
        <source file="org/gjt/sp/jedit/JEditMode.java" startline="128" endline="133">
@Override
	public void init()
	{
		initialized = true;
		super.init();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/AddModeDialog.java" startline="154" endline="159">
@Override
		public void cancel()
		{
			canceled = true;
			dispose();
		}
</source>
        <source file="org/gjt/sp/jedit/EditPane.java" startline="645" endline="650">
@EBHandler
	public void handlePropertiesChanged(PropertiesChanged msg)
	{
		propertiesChanged();
		loadBufferSwitcher();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/ContextAddDialog.java" startline="157" endline="162">
@Override
	public void ok()
	{
		isOK = true;
		dispose();
	}
</source>
        <source file="org/gjt/sp/jedit/EditPane.java" startline="645" endline="650">
@EBHandler
	public void handlePropertiesChanged(PropertiesChanged msg)
	{
		propertiesChanged();
		loadBufferSwitcher();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/help/HelpViewer.java" startline="462" endline="467">
@Override
			public void run()
			{
				queuedTOCReload = false;
				toc.load();
			}
</source>
        <source file="org/gjt/sp/util/ThreadUtilities.java" startline="241" endline="246">
@Override
		public void run()
		{
			runnable.run();
			done.countDown();
		}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="414" endline="419">
@Override
	public void addNotify()
	{
		super.addNotify();
		EditBus.addToBus(this);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/TaskMonitorWidgetFactory.java" startline="93" endline="98">
@Override
        public void removeNotify()
        {
            super.removeNotify();
            TaskManager.instance.removeTaskListener(this);
        }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="127" endline="132">
@Override
	public void addNotify()
	{
		super.addNotify();
		EditBus.addToBus(this);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/TaskMonitorWidgetFactory.java" startline="93" endline="98">
@Override
        public void removeNotify()
        {
            super.removeNotify();
            TaskManager.instance.removeTaskListener(this);
        }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="135" endline="140">
@Override
	public void removeNotify()
	{
		super.removeNotify();
		EditBus.removeFromBus(this);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/TaskMonitorWidgetFactory.java" startline="93" endline="98">
@Override
        public void removeNotify()
        {
            super.removeNotify();
            TaskManager.instance.removeTaskListener(this);
        }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="414" endline="419">
@Override
	public void addNotify()
	{
		super.addNotify();
		EditBus.addToBus(this);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/BufferSetWidgetFactory.java" startline="72" endline="77">
@Override
				public void removeNotify()
				{
					super.removeNotify();
					EditBus.removeFromBus(BufferSetWidget.this);
				}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="414" endline="419">
@Override
	public void addNotify()
	{
		super.addNotify();
		EditBus.addToBus(this);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/LastModifiedWidgetFactory.java" startline="75" endline="80">
@Override
				public void removeNotify()
				{
					super.removeNotify();
					EditBus.removeFromBus(LastModifiedWidget.this);
				}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="127" endline="132">
@Override
	public void addNotify()
	{
		super.addNotify();
		EditBus.addToBus(this);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/BufferSetWidgetFactory.java" startline="72" endline="77">
@Override
				public void removeNotify()
				{
					super.removeNotify();
					EditBus.removeFromBus(BufferSetWidget.this);
				}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="127" endline="132">
@Override
	public void addNotify()
	{
		super.addNotify();
		EditBus.addToBus(this);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/LastModifiedWidgetFactory.java" startline="75" endline="80">
@Override
				public void removeNotify()
				{
					super.removeNotify();
					EditBus.removeFromBus(LastModifiedWidget.this);
				}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="135" endline="140">
@Override
	public void removeNotify()
	{
		super.removeNotify();
		EditBus.removeFromBus(this);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/BufferSetWidgetFactory.java" startline="72" endline="77">
@Override
				public void removeNotify()
				{
					super.removeNotify();
					EditBus.removeFromBus(BufferSetWidget.this);
				}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="135" endline="140">
@Override
	public void removeNotify()
	{
		super.removeNotify();
		EditBus.removeFromBus(this);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/LastModifiedWidgetFactory.java" startline="75" endline="80">
@Override
				public void removeNotify()
				{
					super.removeNotify();
					EditBus.removeFromBus(LastModifiedWidget.this);
				}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="414" endline="419">
@Override
	public void addNotify()
	{
		super.addNotify();
		EditBus.addToBus(this);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/SelectionLengthWidgetFactory.java" startline="127" endline="133">
@Override
			public void addNotify()
			{
				super.addNotify();
				visible = true;
				textArea.addCaretListener(this);
			}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="127" endline="132">
@Override
	public void addNotify()
	{
		super.addNotify();
		EditBus.addToBus(this);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/SelectionLengthWidgetFactory.java" startline="127" endline="133">
@Override
			public void addNotify()
			{
				super.addNotify();
				visible = true;
				textArea.addCaretListener(this);
			}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="135" endline="140">
@Override
	public void removeNotify()
	{
		super.removeNotify();
		EditBus.removeFromBus(this);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/SelectionLengthWidgetFactory.java" startline="127" endline="133">
@Override
			public void addNotify()
			{
				super.addNotify();
				visible = true;
				textArea.addCaretListener(this);
			}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="414" endline="419">
@Override
	public void addNotify()
	{
		super.addNotify();
		EditBus.addToBus(this);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="175" endline="180">
@Override
	public void addNotify()
	{
		super.addNotify();
		TaskManager.instance.addTaskListener(taskHandler);
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="414" endline="419">
@Override
	public void addNotify()
	{
		super.addNotify();
		EditBus.addToBus(this);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="183" endline="188">
@Override
	public void removeNotify()
	{
		super.removeNotify();
		TaskManager.instance.removeTaskListener(taskHandler);
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="127" endline="132">
@Override
	public void addNotify()
	{
		super.addNotify();
		EditBus.addToBus(this);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="175" endline="180">
@Override
	public void addNotify()
	{
		super.addNotify();
		TaskManager.instance.addTaskListener(taskHandler);
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="127" endline="132">
@Override
	public void addNotify()
	{
		super.addNotify();
		EditBus.addToBus(this);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="183" endline="188">
@Override
	public void removeNotify()
	{
		super.removeNotify();
		TaskManager.instance.removeTaskListener(taskHandler);
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="135" endline="140">
@Override
	public void removeNotify()
	{
		super.removeNotify();
		EditBus.removeFromBus(this);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="175" endline="180">
@Override
	public void addNotify()
	{
		super.addNotify();
		TaskManager.instance.addTaskListener(taskHandler);
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="135" endline="140">
@Override
	public void removeNotify()
	{
		super.removeNotify();
		EditBus.removeFromBus(this);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="183" endline="188">
@Override
	public void removeNotify()
	{
		super.removeNotify();
		TaskManager.instance.removeTaskListener(taskHandler);
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/statusbar/TaskMonitorWidgetFactory.java" startline="93" endline="98">
@Override
        public void removeNotify()
        {
            super.removeNotify();
            TaskManager.instance.removeTaskListener(this);
        }
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/TaskMonitorWidgetFactory.java" startline="85" endline="91">
@Override
        public void addNotify()
        {
            super.addNotify();
            TaskManager.instance.addTaskListener(this);
            update();
        }
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/statusbar/TaskMonitorWidgetFactory.java" startline="93" endline="98">
@Override
        public void removeNotify()
        {
            super.removeNotify();
            TaskManager.instance.removeTaskListener(this);
        }
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/SelectionLengthWidgetFactory.java" startline="127" endline="133">
@Override
			public void addNotify()
			{
				super.addNotify();
				visible = true;
				textArea.addCaretListener(this);
			}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="org/gjt/sp/jedit/JEditMode.java" startline="140" endline="149">
@Override
	public void loadIfNecessary()
	{
		if(marker == null)
		{
			jEdit.loadMode(this);
			if (marker == null)
				Log.log(Log.ERROR, this, "Mode not correctly loaded, token marker is still null");
		}
	}
</source>
        <source file="org/gjt/sp/jedit/Mode.java" startline="147" endline="155">
public void loadIfNecessary()
	{
		if(marker == null)
		{
			ModeProvider.instance.loadMode(this);
			if (marker == null)
				Log.log(Log.ERROR, this, "Mode not correctly loaded, token marker is still null");
		}
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1402" endline="1410">
@Test
	public void write_charArray_ShouldEncodeASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		writer.write(new char[] { '\\', 'u', '2', '1', 'a', 'F' });
		writer.flush();
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21aF")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1382" endline="1390">
@Test
	public void write_charArray_int_int_ShouldEncodeASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		writer.write(new char[] { '\\', 'u', '2', '1', 'a', 'F' }, 0, 6);
		writer.flush();
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21aF")));
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1485" endline="1493">
@Test
	public void write_charArray_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		writer.write(new char[] { '\u21AF' });
		writer.flush();
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1465" endline="1473">
@Test
	public void write_charArray_int_int_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		writer.write(new char[] { '\u21AF' }, 0, 1);
		writer.flush();
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
    </clone>
    <clone nlines="10" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1444" endline="1453">
@Test
	public void append_CharSequence_ShouldEncodeASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append("\\u21aF");
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21aF")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1433" endline="1442">
@Test
	public void append_CharSequence_int_int_ShouldEncodeASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append("\\u21aF", 0, 6);
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21aF")));
	}
</source>
    </clone>
    <clone nlines="10" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1444" endline="1453">
@Test
	public void append_CharSequence_ShouldEncodeASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append("\\u21aF");
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21aF")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1516" endline="1525">
@Test
	public void append_CharSequence_int_int_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append("\u21AF", 0, 1);
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
    </clone>
    <clone nlines="10" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1505" endline="1514">
@Test
	public void append_char_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append('\u21AF');
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1433" endline="1442">
@Test
	public void append_CharSequence_int_int_ShouldEncodeASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append("\\u21aF", 0, 6);
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21aF")));
	}
</source>
    </clone>
    <clone nlines="10" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1505" endline="1514">
@Test
	public void append_char_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append('\u21AF');
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1516" endline="1525">
@Test
	public void append_CharSequence_int_int_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append("\u21AF", 0, 1);
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
    </clone>
    <clone nlines="10" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1527" endline="1536">
@Test
	public void append_CharSequence_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append("\u21AF");
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1433" endline="1442">
@Test
	public void append_CharSequence_int_int_ShouldEncodeASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append("\\u21aF", 0, 6);
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21aF")));
	}
</source>
    </clone>
    <clone nlines="10" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1527" endline="1536">
@Test
	public void append_CharSequence_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append("\u21AF");
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1516" endline="1525">
@Test
	public void append_CharSequence_int_int_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append("\u21AF", 0, 1);
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
    </clone>
    <clone nlines="10" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1444" endline="1453">
@Test
	public void append_CharSequence_ShouldEncodeASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append("\\u21aF");
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21aF")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1538" endline="1547">
@Test
	public void append_CharSequence_int_int_ShouldEncodeNullCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append(null, 0, 4);
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("null")));
	}
</source>
    </clone>
    <clone nlines="10" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1505" endline="1514">
@Test
	public void append_char_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append('\u21AF');
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1538" endline="1547">
@Test
	public void append_CharSequence_int_int_ShouldEncodeNullCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append(null, 0, 4);
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("null")));
	}
</source>
    </clone>
    <clone nlines="10" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1527" endline="1536">
@Test
	public void append_CharSequence_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append("\u21AF");
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1538" endline="1547">
@Test
	public void append_CharSequence_int_int_ShouldEncodeNullCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		Writer returnedWriter = writer.append(null, 0, 4);
		writer.flush();
		assertThat(returnedWriter, is(sameInstance(writer)));
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("null")));
	}
</source>
    </clone>
    <clone nlines="30" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="2053" endline="2082">
final public void MethodInvocation() throws ParseException {
                                             /*@bgen(jjtree) MethodInvocation */
  BSHMethodInvocation jjtn000 = new BSHMethodInvocation(JJTMETHODINVOCATION);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
    try {
      AmbiguousName();
      Arguments();
    } catch (Throwable jjte000) {
     if (jjtc000) {
       jjtree.clearNodeScope(jjtn000);
       jjtc000 = false;
     } else {
       jjtree.popNode();
     }
     if (jjte000 instanceof RuntimeException) {
       {if (true) throw (RuntimeException)jjte000;}
     }
     if (jjte000 instanceof ParseException) {
       {if (true) throw (ParseException)jjte000;}
     }
     {if (true) throw (Error)jjte000;}
    } finally {
     if (jjtc000) {
       jjtree.closeNodeScope(jjtn000, true);
       jjtreeCloseNodeScope(jjtn000);
     }
    }
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="385" endline="414">
final public void PackageDeclaration() throws ParseException {
 /*@bgen(jjtree) PackageDeclaration */
  BSHPackageDeclaration jjtn000 = new BSHPackageDeclaration(JJTPACKAGEDECLARATION);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
    try {
      jj_consume_token(PACKAGE);
      AmbiguousName();
    } catch (Throwable jjte000) {
          if (jjtc000) {
            jjtree.clearNodeScope(jjtn000);
            jjtc000 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte000 instanceof RuntimeException) {
            {if (true) throw (RuntimeException)jjte000;}
          }
          if (jjte000 instanceof ParseException) {
            {if (true) throw (ParseException)jjte000;}
          }
          {if (true) throw (Error)jjte000;}
    } finally {
          if (jjtc000) {
            jjtree.closeNodeScope(jjtn000, true);
            jjtreeCloseNodeScope(jjtn000);
          }
    }
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4164" endline="4169">
final private boolean jj_3R_107() {
    if (jj_3R_33()) return true;
    if (jj_3R_34()) return true;
    if (jj_3R_39()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4157" endline="4162">
final private boolean jj_3_19() {
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4164" endline="4169">
final private boolean jj_3R_107() {
    if (jj_3R_33()) return true;
    if (jj_3R_34()) return true;
    if (jj_3R_39()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4575" endline="4580">
final private boolean jj_3R_123() {
    if (jj_scan_token(THROW)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4164" endline="4169">
final private boolean jj_3R_107() {
    if (jj_3R_33()) return true;
    if (jj_3R_34()) return true;
    if (jj_3R_39()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4721" endline="4726">
final private boolean jj_3R_133() {
    if (jj_scan_token(LBRACE)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACE)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4164" endline="4169">
final private boolean jj_3R_107() {
    if (jj_3R_33()) return true;
    if (jj_3R_34()) return true;
    if (jj_3R_39()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4781" endline="4786">
final private boolean jj_3R_131() {
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4164" endline="4169">
final private boolean jj_3R_107() {
    if (jj_3R_33()) return true;
    if (jj_3R_34()) return true;
    if (jj_3R_39()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4932" endline="4937">
final private boolean jj_3R_99() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4164" endline="4169">
final private boolean jj_3R_107() {
    if (jj_3R_33()) return true;
    if (jj_3R_34()) return true;
    if (jj_3R_39()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5141" endline="5146">
final private boolean jj_3_11() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_29()) return true;
    if (jj_scan_token(LBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4164" endline="4169">
final private boolean jj_3R_107() {
    if (jj_3R_33()) return true;
    if (jj_3R_34()) return true;
    if (jj_3R_39()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5338" endline="5343">
final private boolean jj_3R_201() {
    if (jj_scan_token(CASE)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(COLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4164" endline="4169">
final private boolean jj_3R_107() {
    if (jj_3R_33()) return true;
    if (jj_3R_34()) return true;
    if (jj_3R_39()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4833" endline="4838">
final private boolean jj_3_15() {
    if (jj_3R_32()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_scan_token(CLASS)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4164" endline="4169">
final private boolean jj_3R_107() {
    if (jj_3R_33()) return true;
    if (jj_3R_34()) return true;
    if (jj_3R_39()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4227" endline="4232">
final private boolean jj_3_18() {
    if (jj_scan_token(NEW)) return true;
    if (jj_3R_36()) return true;
    if (jj_3R_150()) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4164" endline="4169">
final private boolean jj_3R_107() {
    if (jj_3R_33()) return true;
    if (jj_3R_34()) return true;
    if (jj_3R_39()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4840" endline="4845">
final private boolean jj_3_31() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4164" endline="4169">
final private boolean jj_3R_107() {
    if (jj_3R_33()) return true;
    if (jj_3R_34()) return true;
    if (jj_3R_39()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5578" endline="5583">
final private boolean jj_3_27() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4164" endline="4169">
final private boolean jj_3R_107() {
    if (jj_3R_33()) return true;
    if (jj_3R_34()) return true;
    if (jj_3R_39()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3838" endline="3843">
final private boolean jj_3R_40() {
    if (jj_scan_token(IDENTIFIER)) return true;
    if (jj_scan_token(COLON)) return true;
    if (jj_3R_45()) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4164" endline="4169">
final private boolean jj_3R_107() {
    if (jj_3R_33()) return true;
    if (jj_3R_34()) return true;
    if (jj_3R_39()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4714" endline="4719">
final private boolean jj_3R_128() {
    if (jj_scan_token(IMPORT)) return true;
    if (jj_scan_token(STAR)) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4840" endline="4845">
final private boolean jj_3_31() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4157" endline="4162">
final private boolean jj_3_19() {
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4840" endline="4845">
final private boolean jj_3_31() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4575" endline="4580">
final private boolean jj_3R_123() {
    if (jj_scan_token(THROW)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4840" endline="4845">
final private boolean jj_3_31() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4721" endline="4726">
final private boolean jj_3R_133() {
    if (jj_scan_token(LBRACE)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACE)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4840" endline="4845">
final private boolean jj_3_31() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4781" endline="4786">
final private boolean jj_3R_131() {
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4840" endline="4845">
final private boolean jj_3_31() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4932" endline="4937">
final private boolean jj_3R_99() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4840" endline="4845">
final private boolean jj_3_31() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5141" endline="5146">
final private boolean jj_3_11() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_29()) return true;
    if (jj_scan_token(LBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4840" endline="4845">
final private boolean jj_3_31() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5338" endline="5343">
final private boolean jj_3R_201() {
    if (jj_scan_token(CASE)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(COLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5578" endline="5583">
final private boolean jj_3_27() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4157" endline="4162">
final private boolean jj_3_19() {
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5578" endline="5583">
final private boolean jj_3_27() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4575" endline="4580">
final private boolean jj_3R_123() {
    if (jj_scan_token(THROW)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5578" endline="5583">
final private boolean jj_3_27() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4721" endline="4726">
final private boolean jj_3R_133() {
    if (jj_scan_token(LBRACE)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACE)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5578" endline="5583">
final private boolean jj_3_27() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4781" endline="4786">
final private boolean jj_3R_131() {
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5578" endline="5583">
final private boolean jj_3_27() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4932" endline="4937">
final private boolean jj_3R_99() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5578" endline="5583">
final private boolean jj_3_27() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5141" endline="5146">
final private boolean jj_3_11() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_29()) return true;
    if (jj_scan_token(LBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5578" endline="5583">
final private boolean jj_3_27() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5338" endline="5343">
final private boolean jj_3R_201() {
    if (jj_scan_token(CASE)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(COLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4840" endline="4845">
final private boolean jj_3_31() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4833" endline="4838">
final private boolean jj_3_15() {
    if (jj_3R_32()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_scan_token(CLASS)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5578" endline="5583">
final private boolean jj_3_27() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4833" endline="4838">
final private boolean jj_3_15() {
    if (jj_3R_32()) return true;
    if (jj_scan_token(DOT)) return true;
    if (jj_scan_token(CLASS)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4840" endline="4845">
final private boolean jj_3_31() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3838" endline="3843">
final private boolean jj_3R_40() {
    if (jj_scan_token(IDENTIFIER)) return true;
    if (jj_scan_token(COLON)) return true;
    if (jj_3R_45()) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5578" endline="5583">
final private boolean jj_3_27() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3838" endline="3843">
final private boolean jj_3R_40() {
    if (jj_scan_token(IDENTIFIER)) return true;
    if (jj_scan_token(COLON)) return true;
    if (jj_3R_45()) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4840" endline="4845">
final private boolean jj_3_31() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4714" endline="4719">
final private boolean jj_3R_128() {
    if (jj_scan_token(IMPORT)) return true;
    if (jj_scan_token(STAR)) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5578" endline="5583">
final private boolean jj_3_27() {
    if (jj_3R_41()) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4714" endline="4719">
final private boolean jj_3R_128() {
    if (jj_scan_token(IMPORT)) return true;
    if (jj_scan_token(STAR)) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5635" endline="5641">
final private boolean jj_3_25() {
    if (jj_3R_41()) return true;
    if (jj_3R_42()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    if (jj_scan_token(LPAREN)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3845" endline="3851">
final private boolean jj_3R_156() {
    if (jj_scan_token(HOOK)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(COLON)) return true;
    if (jj_3R_108()) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5635" endline="5641">
final private boolean jj_3_25() {
    if (jj_3R_41()) return true;
    if (jj_3R_42()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    if (jj_scan_token(LPAREN)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5071" endline="5077">
final private boolean jj_3R_217() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(RPAREN)) return true;
    if (jj_3R_208()) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5635" endline="5641">
final private boolean jj_3_25() {
    if (jj_3R_41()) return true;
    if (jj_3R_42()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    if (jj_scan_token(LPAREN)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5079" endline="5085">
final private boolean jj_3R_216() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(RPAREN)) return true;
    if (jj_3R_191()) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="7" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5635" endline="5641">
final private boolean jj_3_25() {
    if (jj_3R_41()) return true;
    if (jj_3R_42()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    if (jj_scan_token(LPAREN)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5240" endline="5246">
final private boolean jj_3R_59() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_29()) return true;
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_scan_token(RBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3838" endline="3843">
final private boolean jj_3R_40() {
    if (jj_scan_token(IDENTIFIER)) return true;
    if (jj_scan_token(COLON)) return true;
    if (jj_3R_45()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4157" endline="4162">
final private boolean jj_3_19() {
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3838" endline="3843">
final private boolean jj_3R_40() {
    if (jj_scan_token(IDENTIFIER)) return true;
    if (jj_scan_token(COLON)) return true;
    if (jj_3R_45()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4575" endline="4580">
final private boolean jj_3R_123() {
    if (jj_scan_token(THROW)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3838" endline="3843">
final private boolean jj_3R_40() {
    if (jj_scan_token(IDENTIFIER)) return true;
    if (jj_scan_token(COLON)) return true;
    if (jj_3R_45()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4721" endline="4726">
final private boolean jj_3R_133() {
    if (jj_scan_token(LBRACE)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACE)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3838" endline="3843">
final private boolean jj_3R_40() {
    if (jj_scan_token(IDENTIFIER)) return true;
    if (jj_scan_token(COLON)) return true;
    if (jj_3R_45()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4781" endline="4786">
final private boolean jj_3R_131() {
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3838" endline="3843">
final private boolean jj_3R_40() {
    if (jj_scan_token(IDENTIFIER)) return true;
    if (jj_scan_token(COLON)) return true;
    if (jj_3R_45()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4932" endline="4937">
final private boolean jj_3R_99() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3838" endline="3843">
final private boolean jj_3R_40() {
    if (jj_scan_token(IDENTIFIER)) return true;
    if (jj_scan_token(COLON)) return true;
    if (jj_3R_45()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5141" endline="5146">
final private boolean jj_3_11() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_29()) return true;
    if (jj_scan_token(LBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3838" endline="3843">
final private boolean jj_3R_40() {
    if (jj_scan_token(IDENTIFIER)) return true;
    if (jj_scan_token(COLON)) return true;
    if (jj_3R_45()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5338" endline="5343">
final private boolean jj_3R_201() {
    if (jj_scan_token(CASE)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(COLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3838" endline="3843">
final private boolean jj_3R_40() {
    if (jj_scan_token(IDENTIFIER)) return true;
    if (jj_scan_token(COLON)) return true;
    if (jj_3R_45()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4714" endline="4719">
final private boolean jj_3R_128() {
    if (jj_scan_token(IMPORT)) return true;
    if (jj_scan_token(STAR)) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="10" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4996" endline="5005">
final private boolean jj_3_30() {
    if (jj_scan_token(FOR)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    if (jj_scan_token(COLON)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RPAREN)) return true;
    if (jj_3R_45()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5130" endline="5139">
final private boolean jj_3R_116() {
    if (jj_scan_token(DO)) return true;
    if (jj_3R_45()) return true;
    if (jj_scan_token(WHILE)) return true;
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RPAREN)) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4157" endline="4162">
final private boolean jj_3_19() {
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACKET)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4714" endline="4719">
final private boolean jj_3R_128() {
    if (jj_scan_token(IMPORT)) return true;
    if (jj_scan_token(STAR)) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4575" endline="4580">
final private boolean jj_3R_123() {
    if (jj_scan_token(THROW)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4714" endline="4719">
final private boolean jj_3R_128() {
    if (jj_scan_token(IMPORT)) return true;
    if (jj_scan_token(STAR)) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4721" endline="4726">
final private boolean jj_3R_133() {
    if (jj_scan_token(LBRACE)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACE)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4714" endline="4719">
final private boolean jj_3R_128() {
    if (jj_scan_token(IMPORT)) return true;
    if (jj_scan_token(STAR)) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4781" endline="4786">
final private boolean jj_3R_131() {
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RBRACKET)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4714" endline="4719">
final private boolean jj_3R_128() {
    if (jj_scan_token(IMPORT)) return true;
    if (jj_scan_token(STAR)) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4932" endline="4937">
final private boolean jj_3R_99() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4714" endline="4719">
final private boolean jj_3R_128() {
    if (jj_scan_token(IMPORT)) return true;
    if (jj_scan_token(STAR)) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5141" endline="5146">
final private boolean jj_3_11() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_29()) return true;
    if (jj_scan_token(LBRACKET)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4714" endline="4719">
final private boolean jj_3R_128() {
    if (jj_scan_token(IMPORT)) return true;
    if (jj_scan_token(STAR)) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5338" endline="5343">
final private boolean jj_3R_201() {
    if (jj_scan_token(CASE)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(COLON)) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="4714" endline="4719">
final private boolean jj_3R_128() {
    if (jj_scan_token(IMPORT)) return true;
    if (jj_scan_token(STAR)) return true;
    if (jj_scan_token(SEMICOLON)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="11" distance="2">
        <source file="org/jedit/options/OptionGroupPane.java" startline="419" endline="429">
public int getChildCount(Object parent)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent).getMemberCount();
			}
			else
			{
				return 0;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/gui/OptionsDialog.java" startline="597" endline="608">
@Override
		public int getChildCount(Object parent)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent).getMemberCount();
			}
			else
			{
				return 0;
			}
		}
</source>
    </clone>
    <clone nlines="11" distance="2">
        <source file="org/jedit/options/PluginOptionGroup.java" startline="120" endline="130">
public int getChildCount(Object parent)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent).getMemberCount();
			}
			else
			{
				return 0;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/gui/OptionsDialog.java" startline="597" endline="608">
@Override
		public int getChildCount(Object parent)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent).getMemberCount();
			}
			else
			{
				return 0;
			}
		}
</source>
    </clone>
    <clone nlines="8" distance="2">
        <source file="installer/OperatingSystem.java" startline="219" endline="226">
public String getDefaultDirectory(Install installer)
			{
				String dir = "/usr/local/";
				if(!new File(dir).canWrite())
					dir = System.getProperty("user.home");

				return new File(dir,"man/man1").getPath();
			}
</source>
        <source file="installer/OperatingSystem.java" startline="147" endline="156">
public String getDefaultDirectory(Install installer)
			{
				String dir = "/usr/local/";
				if(!new File(dir).canWrite())
				{
					dir = System.getProperty("user.home");
				}

				return new File(dir,"bin").getPath();
			}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="933" endline="941">
public int getScreenLineStartOffset(int line)
	{
		ChunkCache.LineInfo lineInfo = chunkCache.getLineInfo(line);
		if(lineInfo.physicalLine == -1)
			return -1;

		return buffer.getLineStartOffset(lineInfo.physicalLine)
			+ lineInfo.offset;
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="949" endline="957">
public int getScreenLineEndOffset(int line)
	{
		ChunkCache.LineInfo lineInfo = chunkCache.getLineInfo(line);
		if(lineInfo.physicalLine == -1)
			return -1;

		return buffer.getLineStartOffset(lineInfo.physicalLine)
			+ lineInfo.offset + lineInfo.length;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/jedit/options/OptionGroupPane.java" startline="90" endline="96">
public OptionGroupPane(OptionGroup group)
	{
		super(group.getName());
		optionGroup = group;

		init();
	}
</source>
        <source file="org/gjt/sp/jedit/pluginmgr/PluginManager.java" startline="158" endline="163">
private PluginManager(Frame parent)
	{
		super(jEdit.getProperty("plugin-manager.title"));
		this.parent = parent;
		init();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/ActionSet.java" startline="246" endline="251">
public void setLabel(String label)
	{
		if(label == null)
			throw new NullPointerException();
		this.label = label;
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/Gutter.java" startline="89" endline="95">
public void setFoldPainter(FoldPainter painter)
	{
		if (painter == null)
			foldPainter = new TriangleFoldPainter();
		else
			foldPainter = painter;
	}
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/textarea/Gutter.java" startline="605" endline="612">
public void setCurrentLineHighlightEnabled(boolean enabled)
	{
		if (currentLineHighlightEnabled == enabled) return;

		currentLineHighlightEnabled = enabled;

		repaint();
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/Gutter.java" startline="530" endline="537">
public void setLineNumberAlignment(int alignment)
	{
		if (this.alignment == alignment) return;

		this.alignment = alignment;

		repaint();
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="1778" endline="1783">
public void setSelection(Selection selection)
	{
		invalidateSelectedLines();
		selectionManager.setSelection(selection);
		finishCaretUpdate(caretLine,NO_SCROLL,true);
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="1764" endline="1770">
public void setSelection(Selection[] selection)
	{
		// invalidate the old selection
		invalidateSelectedLines();
		selectionManager.setSelection(selection);
		finishCaretUpdate(caretLine,NO_SCROLL,true);
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="1778" endline="1783">
public void setSelection(Selection selection)
	{
		invalidateSelectedLines();
		selectionManager.setSelection(selection);
		finishCaretUpdate(caretLine,NO_SCROLL,true);
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="1792" endline="1797">
public void addToSelection(Selection[] selection)
	{
		invalidateSelectedLines();
		selectionManager.addToSelection(selection);
		finishCaretUpdate(caretLine,NO_SCROLL,true);
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="1805" endline="1810">
public void addToSelection(Selection selection)
	{
		invalidateSelectedLines();
		selectionManager.addToSelection(selection);
		finishCaretUpdate(caretLine,NO_SCROLL,true);
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="1764" endline="1770">
public void setSelection(Selection[] selection)
	{
		// invalidate the old selection
		invalidateSelectedLines();
		selectionManager.setSelection(selection);
		finishCaretUpdate(caretLine,NO_SCROLL,true);
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="1805" endline="1810">
public void addToSelection(Selection selection)
	{
		invalidateSelectedLines();
		selectionManager.addToSelection(selection);
		finishCaretUpdate(caretLine,NO_SCROLL,true);
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="1792" endline="1797">
public void addToSelection(Selection[] selection)
	{
		invalidateSelectedLines();
		selectionManager.addToSelection(selection);
		finishCaretUpdate(caretLine,NO_SCROLL,true);
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="1830" endline="1835">
public void removeFromSelection(Selection sel)
	{
		invalidateSelectedLines();
		selectionManager.removeFromSelection(sel);
		finishCaretUpdate(caretLine,NO_SCROLL,true);
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="1764" endline="1770">
public void setSelection(Selection[] selection)
	{
		// invalidate the old selection
		invalidateSelectedLines();
		selectionManager.setSelection(selection);
		finishCaretUpdate(caretLine,NO_SCROLL,true);
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="1830" endline="1835">
public void removeFromSelection(Selection sel)
	{
		invalidateSelectedLines();
		selectionManager.removeFromSelection(sel);
		finishCaretUpdate(caretLine,NO_SCROLL,true);
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="1792" endline="1797">
public void addToSelection(Selection[] selection)
	{
		invalidateSelectedLines();
		selectionManager.addToSelection(selection);
		finishCaretUpdate(caretLine,NO_SCROLL,true);
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/browser/BrowserView.java" startline="187" endline="192">
public void run()
			{
				browser.directoryLoaded(node,loadInfo,addToHistory);
				if (delayedAWTTask != null)
					delayedAWTTask.run();
			}
</source>
        <source file="org/gjt/sp/jedit/buffer/BufferSegment.java" startline="81" endline="86">
private void toString(StringBuilder sb)
	{
		sb.append(data,offset,len);
		if (next != null)
			next.toString(sb);
	}
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/gui/PingPongList.java" startline="165" endline="172">
public void removeLeftTitle()
	{
		if (leftLabel != null)
		{
			leftPanel.remove(leftLabel);
			leftLabel = null;
		}
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/NameSpace.java" startline="352" endline="359">
public void unsetVariable( String name )
    {
        if ( variables != null )
        {
            variables.remove( name );
            nameSpaceChanged();
        }
    }
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/gui/PingPongList.java" startline="175" endline="182">
public void removeRightTitle()
	{
		if (rightLabel != null)
		{
			rightPanel.remove(rightLabel);
			rightLabel = null;
		}
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/NameSpace.java" startline="352" endline="359">
public void unsetVariable( String name )
    {
        if ( variables != null )
        {
            variables.remove( name );
            nameSpaceChanged();
        }
    }
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="4446" endline="4454">
public void removeTrailingWhiteSpace()
	{
		if(!buffer.isEditable())
			getToolkit().beep();
		else
		{
			buffer.removeTrailingWhiteSpace(getSelectedLines());
		}
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="4536" endline="4545">
public void indentSelectedLines()
 	{
 		if(!buffer.isEditable())
 			getToolkit().beep();
 		else
 		{
			buffer.indentLines(getSelectedLines());
			selectNone();
 		}
 	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="4564" endline="4572">
public void shiftIndentLeft()
	{
		if(!buffer.isEditable())
			getToolkit().beep();
		else
		{
			buffer.shiftIndentLeft(getSelectedLines());
		}
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="4536" endline="4545">
public void indentSelectedLines()
 	{
 		if(!buffer.isEditable())
 			getToolkit().beep();
 		else
 		{
			buffer.indentLines(getSelectedLines());
			selectNone();
 		}
 	}
</source>
    </clone>
    <clone nlines="9" distance="2">
        <source file="org/gjt/sp/jedit/ActionSet.java" startline="321" endline="329">
protected EditAction createBeanShellAction(String actionName,
						    String code,
						    String selected,
						    boolean noRepeat,
						    boolean noRecord,
						    boolean noRememberLast)
	{
		return new BeanShellAction(actionName,code,selected,noRepeat,noRecord,noRememberLast);
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/StandaloneTextArea.java" startline="623" endline="632">
@Override
		protected JEditBeanShellAction createBeanShellAction(String actionName,
									 String code,
									 String selected,
									 boolean noRepeat,
									 boolean noRecord,
									 boolean noRememberLast)
		{
			return new JEditBeanShellAction(actionName,code,selected,noRepeat,noRecord,noRememberLast);
		}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/textarea/Anchor.java" startline="74" endline="79">
protected Anchor(DisplayManager displayManager,
		TextArea textArea)
	{
		this.displayManager = displayManager;
		this.textArea = textArea;
	}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="1144" endline="1149">
public DirectoryEntryCompare(boolean sortMixFilesAndDirs,
			boolean sortIgnoreCase)
		{
			this.sortMixFilesAndDirs = sortMixFilesAndDirs;
			this.sortIgnoreCase = sortIgnoreCase;
		}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/textarea/Anchor.java" startline="74" endline="79">
protected Anchor(DisplayManager displayManager,
		TextArea textArea)
	{
		this.displayManager = displayManager;
		this.textArea = textArea;
	}
</source>
        <source file="org/gjt/sp/jedit/gui/DockableWindowManagerImpl.java" startline="1021" endline="1030">
Entry(DockableWindowFactory.Window factory, String position)
		{
			this.factory = factory;
			this.position = position;

			// get the title here, not in the factory constructor,
			// since the factory might be created before a plugin's
			// props are loaded

		}
</source>
    </clone>
    <clone nlines="7" distance="3">
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="1904" endline="1911">
FavoritesMenuButton()
		{
			setText(jEdit.getProperty("vfs.browser.favorites.label"));
			GUIUtilities.setAutoMnemonic(this);
			setName("favorites");
			createPopupMenu();

		}
</source>
        <source file="org/gjt/sp/jedit/pluginmgr/InstallPanel.java" startline="1172" endline="1178">
InstallButton()
		{
			super(jEdit.getProperty("install-plugins.install"));
			pluginModel.addTableModelListener(this);
			addActionListener(this);
			setEnabled(false);
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="6777" endline="6782">
@Override
			public void actionPerformed(ActionEvent evt)
			{
				if(focusedComponent != null)
					focusedComponent.updateStructureHighlight();
			}
</source>
        <source file="org/gjt/sp/jedit/View.java" startline="2202" endline="2207">
@Override
		public void scrolledVertically(TextArea textArea)
		{
			if(getTextArea() == textArea)
				status.updateCaretStatus();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/View.java" startline="1185" endline="1190">
@EBHandler
	public void handleSearchSettingsChanged(SearchSettingsChanged msg)
	{
		if(searchBar != null)
			searchBar.update();
	}
</source>
        <source file="org/gjt/sp/jedit/View.java" startline="2202" endline="2207">
@Override
		public void scrolledVertically(TextArea textArea)
		{
			if(getTextArea() == textArea)
				status.updateCaretStatus();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/View.java" startline="2202" endline="2207">
@Override
		public void scrolledVertically(TextArea textArea)
		{
			if(getTextArea() == textArea)
				status.updateCaretStatus();
		}
</source>
        <source file="org/gjt/sp/jedit/View.java" startline="2168" endline="2173">
@Override
		public void caretUpdate(CaretEvent evt)
		{
			if(evt.getSource() == getTextArea())
				status.updateCaretStatus();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/View.java" startline="2202" endline="2207">
@Override
		public void scrolledVertically(TextArea textArea)
		{
			if(getTextArea() == textArea)
				status.updateCaretStatus();
		}
</source>
        <source file="org/gjt/sp/jedit/gui/DockableWindowManager.java" startline="448" endline="453">
@EBHandler
	public void handleDockableWindowUpdate(DockableWindowUpdate msg)
	{
		if(msg.getWhat() == DockableWindowUpdate.PROPERTIES_CHANGED)
			propertiesChanged();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/View.java" startline="2202" endline="2207">
@Override
		public void scrolledVertically(TextArea textArea)
		{
			if(getTextArea() == textArea)
				status.updateCaretStatus();
		}
</source>
        <source file="org/gjt/sp/jedit/gui/DockableWindowManagerImpl.java" startline="678" endline="683">
@EBHandler
	public void handleDockableWindowUpdate(DockableWindowUpdate msg)
	{
		if (msg.getWhat() == DockableWindowUpdate.PROPERTIES_CHANGED)
			propertiesChanged();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/LogViewer.java" startline="537" endline="542">
@Override
						public void actionPerformed(ActionEvent ae)
						{
							LogSettings.this.setVisible(false);
							LogSettings.this.dispose();
						}
</source>
        <source file="org/gjt/sp/jedit/gui/LogViewer.java" startline="526" endline="532">
@Override
						public void actionPerformed(ActionEvent ae)
						{
							save();
							LogSettings.this.setVisible(false);
							LogSettings.this.dispose();
						}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/util/ThreadUtilities.java" startline="241" endline="246">
@Override
		public void run()
		{
			runnable.run();
			done.countDown();
		}
</source>
        <source file="org/gjt/sp/jedit/options/ShortcutsOptionPane.java" startline="141" endline="146">
@Override
			public void actionPerformed(ActionEvent arg0)
			{
				filterTF.setText("");
				filterTF.requestFocus();
			}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/util/ThreadUtilities.java" startline="241" endline="246">
@Override
		public void run()
		{
			runnable.run();
			done.countDown();
		}
</source>
        <source file="org/gjt/sp/jedit/pluginmgr/PluginManagerProgress.java" startline="195" endline="200">
@Override
		public void windowClosing(WindowEvent evt)
		{
			thread.stop();
			dispose();
		}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/util/ThreadUtilities.java" startline="241" endline="246">
@Override
		public void run()
		{
			runnable.run();
			done.countDown();
		}
</source>
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="414" endline="419">
@Override
	public void addNotify()
	{
		super.addNotify();
		EditBus.addToBus(this);
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/util/ThreadUtilities.java" startline="241" endline="246">
@Override
		public void run()
		{
			runnable.run();
			done.countDown();
		}
</source>
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="127" endline="132">
@Override
	public void addNotify()
	{
		super.addNotify();
		EditBus.addToBus(this);
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/util/ThreadUtilities.java" startline="241" endline="246">
@Override
		public void run()
		{
			runnable.run();
			done.countDown();
		}
</source>
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="135" endline="140">
@Override
	public void removeNotify()
	{
		super.removeNotify();
		EditBus.removeFromBus(this);
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/util/ThreadUtilities.java" startline="241" endline="246">
@Override
		public void run()
		{
			runnable.run();
			done.countDown();
		}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/TaskMonitorWidgetFactory.java" startline="93" endline="98">
@Override
        public void removeNotify()
        {
            super.removeNotify();
            TaskManager.instance.removeTaskListener(this);
        }
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/util/ThreadUtilities.java" startline="241" endline="246">
@Override
		public void run()
		{
			runnable.run();
			done.countDown();
		}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/BufferSetWidgetFactory.java" startline="72" endline="77">
@Override
				public void removeNotify()
				{
					super.removeNotify();
					EditBus.removeFromBus(BufferSetWidget.this);
				}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/util/ThreadUtilities.java" startline="241" endline="246">
@Override
		public void run()
		{
			runnable.run();
			done.countDown();
		}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/LastModifiedWidgetFactory.java" startline="75" endline="80">
@Override
				public void removeNotify()
				{
					super.removeNotify();
					EditBus.removeFromBus(LastModifiedWidget.this);
				}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/util/ThreadUtilities.java" startline="241" endline="246">
@Override
		public void run()
		{
			runnable.run();
			done.countDown();
		}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/ErrorsWidgetFactory.java" startline="306" endline="311">
@Override
		public void dispose()
		{
			GUIUtilities.saveGeometry(this, "status.errorWidget");
			super.dispose();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/util/ThreadUtilities.java" startline="241" endline="246">
@Override
		public void run()
		{
			runnable.run();
			done.countDown();
		}
</source>
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="175" endline="180">
@Override
	public void addNotify()
	{
		super.addNotify();
		TaskManager.instance.addTaskListener(taskHandler);
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/util/ThreadUtilities.java" startline="241" endline="246">
@Override
		public void run()
		{
			runnable.run();
			done.countDown();
		}
</source>
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="183" endline="188">
@Override
	public void removeNotify()
	{
		super.removeNotify();
		TaskManager.instance.removeTaskListener(taskHandler);
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/util/ThreadUtilities.java" startline="241" endline="246">
@Override
		public void run()
		{
			runnable.run();
			done.countDown();
		}
</source>
        <source file="org/gjt/sp/jedit/jEdit.java" startline="3547" endline="3552">
@Override
			public void run()
			{
				Thread.currentThread().setContextClassLoader(
					new JARClassLoader());
			}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/util/ThreadUtilities.java" startline="241" endline="246">
@Override
		public void run()
		{
			runnable.run();
			done.countDown();
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/JEditTextArea.java" startline="79" endline="84">
@Override
	public void dispose()
	{
		EditBus.removeFromBus(this);
		super.dispose();
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/help/HelpViewer.java" startline="386" endline="393">
@Override
	public void dispose()
	{
		EditBus.removeFromBus(this);
		jEdit.setIntegerProperty("helpviewer.splitter",
			splitter.getDividerLocation());
		super.dispose();
	}
</source>
        <source file="org/gjt/sp/jedit/gui/OptionsDialog.java" startline="132" endline="138">
@Override
	public void dispose()
	{
		GUIUtilities.saveGeometry(this,name);
		jEdit.setIntegerProperty(name + ".splitter",splitter.getDividerLocation());
		super.dispose();
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/search/SearchDialog.java" startline="311" endline="317">
@Override
	public void dispose()
	{
		EditBus.removeFromBus(this);
		viewHash.remove(view);
		super.dispose();
	}
</source>
        <source file="org/gjt/sp/jedit/browser/VFSFileChooserDialog.java" startline="119" endline="125">
@Override
	public void dispose()
	{
		GUIUtilities.saveGeometry(this,"vfs.browser.dialog");
		TaskManager.instance.removeTaskListener(ioTaskHandler);
		super.dispose();
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/search/SearchDialog.java" startline="311" endline="317">
@Override
	public void dispose()
	{
		EditBus.removeFromBus(this);
		viewHash.remove(view);
		super.dispose();
	}
</source>
        <source file="org/gjt/sp/jedit/pluginmgr/PluginManager.java" startline="62" endline="69">
@Override
	public void dispose()
	{
		instance = null;
		EditBus.removeFromBus(this);
		EditBus.removeFromBus(installer);
		super.dispose();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="437" endline="442">
@Test
	public void read_charArray_ShouldCorrectlyHandleEOF() throws IOException
	{
		int c = getReader("").read(bufferArray);
		assertThat(c, is(equalTo(-1)));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="444" endline="449">
@Test
	public void read_charArray_int_int_ShouldCorrectlyHandleEOF() throws IOException
	{
		int c = getReader("").read(bufferArray, 0, 1);
		assertThat(c, is(equalTo(-1)));
	}
</source>
    </clone>
    <clone nlines="13" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="240" endline="252">
@Test
	public void permissiveRead_charArray_ShouldAcceptIncompleteEscapeSequence() throws IOException
	{
		Reader reader = getPermissiveReader("\\u21a");
		int c = reader.read(bufferArray);
		assertThat(c, is(equalTo(5)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('u')));
		assertThat(bufferArray[i++], is(equalTo('2')));
		assertThat(bufferArray[i++], is(equalTo('1')));
		assertThat(bufferArray[i++], is(equalTo('a')));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="254" endline="266">
@Test
	public void permissiveRead_charArray_int_int_ShouldAcceptIncompleteEscapeSequence() throws IOException
	{
		Reader reader = getPermissiveReader("\\u21a");
		int c = reader.read(bufferArray, 0, 5);
		assertThat(c, is(equalTo(5)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('u')));
		assertThat(bufferArray[i++], is(equalTo('2')));
		assertThat(bufferArray[i++], is(equalTo('1')));
		assertThat(bufferArray[i++], is(equalTo('a')));
	}
</source>
    </clone>
    <clone nlines="10" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="292" endline="301">
@Test
	public void permissiveRead_charArray_ShouldAcceptMissingInputAfterU() throws IOException
	{
		Reader reader = getPermissiveReader("\\u");
		int c = reader.read(bufferArray);
		assertThat(c, is(equalTo(2)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('u')));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="303" endline="312">
@Test
	public void permissiveRead_charArray_int_int_ShouldAcceptMissingInputAfterU() throws IOException
	{
		Reader reader = getPermissiveReader("\\u");
		int c = reader.read(bufferArray, 0, 2);
		assertThat(c, is(equalTo(2)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('u')));
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1412" endline="1420">
@Test
	public void write_String_ShouldEncodeASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		writer.write("\\u21aF");
		writer.flush();
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21aF")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1392" endline="1400">
@Test
	public void write_String_int_int_ShouldEncodeASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		writer.write("\\u21aF", 0, 6);
		writer.flush();
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21aF")));
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1412" endline="1420">
@Test
	public void write_String_ShouldEncodeASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		writer.write("\\u21aF");
		writer.flush();
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21aF")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1475" endline="1483">
@Test
	public void write_String_int_int_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		writer.write("\u21AF", 0, 1);
		writer.flush();
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1455" endline="1463">
@Test
	public void write_int_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		writer.write('\u21AF');
		writer.flush();
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1392" endline="1400">
@Test
	public void write_String_int_int_ShouldEncodeASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		writer.write("\\u21aF", 0, 6);
		writer.flush();
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21aF")));
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1455" endline="1463">
@Test
	public void write_int_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		writer.write('\u21AF');
		writer.flush();
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1475" endline="1483">
@Test
	public void write_String_int_int_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		writer.write("\u21AF", 0, 1);
		writer.flush();
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1495" endline="1503">
@Test
	public void write_String_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		writer.write("\u21AF");
		writer.flush();
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1392" endline="1400">
@Test
	public void write_String_int_int_ShouldEncodeASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		writer.write("\\u21aF", 0, 6);
		writer.flush();
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21aF")));
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1495" endline="1503">
@Test
	public void write_String_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		writer.write("\u21AF");
		writer.flush();
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1475" endline="1483">
@Test
	public void write_String_int_int_ShouldEncodeNonASCIICharactersCorrectly() throws IOException
	{
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		writer = native2ASCIIEncoding.getTextWriter(baos);
		writer.write("\u21AF", 0, 1);
		writer.flush();
		assertThat(baos.toString("ISO-8859-1"), is(equalTo("\\u21AF")));
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="594" endline="602">
@Test
	public void read_charArray_ShouldConvertEscapeSequenceWithThrottledInputStream()
		throws IOException, InvocationTargetException, NoSuchMethodException, InstantiationException,
		       IllegalAccessException
	{
		int c = getThrottledReader("\\u21aF").read(bufferArray);
		assertThat(c, is(equalTo(1)));
		assertThat(bufferArray[0], is(equalTo('\u21aF')));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="604" endline="612">
@Test
	public void read_charArray_int_int_ShouldConvertEscapeSequenceWithThrottledInputStream()
		throws IOException, InvocationTargetException, NoSuchMethodException, InstantiationException,
		       IllegalAccessException
	{
		int c = getThrottledReader("\\u21aF").read(bufferArray, 0, 1);
		assertThat(c, is(equalTo(1)));
		assertThat(bufferArray[0], is(equalTo('\u21aF')));
	}
</source>
    </clone>
    <clone nlines="15" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="711" endline="725">
@Test
	public void permissiveRead_charArray_ShouldAcceptMalformedInputWithThrottledReader()
		throws IOException, InvocationTargetException, NoSuchMethodException, InstantiationException,
		       IllegalAccessException
	{
		int c = getThrottledPermissiveReader("\\u21a;").read(bufferArray);
		assertThat(c, is(equalTo(6)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('u')));
		assertThat(bufferArray[i++], is(equalTo('2')));
		assertThat(bufferArray[i++], is(equalTo('1')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo(';')));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="727" endline="741">
@Test
	public void permissiveRead_charArray_int_int_ShouldAcceptMalformedInputWithThrottledReader()
		throws IOException, InvocationTargetException, NoSuchMethodException, InstantiationException,
		       IllegalAccessException
	{
		int c = getThrottledPermissiveReader("\\u21a;").read(bufferArray, 0, 6);
		assertThat(c, is(equalTo(6)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('u')));
		assertThat(bufferArray[i++], is(equalTo('2')));
		assertThat(bufferArray[i++], is(equalTo('1')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo(';')));
	}
</source>
    </clone>
    <clone nlines="7" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="3845" endline="3851">
final private boolean jj_3R_156() {
    if (jj_scan_token(HOOK)) return true;
    if (jj_3R_39()) return true;
    if (jj_scan_token(COLON)) return true;
    if (jj_3R_108()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5240" endline="5246">
final private boolean jj_3R_59() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_29()) return true;
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_scan_token(RBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="7" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5071" endline="5077">
final private boolean jj_3R_217() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(RPAREN)) return true;
    if (jj_3R_208()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5240" endline="5246">
final private boolean jj_3R_59() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_29()) return true;
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_scan_token(RBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="7" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5079" endline="5085">
final private boolean jj_3R_216() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_32()) return true;
    if (jj_scan_token(RPAREN)) return true;
    if (jj_3R_191()) return true;
    return false;
  }
</source>
        <source file="org/gjt/sp/jedit/bsh/Parser.java" startline="5240" endline="5246">
final private boolean jj_3R_59() {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_29()) return true;
    if (jj_scan_token(LBRACKET)) return true;
    if (jj_scan_token(RBRACKET)) return true;
    return false;
  }
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/bsh/NameSpace.java" startline="1523" endline="1529">
public String getInvocationText() {
        SimpleNode node = getNode();
        if ( node != null )
            return node.getText();
        else
            return "&lt;invoked from Java code&gt;";
    }
</source>
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="1613" endline="1620">
public String getStringProperty(String name)
	{
		Object obj = getProperty(name);
		if(obj != null)
			return obj.toString();
		else
			return null;
	}
</source>
    </clone>
    <clone nlines="7" distance="1">
        <source file="org/gjt/sp/jedit/bsh/NameSpace.java" startline="1523" endline="1529">
public String getInvocationText() {
        SimpleNode node = getNode();
        if ( node != null )
            return node.getText();
        else
            return "&lt;invoked from Java code&gt;";
    }
</source>
        <source file="org/gjt/sp/jedit/bsh/NameSpace.java" startline="1516" endline="1522">
public int getInvocationLine() {
        SimpleNode node = getNode();
        if ( node != null )
            return node.getLineNumber();
        else
            return -1;
    }
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/browser/DeleteBrowserTask.java" startline="94" endline="99">
public String toString()
	{
		return getClass().getName() + "[type=DELETE"
		    + ",vfs=" + vfs + ",path=" + path +
		    ']';
	}
</source>
        <source file="org/gjt/sp/jedit/browser/RenameBrowserTask.java" startline="121" endline="126">
public String toString()
	{
		return getClass().getName() + "[type=RENAME"
		    + ",vfs=" + vfs + ",path=" + path
		    + ",path2=" + path2 + ']';
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/browser/RenameBrowserTask.java" startline="121" endline="126">
public String toString()
	{
		return getClass().getName() + "[type=RENAME"
		    + ",vfs=" + vfs + ",path=" + path
		    + ",path2=" + path2 + ']';
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/Selection.java" startline="126" endline="132">
@Override
	public String toString()
	{
		return getClass().getName() + "[start=" + start
			+ ",end=" + end + ",startLine=" + startLine
			+ ",endLine=" + endLine + ']';
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/browser/RenameBrowserTask.java" startline="121" endline="126">
public String toString()
	{
		return getClass().getName() + "[type=RENAME"
		    + ",vfs=" + vfs + ",path=" + path
		    + ",path2=" + path2 + ']';
	}
</source>
        <source file="org/gjt/sp/jedit/gui/ExtendedGridLayout.java" startline="1216" endline="1221">
public String toString()
	{
		return getClass().getName() + "[hgap=" + hgap + ",vgap=" + vgap
			+ ",distanceToBorders=" + distanceToBorders
			+ ",comptable=" + comptable + "]";
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/FilteredListModel.java" startline="256" endline="261">
public int getSize()
	{
		if (filteredIndices == null)
			return delegated.getSize();
		return filteredIndices.size();
	}
</source>
        <source file="org/gjt/sp/jedit/gui/FilteredTableModel.java" startline="216" endline="222">
@Override
	public int getRowCount()
	{
		if (filteredIndices == null)
			return delegated.getRowCount();
		return filteredIndices.size();
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/indent/IndentAction.java" startline="113" endline="119">
public boolean equals(Object o)
		{
			if(o instanceof Increase)
				return ((Increase)o).amount == amount;
			else
				return false;
		}
</source>
        <source file="org/gjt/sp/jedit/gui/CompleteWord.java" startline="353" endline="359">
public boolean equals(Object obj)
		{
			if(obj instanceof Completion)
				return ((Completion)obj).text.equals(text);
			else
				return false;
		}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/indent/IndentAction.java" startline="113" endline="119">
public boolean equals(Object o)
		{
			if(o instanceof Increase)
				return ((Increase)o).amount == amount;
			else
				return false;
		}
</source>
        <source file="org/gjt/sp/jedit/help/HelpIndex.java" startline="383" endline="389">
public boolean equals(Object o)
		{
			if(o instanceof HelpFile)
				return ((HelpFile)o).file.equals(file);
			else
				return false;
		}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/indent/IndentAction.java" startline="113" endline="119">
public boolean equals(Object o)
		{
			if(o instanceof Increase)
				return ((Increase)o).amount == amount;
			else
				return false;
		}
</source>
        <source file="org/gjt/sp/jedit/options/ToolBarOptionPane.java" startline="260" endline="266">
public boolean equals(Object o)
		{
			if(o instanceof Button)
				return ((Button)o).actionName.equals(actionName);
			else
				return false;
		}
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/textarea/Gutter.java" startline="258" endline="264">
public String getToolTipText(MouseEvent evt)
	{
		if(textArea.getBuffer().isLoading())
			return null;

		return extensionMgr.getToolTipText(evt.getX(),evt.getY());
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextAreaPainter.java" startline="752" endline="759">
@Override
	public String getToolTipText(MouseEvent evt)
	{
		if(textArea.getBuffer().isLoading())
			return null;

		return extensionMgr.getToolTipText(evt.getX(),evt.getY());
	}
</source>
    </clone>
    <clone nlines="16" distance="2">
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="329" endline="344">
public int getLineOfOffset(int offset)
	{
		try
		{
			readLock();

			if(offset &lt; 0 || offset &gt; getLength())
				throw new ArrayIndexOutOfBoundsException(offset);

			return lineMgr.getLineOfOffset(offset);
		}
		finally
		{
			readUnlock();
		}
	}
</source>
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="1423" endline="1438">
public Position createPosition(int offset)
	{
		try
		{
			readLock();

			if(offset &lt; 0 || offset &gt; contentMgr.getLength())
				throw new ArrayIndexOutOfBoundsException(offset);

			return positionMgr.createPosition(offset);
		}
		finally
		{
			readUnlock();
		}
	}
</source>
    </clone>
    <clone nlines="16" distance="3">
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="329" endline="344">
public int getLineOfOffset(int offset)
	{
		try
		{
			readLock();

			if(offset &lt; 0 || offset &gt; getLength())
				throw new ArrayIndexOutOfBoundsException(offset);

			return lineMgr.getLineOfOffset(offset);
		}
		finally
		{
			readUnlock();
		}
	}
</source>
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="385" endline="400">
public int getLineEndOffset(int line)
	{
		try
		{
			readLock();

			if(line &lt; 0 || line &gt;= lineMgr.getLineCount())
				throw new ArrayIndexOutOfBoundsException(line);

			return lineMgr.getLineEndOffset(line);
		}
		finally
		{
			readUnlock();
		}
	}
</source>
    </clone>
    <clone nlines="16" distance="1">
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="1423" endline="1438">
public Position createPosition(int offset)
	{
		try
		{
			readLock();

			if(offset &lt; 0 || offset &gt; contentMgr.getLength())
				throw new ArrayIndexOutOfBoundsException(offset);

			return positionMgr.createPosition(offset);
		}
		finally
		{
			readUnlock();
		}
	}
</source>
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="385" endline="400">
public int getLineEndOffset(int line)
	{
		try
		{
			readLock();

			if(line &lt; 0 || line &gt;= lineMgr.getLineCount())
				throw new ArrayIndexOutOfBoundsException(line);

			return lineMgr.getLineEndOffset(line);
		}
		finally
		{
			readUnlock();
		}
	}
</source>
    </clone>
    <clone nlines="12" distance="4">
        <source file="org/gjt/sp/jedit/buffer/ContentManager.java" startline="114" endline="125">
public CharSequence getSegment(int start, int len)
	{
		if(start &gt;= gapStart)
			return new BufferSegment(text,start + gapLength(),len);
		else if(start + len &lt;= gapStart)
			return new BufferSegment(text,start,len);
		else
		{
			return new BufferSegment(text,start,gapStart - start,
				new BufferSegment(text,gapEnd(),start + len - gapStart));
		}
	}
</source>
        <source file="org/gjt/sp/jedit/buffer/ContentManager.java" startline="47" endline="58">
public String getText(int start, int len)
	{
		if(start &gt;= gapStart)
			return new String(text,start + gapLength(),len);
		else if(start + len &lt;= gapStart)
			return new String(text,start,len);
		else
		{
			return new String(text,start,gapStart - start)
				.concat(new String(text,gapEnd(),start + len - gapStart));
		}
	}
</source>
    </clone>
    <clone nlines="11" distance="2">
        <source file="org/jedit/options/OptionGroupPane.java" startline="407" endline="417">
public Object getChild(Object parent, int index)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent).getMember(index);
			}
			else
			{
				return null;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/gui/OptionsDialog.java" startline="584" endline="595">
@Override
		public Object getChild(Object parent, int index)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent).getMember(index);
			}
			else
			{
				return null;
			}
		}
</source>
    </clone>
    <clone nlines="11" distance="2">
        <source file="org/jedit/options/PluginOptionGroup.java" startline="108" endline="118">
public Object getChild(Object parent, int index)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent).getMember(index);
			}
			else
			{
				return null;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/gui/OptionsDialog.java" startline="584" endline="595">
@Override
		public Object getChild(Object parent, int index)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent).getMember(index);
			}
			else
			{
				return null;
			}
		}
</source>
    </clone>
    <clone nlines="11" distance="4">
        <source file="org/jedit/options/OptionGroupPane.java" startline="407" endline="417">
public Object getChild(Object parent, int index)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent).getMember(index);
			}
			else
			{
				return null;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/gui/OptionsDialog.java" startline="610" endline="622">
@Override
		public int getIndexOfChild(Object parent, Object child)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent)
					.getMemberIndex(child);
			}
			else
			{
				return -1;
			}
		}
</source>
    </clone>
    <clone nlines="11" distance="4">
        <source file="org/jedit/options/PluginOptionGroup.java" startline="108" endline="118">
public Object getChild(Object parent, int index)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent).getMember(index);
			}
			else
			{
				return null;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/gui/OptionsDialog.java" startline="610" endline="622">
@Override
		public int getIndexOfChild(Object parent, Object child)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent)
					.getMemberIndex(child);
			}
			else
			{
				return -1;
			}
		}
</source>
    </clone>
    <clone nlines="11" distance="2">
        <source file="org/jedit/options/OptionGroupPane.java" startline="407" endline="417">
public Object getChild(Object parent, int index)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent).getMember(index);
			}
			else
			{
				return null;
			}
		}
</source>
        <source file="org/jedit/options/OptionGroupPane.java" startline="431" endline="442">
public int getIndexOfChild(Object parent, Object child)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent)
					.getMemberIndex(child);
			}
			else
			{
				return -1;
			}
		}
</source>
    </clone>
    <clone nlines="11" distance="2">
        <source file="org/jedit/options/OptionGroupPane.java" startline="407" endline="417">
public Object getChild(Object parent, int index)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent).getMember(index);
			}
			else
			{
				return null;
			}
		}
</source>
        <source file="org/jedit/options/PluginOptionGroup.java" startline="132" endline="143">
public int getIndexOfChild(Object parent, Object child)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent)
					.getMemberIndex(child);
			}
			else
			{
				return -1;
			}
		}
</source>
    </clone>
    <clone nlines="11" distance="2">
        <source file="org/jedit/options/PluginOptionGroup.java" startline="108" endline="118">
public Object getChild(Object parent, int index)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent).getMember(index);
			}
			else
			{
				return null;
			}
		}
</source>
        <source file="org/jedit/options/OptionGroupPane.java" startline="431" endline="442">
public int getIndexOfChild(Object parent, Object child)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent)
					.getMemberIndex(child);
			}
			else
			{
				return -1;
			}
		}
</source>
    </clone>
    <clone nlines="11" distance="2">
        <source file="org/jedit/options/PluginOptionGroup.java" startline="108" endline="118">
public Object getChild(Object parent, int index)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent).getMember(index);
			}
			else
			{
				return null;
			}
		}
</source>
        <source file="org/jedit/options/PluginOptionGroup.java" startline="132" endline="143">
public int getIndexOfChild(Object parent, Object child)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent)
					.getMemberIndex(child);
			}
			else
			{
				return -1;
			}
		}
</source>
    </clone>
    <clone nlines="12" distance="4">
        <source file="org/jedit/options/OptionGroupPane.java" startline="431" endline="442">
public int getIndexOfChild(Object parent, Object child)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent)
					.getMemberIndex(child);
			}
			else
			{
				return -1;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/gui/OptionsDialog.java" startline="584" endline="595">
@Override
		public Object getChild(Object parent, int index)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent).getMember(index);
			}
			else
			{
				return null;
			}
		}
</source>
    </clone>
    <clone nlines="12" distance="4">
        <source file="org/jedit/options/PluginOptionGroup.java" startline="132" endline="143">
public int getIndexOfChild(Object parent, Object child)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent)
					.getMemberIndex(child);
			}
			else
			{
				return -1;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/gui/OptionsDialog.java" startline="584" endline="595">
@Override
		public Object getChild(Object parent, int index)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent).getMember(index);
			}
			else
			{
				return null;
			}
		}
</source>
    </clone>
    <clone nlines="12" distance="2">
        <source file="org/jedit/options/OptionGroupPane.java" startline="431" endline="442">
public int getIndexOfChild(Object parent, Object child)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent)
					.getMemberIndex(child);
			}
			else
			{
				return -1;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/gui/OptionsDialog.java" startline="610" endline="622">
@Override
		public int getIndexOfChild(Object parent, Object child)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent)
					.getMemberIndex(child);
			}
			else
			{
				return -1;
			}
		}
</source>
    </clone>
    <clone nlines="12" distance="2">
        <source file="org/jedit/options/PluginOptionGroup.java" startline="132" endline="143">
public int getIndexOfChild(Object parent, Object child)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent)
					.getMemberIndex(child);
			}
			else
			{
				return -1;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/gui/OptionsDialog.java" startline="610" endline="622">
@Override
		public int getIndexOfChild(Object parent, Object child)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent)
					.getMemberIndex(child);
			}
			else
			{
				return -1;
			}
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/bsh/BSHAmbiguousName.java" startline="95" endline="101">
public Object eval( CallStack callstack, Interpreter interpreter ) 
		throws EvalError
    {
		throw new InterpreterError( 
			"Don't know how to eval an ambiguous name!"
			+"  Use toObject() if you want an object." );
    }
</source>
        <source file="org/gjt/sp/jedit/bsh/BSHArrayInitializer.java" startline="43" endline="48">
public Object eval( CallStack callstack, Interpreter interpreter )
		throws EvalError 
	{
		throw new EvalError( "Array initializer has no base type.", 
			this, callstack );
	}
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="1047" endline="1053">
public OutputStream _createOutputStream(Object session,
		String path, Component comp)
		throws IOException
	{
		VFSManager.error(comp,path,"vfs.not-supported.save",new String[] { name });
		return null;
	}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="872" endline="878">
public VFSFile[] _listFiles(Object session, String directory,
		Component comp)
		throws IOException
	{
		VFSManager.error(comp,directory,"vfs.not-supported.list",new String[] { name });
		return null;
	}
</source>
    </clone>
    <clone nlines="7" distance="3">
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="1047" endline="1053">
public OutputStream _createOutputStream(Object session,
		String path, Component comp)
		throws IOException
	{
		VFSManager.error(comp,path,"vfs.not-supported.save",new String[] { name });
		return null;
	}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="1029" endline="1035">
public InputStream _createInputStream(Object session,
		String path, boolean ignoreErrors, Component comp)
		throws IOException
	{
		VFSManager.error(comp,path,"vfs.not-supported.load",new String[] { name });
		return null;
	}
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="installer/TarBuffer.java" startline="89" endline="95">
public
	TarBuffer( OutputStream outStream, int blockSize, int recordSize )
		{
		this.inStream = null;
		this.outStream = outStream;
		this.initialize( blockSize, recordSize );
		}
</source>
        <source file="installer/TarBuffer.java" startline="69" endline="75">
public
	TarBuffer( InputStream inStream, int blockSize, int recordSize )
		{
		this.inStream = inStream;
		this.outStream = null;
		this.initialize( blockSize, recordSize );
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/bsh/classpath/DiscreteFilesClassLoader.java" startline="63" endline="68">
public DiscreteFilesClassLoader( 
		BshClassManager classManager, ClassSourceMap map ) 
	{
		super( classManager );
		this.map = map;
	}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="1144" endline="1149">
public DirectoryEntryCompare(boolean sortMixFilesAndDirs,
			boolean sortIgnoreCase)
		{
			this.sortMixFilesAndDirs = sortMixFilesAndDirs;
			this.sortIgnoreCase = sortIgnoreCase;
		}
</source>
    </clone>
    <clone nlines="9" distance="2">
        <source file="org/gjt/sp/jedit/gui/EnhancedButton.java" startline="83" endline="91">
public void mouseReleased(MouseEvent evt)
		{
			if(msgSet)
			{
				GUIUtilities.getView((Component)evt.getSource())
					.getStatus().setMessage(null);
				msgSet = false;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/menu/EnhancedCheckBoxMenuItem.java" startline="178" endline="187">
@Override
		public void mouseReleased(MouseEvent evt)
		{
			if(msgSet)
			{
				GUIUtilities.getView((Component)evt.getSource())
					.getStatus().setMessage(null);
				msgSet = false;
			}
		}
</source>
    </clone>
    <clone nlines="9" distance="2">
        <source file="org/gjt/sp/jedit/gui/EnhancedButton.java" startline="83" endline="91">
public void mouseReleased(MouseEvent evt)
		{
			if(msgSet)
			{
				GUIUtilities.getView((Component)evt.getSource())
					.getStatus().setMessage(null);
				msgSet = false;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/menu/EnhancedCheckBoxMenuItem.java" startline="201" endline="210">
@Override
		public void mouseExited(MouseEvent evt)
		{
			if(msgSet)
			{
				GUIUtilities.getView((Component)evt.getSource())
					.getStatus().setMessage(null);
				msgSet = false;
			}
		}
</source>
    </clone>
    <clone nlines="9" distance="2">
        <source file="org/gjt/sp/jedit/gui/EnhancedButton.java" startline="104" endline="112">
public void mouseExited(MouseEvent evt)
		{
			if(msgSet)
			{
				GUIUtilities.getView((Component)evt.getSource())
					.getStatus().setMessage(null);
				msgSet = false;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/menu/EnhancedCheckBoxMenuItem.java" startline="178" endline="187">
@Override
		public void mouseReleased(MouseEvent evt)
		{
			if(msgSet)
			{
				GUIUtilities.getView((Component)evt.getSource())
					.getStatus().setMessage(null);
				msgSet = false;
			}
		}
</source>
    </clone>
    <clone nlines="9" distance="2">
        <source file="org/gjt/sp/jedit/gui/EnhancedButton.java" startline="104" endline="112">
public void mouseExited(MouseEvent evt)
		{
			if(msgSet)
			{
				GUIUtilities.getView((Component)evt.getSource())
					.getStatus().setMessage(null);
				msgSet = false;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/menu/EnhancedCheckBoxMenuItem.java" startline="201" endline="210">
@Override
		public void mouseExited(MouseEvent evt)
		{
			if(msgSet)
			{
				GUIUtilities.getView((Component)evt.getSource())
					.getStatus().setMessage(null);
				msgSet = false;
			}
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="195" endline="200">
public void setMouseHandler(MouseInputAdapter mouseInputAdapter)
	{
		mouseHandler = mouseInputAdapter;
		painter.addMouseListener(mouseHandler);
		painter.addMouseMotionListener(mouseHandler);
	}
</source>
        <source file="org/gjt/sp/jedit/help/HistoryButton.java" startline="82" endline="87">
public void setEnabled(boolean state)
	{
		super.setEnabled(state);
		drop_button.setEnabled(state);
		arrow_button.setEnabled(state);
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="installer/SwingInstall.java" startline="398" endline="403">
public void run()
								{
									parent.remove(message);
									parent.revalidate();
									parent.repaint();
								}
</source>
        <source file="installer/SwingInstall.java" startline="413" endline="418">
public void run()
								{
									parent.add(message,pos);
									parent.revalidate();
									parent.repaint();
								}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="installer/SwingInstall.java" startline="398" endline="403">
public void run()
								{
									parent.remove(message);
									parent.revalidate();
									parent.repaint();
								}
</source>
        <source file="org/gjt/sp/jedit/search/SearchDialog.java" startline="98" endline="107">
public void run() 
			{
				dialog.toFront();
				dialog.requestFocus();
					// Ensure that the dialog gets the focus. Just bringing
					// it to front just not necessarily give it the focus.
				dialog.find.requestFocus();
					// Given that the dialog has the focus, set the focus
					// to the 'find' field.
			}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="installer/SwingInstall.java" startline="398" endline="403">
public void run()
								{
									parent.remove(message);
									parent.revalidate();
									parent.repaint();
								}
</source>
        <source file="org/gjt/sp/jedit/browser/BrowserView.java" startline="327" endline="332">
public void propertiesChanged()
	{
		showIcons = jEdit.getBooleanProperty("vfs.browser.showIcons");
		table.propertiesChanged();
		splitPane.setBorder(null);
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/pluginmgr/PluginManager.java" startline="101" endline="106">
public static void showPluginManager(Frame parent)
	{
		if (instance == null)
			instance = new PluginManager(parent);
		instance.toFront();
	}
</source>
        <source file="org/gjt/sp/jedit/MiscUtilities.java" startline="203" endline="208">
public static String abbreviate(String path)
	{
		if (svc == null)
			svc = new VarCompressor();
		return svc.compress(path);
	}
</source>
    </clone>
    <clone nlines="10" distance="4">
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="128" endline="137">
public static void setWholeWord(boolean wholeWord)
	{
		if(wholeWord == SearchAndReplace.wholeWord)
			return;

		SearchAndReplace.wholeWord = wholeWord;
		matcher = null;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="77" endline="86">
public static void setSearchString(String search)
	{
		if(search.equals(SearchAndReplace.search))
			return;

		SearchAndReplace.search = search;
		matcher = null;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
    </clone>
    <clone nlines="10" distance="4">
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="145" endline="154">
public static void setIgnoreCase(boolean ignoreCase)
	{
		if(ignoreCase == SearchAndReplace.ignoreCase)
			return;

		SearchAndReplace.ignoreCase = ignoreCase;
		matcher = null;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="77" endline="86">
public static void setSearchString(String search)
	{
		if(search.equals(SearchAndReplace.search))
			return;

		SearchAndReplace.search = search;
		matcher = null;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="218" endline="226">
public static void setReverseSearch(boolean reverse)
	{
		if(reverse == SearchAndReplace.reverse)
			return;

		SearchAndReplace.reverse = reverse;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="128" endline="137">
public static void setWholeWord(boolean wholeWord)
	{
		if(wholeWord == SearchAndReplace.wholeWord)
			return;

		SearchAndReplace.wholeWord = wholeWord;
		matcher = null;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="218" endline="226">
public static void setReverseSearch(boolean reverse)
	{
		if(reverse == SearchAndReplace.reverse)
			return;

		SearchAndReplace.reverse = reverse;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="145" endline="154">
public static void setIgnoreCase(boolean ignoreCase)
	{
		if(ignoreCase == SearchAndReplace.ignoreCase)
			return;

		SearchAndReplace.ignoreCase = ignoreCase;
		matcher = null;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="245" endline="253">
public static void setBeanShellReplace(boolean beanshell)
	{
		if(beanshell == SearchAndReplace.beanshell)
			return;

		SearchAndReplace.beanshell = beanshell;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="128" endline="137">
public static void setWholeWord(boolean wholeWord)
	{
		if(wholeWord == SearchAndReplace.wholeWord)
			return;

		SearchAndReplace.wholeWord = wholeWord;
		matcher = null;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="245" endline="253">
public static void setBeanShellReplace(boolean beanshell)
	{
		if(beanshell == SearchAndReplace.beanshell)
			return;

		SearchAndReplace.beanshell = beanshell;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="145" endline="154">
public static void setIgnoreCase(boolean ignoreCase)
	{
		if(ignoreCase == SearchAndReplace.ignoreCase)
			return;

		SearchAndReplace.ignoreCase = ignoreCase;
		matcher = null;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="273" endline="281">
public static void setAutoWrapAround(boolean wrap)
	{
		if(wrap == SearchAndReplace.wrap)
			return;

		SearchAndReplace.wrap = wrap;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="128" endline="137">
public static void setWholeWord(boolean wholeWord)
	{
		if(wholeWord == SearchAndReplace.wholeWord)
			return;

		SearchAndReplace.wholeWord = wholeWord;
		matcher = null;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="273" endline="281">
public static void setAutoWrapAround(boolean wrap)
	{
		if(wrap == SearchAndReplace.wrap)
			return;

		SearchAndReplace.wrap = wrap;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="145" endline="154">
public static void setIgnoreCase(boolean ignoreCase)
	{
		if(ignoreCase == SearchAndReplace.ignoreCase)
			return;

		SearchAndReplace.ignoreCase = ignoreCase;
		matcher = null;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="218" endline="226">
public static void setReverseSearch(boolean reverse)
	{
		if(reverse == SearchAndReplace.reverse)
			return;

		SearchAndReplace.reverse = reverse;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="102" endline="110">
public static void setReplaceString(String replace)
	{
		if(replace.equals(SearchAndReplace.replace))
			return;

		SearchAndReplace.replace = replace;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="245" endline="253">
public static void setBeanShellReplace(boolean beanshell)
	{
		if(beanshell == SearchAndReplace.beanshell)
			return;

		SearchAndReplace.beanshell = beanshell;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="102" endline="110">
public static void setReplaceString(String replace)
	{
		if(replace.equals(SearchAndReplace.replace))
			return;

		SearchAndReplace.replace = replace;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="273" endline="281">
public static void setAutoWrapAround(boolean wrap)
	{
		if(wrap == SearchAndReplace.wrap)
			return;

		SearchAndReplace.wrap = wrap;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="102" endline="110">
public static void setReplaceString(String replace)
	{
		if(replace.equals(SearchAndReplace.replace))
			return;

		SearchAndReplace.replace = replace;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
    </clone>
    <clone nlines="11" distance="4">
        <source file="org/gjt/sp/jedit/buffer/UndoManager.java" startline="634" endline="644">
private void _add(Edit edit)
		{
			if(first == null)
				first = last = edit;
			else
			{
				edit.prev = last;
				last.next = edit;
				last = edit;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/jEdit.java" startline="4487" endline="4499">
private static void addViewToList(View view)
	{
		viewCount++;

		if(viewsFirst == null)
			viewsFirst = viewsLast = view;
		else
		{
			view.prev = viewsLast;
			viewsLast.next = view;
			viewsLast = view;
		}
	}
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/EditPane.java" startline="761" endline="767">
@Override
	public String toString()
	{
		return getClass().getName() + '['
			+ (view.getEditPane() == this
			? "active]" : "inactive]");
	}
</source>
        <source file="org/gjt/sp/jedit/View.java" startline="1209" endline="1216">
@Override
	public String toString()
	{
		return getClass().getName() + '['
			+ (jEdit.getActiveView() == this
			? "active" : "inactive")
			+ ']';
	}
</source>
    </clone>
    <clone nlines="12" distance="2">
        <source file="org/gjt/sp/jedit/gui/OptionsDialog.java" startline="584" endline="595">
@Override
		public Object getChild(Object parent, int index)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent).getMember(index);
			}
			else
			{
				return null;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/gui/OptionsDialog.java" startline="610" endline="622">
@Override
		public int getIndexOfChild(Object parent, Object child)
		{
			if (parent instanceof OptionGroup)
			{
				return ((OptionGroup)parent)
					.getMemberIndex(child);
			}
			else
			{
				return -1;
			}
		}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="529" endline="534">
@Override
	public OutputStream _createOutputStream(Object session, String path,
		Component comp) throws IOException
	{
		return new FileOutputStream(path);
	}
</source>
        <source file="org/gjt/sp/jedit/io/FileVFS.java" startline="200" endline="205">
@Override
	public String _canonPath(Object session, String path, Component comp)
		throws IOException
	{
		return MiscUtilities.canonPath(path);
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/EditPane.java" startline="645" endline="650">
@EBHandler
	public void handlePropertiesChanged(PropertiesChanged msg)
	{
		propertiesChanged();
		loadBufferSwitcher();
	}
</source>
        <source file="org/gjt/sp/jedit/search/SearchDialog.java" startline="246" endline="251">
@EBHandler
	public void handleSearchSettingsChanged(EBMessage msg)
	{
		if(!saving)
			load();
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/EditPane.java" startline="645" endline="650">
@EBHandler
	public void handlePropertiesChanged(PropertiesChanged msg)
	{
		propertiesChanged();
		loadBufferSwitcher();
	}
</source>
        <source file="org/gjt/sp/jedit/pluginmgr/PluginManagerProgress.java" startline="195" endline="200">
@Override
		public void windowClosing(WindowEvent evt)
		{
			thread.stop();
			dispose();
		}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/FilePropertiesDialog.java" startline="308" endline="313">
@Override
	public void cancel()
	{
		GUIUtilities.saveGeometry(this,"propdialog");
		setVisible(false);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/ErrorsWidgetFactory.java" startline="306" endline="311">
@Override
		public void dispose()
		{
			GUIUtilities.saveGeometry(this, "status.errorWidget");
			super.dispose();
		}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/help/HelpViewer.java" startline="426" endline="431">
@Override
	public void historyUpdated()
	{
		back.setEnabled(historyModel.hasPrevious());
		forward.setEnabled(historyModel.hasNext());
	}
</source>
        <source file="org/gjt/sp/jedit/options/GeneralOptionPane.java" startline="168" endline="173">
@Override
			public void actionPerformed(ActionEvent evt)
			{
				restoreCLI.setEnabled(restore.isSelected());
				restoreRemote.setEnabled(restore.isSelected());
			}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="121" endline="127">
@Test
	public void read_charArray_ShouldConvertEscapeSequence() throws IOException
	{
		int c = getReader("\\u21aF").read(bufferArray);
		assertThat(c, is(equalTo(1)));
		assertThat(bufferArray[0], is(equalTo('\u21aF')));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="129" endline="135">
@Test
	public void read_charArray_int_int_ShouldConvertEscapeSequence() throws IOException
	{
		int c = getReader("\\u21aF").read(bufferArray, 0, 1);
		assertThat(c, is(equalTo(1)));
		assertThat(bufferArray[0], is(equalTo('\u21aF')));
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="121" endline="127">
@Test
	public void read_charArray_ShouldConvertEscapeSequence() throws IOException
	{
		int c = getReader("\\u21aF").read(bufferArray);
		assertThat(c, is(equalTo(1)));
		assertThat(bufferArray[0], is(equalTo('\u21aF')));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="478" endline="484">
@Test
	public void read_charArray_int_int_ShouldCorrectlyHandleEOFAfterBackslash() throws IOException
	{
		int c = getReader("\\").read(bufferArray, 0, 1);
		assertThat(c, is(equalTo(1)));
		assertThat(bufferArray[0], is(equalTo('\\')));
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="470" endline="476">
@Test
	public void read_charArray_ShouldCorrectlyHandleEOFAfterBackslash() throws IOException
	{
		int c = getReader("\\").read(bufferArray);
		assertThat(c, is(equalTo(1)));
		assertThat(bufferArray[0], is(equalTo('\\')));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="129" endline="135">
@Test
	public void read_charArray_int_int_ShouldConvertEscapeSequence() throws IOException
	{
		int c = getReader("\\u21aF").read(bufferArray, 0, 1);
		assertThat(c, is(equalTo(1)));
		assertThat(bufferArray[0], is(equalTo('\u21aF')));
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="470" endline="476">
@Test
	public void read_charArray_ShouldCorrectlyHandleEOFAfterBackslash() throws IOException
	{
		int c = getReader("\\").read(bufferArray);
		assertThat(c, is(equalTo(1)));
		assertThat(bufferArray[0], is(equalTo('\\')));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="478" endline="484">
@Test
	public void read_charArray_int_int_ShouldCorrectlyHandleEOFAfterBackslash() throws IOException
	{
		int c = getReader("\\").read(bufferArray, 0, 1);
		assertThat(c, is(equalTo(1)));
		assertThat(bufferArray[0], is(equalTo('\\')));
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/gui/DockableWindowManagerImpl.java" startline="989" endline="995">
public String longTitle()
		{
			String title = jEdit.getProperty(factory.name + ".longtitle");
			if (title == null) return shortTitle();
			else return title;

		}
</source>
        <source file="org/gjt/sp/jedit/gui/DockableWindowManagerImpl.java" startline="1000" endline="1008">
public String shortTitle()
		{

			String title = jEdit.getProperty(factory.name + ".title");
			if(title == null)
				return "NO TITLE PROPERTY: " + factory.name;
			else
				return title;
		}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/browser/VFSDirectoryEntryTableModel.java" startline="173" endline="179">
public int getRowCount()
	{
		if(files == null)
			return 0;
		else
			return files.length;
	}
</source>
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="2385" endline="2390">
public boolean canUndo()
	{
		if (undoMgr == null)
			return false;
		return undoMgr.canUndo();
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/browser/VFSDirectoryEntryTableModel.java" startline="173" endline="179">
public int getRowCount()
	{
		if(files == null)
			return 0;
		else
			return files.length;
	}
</source>
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="2397" endline="2402">
public boolean canRedo()
	{
		if (undoMgr == null)
			return false;
		return undoMgr.canRedo();
	}
</source>
    </clone>
    <clone nlines="7" distance="3">
        <source file="org/gjt/sp/jedit/browser/VFSDirectoryEntryTableModel.java" startline="173" endline="179">
public int getRowCount()
	{
		if(files == null)
			return 0;
		else
			return files.length;
	}
</source>
        <source file="org/gjt/sp/jedit/gui/PanelWindowContainer.java" startline="322" endline="328">
public String getCurrent()
	{
		if(current == null)
			return null;
		else
			return current.factory.name;
	}
</source>
    </clone>
    <clone nlines="7" distance="3">
        <source file="org/gjt/sp/jedit/browser/VFSDirectoryEntryTableModel.java" startline="173" endline="179">
public int getRowCount()
	{
		if(files == null)
			return 0;
		else
			return files.length;
	}
</source>
        <source file="org/gjt/sp/jedit/View.java" startline="959" endline="965">
public Buffer getBuffer()
	{
		if(editPane == null)
			return null;
		else
			return editPane.getBuffer();
	}
</source>
    </clone>
    <clone nlines="7" distance="3">
        <source file="org/gjt/sp/jedit/browser/VFSDirectoryEntryTableModel.java" startline="173" endline="179">
public int getRowCount()
	{
		if(files == null)
			return 0;
		else
			return files.length;
	}
</source>
        <source file="org/gjt/sp/jedit/View.java" startline="1042" endline="1048">
public JEditTextArea getTextArea()
	{
		if(editPane == null)
			return null;
		else
			return editPane.getTextArea();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="2385" endline="2390">
public boolean canUndo()
	{
		if (undoMgr == null)
			return false;
		return undoMgr.canUndo();
	}
</source>
        <source file="org/gjt/sp/jedit/gui/PanelWindowContainer.java" startline="322" endline="328">
public String getCurrent()
	{
		if(current == null)
			return null;
		else
			return current.factory.name;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="2397" endline="2402">
public boolean canRedo()
	{
		if (undoMgr == null)
			return false;
		return undoMgr.canRedo();
	}
</source>
        <source file="org/gjt/sp/jedit/gui/PanelWindowContainer.java" startline="322" endline="328">
public String getCurrent()
	{
		if(current == null)
			return null;
		else
			return current.factory.name;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="2385" endline="2390">
public boolean canUndo()
	{
		if (undoMgr == null)
			return false;
		return undoMgr.canUndo();
	}
</source>
        <source file="org/gjt/sp/jedit/gui/ExtendedGridLayoutConstraints.java" startline="450" endline="457">
public int hashCode()
	{
		if (null == component)
		{
			return 0;
		}
		return component.hashCode();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="2397" endline="2402">
public boolean canRedo()
	{
		if (undoMgr == null)
			return false;
		return undoMgr.canRedo();
	}
</source>
        <source file="org/gjt/sp/jedit/gui/ExtendedGridLayoutConstraints.java" startline="450" endline="457">
public int hashCode()
	{
		if (null == component)
		{
			return 0;
		}
		return component.hashCode();
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="2385" endline="2390">
public boolean canUndo()
	{
		if (undoMgr == null)
			return false;
		return undoMgr.canUndo();
	}
</source>
        <source file="org/gjt/sp/jedit/View.java" startline="959" endline="965">
public Buffer getBuffer()
	{
		if(editPane == null)
			return null;
		else
			return editPane.getBuffer();
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="2385" endline="2390">
public boolean canUndo()
	{
		if (undoMgr == null)
			return false;
		return undoMgr.canUndo();
	}
</source>
        <source file="org/gjt/sp/jedit/View.java" startline="1042" endline="1048">
public JEditTextArea getTextArea()
	{
		if(editPane == null)
			return null;
		else
			return editPane.getTextArea();
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="2397" endline="2402">
public boolean canRedo()
	{
		if (undoMgr == null)
			return false;
		return undoMgr.canRedo();
	}
</source>
        <source file="org/gjt/sp/jedit/View.java" startline="959" endline="965">
public Buffer getBuffer()
	{
		if(editPane == null)
			return null;
		else
			return editPane.getBuffer();
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/buffer/JEditBuffer.java" startline="2397" endline="2402">
public boolean canRedo()
	{
		if (undoMgr == null)
			return false;
		return undoMgr.canRedo();
	}
</source>
        <source file="org/gjt/sp/jedit/View.java" startline="1042" endline="1048">
public JEditTextArea getTextArea()
	{
		if(editPane == null)
			return null;
		else
			return editPane.getTextArea();
	}
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/gui/PanelWindowContainer.java" startline="322" endline="328">
public String getCurrent()
	{
		if(current == null)
			return null;
		else
			return current.factory.name;
	}
</source>
        <source file="org/gjt/sp/jedit/View.java" startline="959" endline="965">
public Buffer getBuffer()
	{
		if(editPane == null)
			return null;
		else
			return editPane.getBuffer();
	}
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/gui/PanelWindowContainer.java" startline="322" endline="328">
public String getCurrent()
	{
		if(current == null)
			return null;
		else
			return current.factory.name;
	}
</source>
        <source file="org/gjt/sp/jedit/View.java" startline="1042" endline="1048">
public JEditTextArea getTextArea()
	{
		if(editPane == null)
			return null;
		else
			return editPane.getTextArea();
	}
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/gui/CompleteWord.java" startline="353" endline="359">
public boolean equals(Object obj)
		{
			if(obj instanceof Completion)
				return ((Completion)obj).text.equals(text);
			else
				return false;
		}
</source>
        <source file="org/gjt/sp/jedit/bsh/Primitive.java" startline="787" endline="793">
public boolean equals( Object obj ) 
	{
		if ( obj instanceof Primitive )
			return ((Primitive)obj).value.equals( this.value );
		else
			return false;
	}
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/help/HelpIndex.java" startline="383" endline="389">
public boolean equals(Object o)
		{
			if(o instanceof HelpFile)
				return ((HelpFile)o).file.equals(file);
			else
				return false;
		}
</source>
        <source file="org/gjt/sp/jedit/bsh/Primitive.java" startline="787" endline="793">
public boolean equals( Object obj ) 
	{
		if ( obj instanceof Primitive )
			return ((Primitive)obj).value.equals( this.value );
		else
			return false;
	}
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/options/ToolBarOptionPane.java" startline="260" endline="266">
public boolean equals(Object o)
		{
			if(o instanceof Button)
				return ((Button)o).actionName.equals(actionName);
			else
				return false;
		}
</source>
        <source file="org/gjt/sp/jedit/bsh/Primitive.java" startline="787" endline="793">
public boolean equals( Object obj ) 
	{
		if ( obj instanceof Primitive )
			return ((Primitive)obj).value.equals( this.value );
		else
			return false;
	}
</source>
    </clone>
    <clone nlines="11" distance="2">
        <source file="org/gjt/sp/jedit/io/FileRootsVFS.java" startline="162" endline="172">
public String getExtendedAttribute(String name)
		{
			if(name.equals(EA_TYPE))
				return super.getExtendedAttribute(name);
			else
			{
				// don't want it to show "0 bytes" for size,
				// etc.
				return null;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/io/FavoritesVFS.java" startline="247" endline="258">
@Override
		public String getExtendedAttribute(String name)
		{
			if(name.equals(EA_TYPE))
				return super.getExtendedAttribute(name);
			else
			{
				// don't want it to show "0 bytes" for size,
				// etc.
				return null;
			}
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/JEditActionSet.java" startline="342" endline="347">
public boolean contains(String action)
	{
		boolean retval = actions.containsKey(action);
		return retval;
//		return actions.containsKey(action);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/ErrorsWidgetFactory.java" startline="57" endline="62">
@Override
	public Widget getWidget(View view)
	{
		Widget errorWidget = new ErrorWidget(view);
		return errorWidget;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/JEditActionSet.java" startline="342" endline="347">
public boolean contains(String action)
	{
		boolean retval = actions.containsKey(action);
		return retval;
//		return actions.containsKey(action);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/MultiSelectWidgetFactory.java" startline="45" endline="50">
@Override
	public Widget getWidget(View view)
	{
		Widget multiSelect = new MultiSelectWidget(view);
		return multiSelect;
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/JEditActionSet.java" startline="342" endline="347">
public boolean contains(String action)
	{
		boolean retval = actions.containsKey(action);
		return retval;
//		return actions.containsKey(action);
	}
</source>
        <source file="org/jedit/keymap/KeymapImpl.java" startline="88" endline="93">
@Override
	public String getShortcut(String name)
	{
		String property = props.getProperty(name);
		return property;
	}
</source>
    </clone>
    <clone nlines="14" distance="1">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="6397" endline="6412">
public int nextOf(int offset)
		{
			int following = charBreaker.following(offset -
					index0Offset);
			if (following == BreakIterator.DONE)
			{
				// This means a end of line. Then it is
				// safe to assume 1 code unit is a character.
				// This may return an offset beyond the
				// length of buffer. But it is a callers
				// responsibility.
				return offset + 1;
			}
			return following + index0Offset;

		}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="6414" endline="6427">
public int previousOf(int offset)
		{
			int preceding = charBreaker.preceding(offset -
					index0Offset);
			if (preceding == BreakIterator.DONE)
			{
				// This means a start of line. Then it is
				// safe to assume 1 code unit is a character.
				// This may return -1. But it is a callers
				// responsibility.
				return offset - 1;
			}
			return preceding + index0Offset;
		}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/EditAbbrevDialog.java" startline="40" endline="45">
public EditAbbrevDialog(Frame frame, String abbrev, String expansion,
		Map abbrevs)
	{
		super(frame,jEdit.getProperty("edit-abbrev.title"),true);
		init(abbrev, expansion, abbrevs);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/GrabKeyDialog.java" startline="54" endline="60">
public GrabKeyDialog(Dialog parent, KeyBinding binding,
		List&lt;KeyBinding&gt; allBindings, Buffer debugBuffer)
	{
		super(parent,jEdit.getProperty("grab-key.title"),true);

		init(binding,allBindings,debugBuffer);
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/EditAbbrevDialog.java" startline="40" endline="45">
public EditAbbrevDialog(Frame frame, String abbrev, String expansion,
		Map abbrevs)
	{
		super(frame,jEdit.getProperty("edit-abbrev.title"),true);
		init(abbrev, expansion, abbrevs);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/GrabKeyDialog.java" startline="73" endline="79">
public GrabKeyDialog(Frame parent, KeyBinding binding,
		List&lt;KeyBinding&gt; allBindings, Buffer debugBuffer)
	{
		super(parent,jEdit.getProperty("grab-key.title"),true);

		init(binding,allBindings,debugBuffer);
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/EditAbbrevDialog.java" startline="48" endline="53">
public EditAbbrevDialog(Dialog dialog, String abbrev, String expansion,
		Map abbrevs)
	{
		super(dialog,jEdit.getProperty("edit-abbrev.title"),true);
		init(abbrev, expansion, abbrevs);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/GrabKeyDialog.java" startline="54" endline="60">
public GrabKeyDialog(Dialog parent, KeyBinding binding,
		List&lt;KeyBinding&gt; allBindings, Buffer debugBuffer)
	{
		super(parent,jEdit.getProperty("grab-key.title"),true);

		init(binding,allBindings,debugBuffer);
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/EditAbbrevDialog.java" startline="48" endline="53">
public EditAbbrevDialog(Dialog dialog, String abbrev, String expansion,
		Map abbrevs)
	{
		super(dialog,jEdit.getProperty("edit-abbrev.title"),true);
		init(abbrev, expansion, abbrevs);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/GrabKeyDialog.java" startline="73" endline="79">
public GrabKeyDialog(Frame parent, KeyBinding binding,
		List&lt;KeyBinding&gt; allBindings, Buffer debugBuffer)
	{
		super(parent,jEdit.getProperty("grab-key.title"),true);

		init(binding,allBindings,debugBuffer);
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/indent/CloseBracketIndentRule.java" startline="37" endline="42">
public CloseBracketIndentRule(char closeBracket, boolean aligned)
	{
		super(TextUtilities.getComplementaryBracket(closeBracket,null),
			closeBracket);
		this.aligned = aligned;
	}
</source>
        <source file="org/gjt/sp/jedit/indent/OpenBracketIndentRule.java" startline="36" endline="41">
public OpenBracketIndentRule(char openBracket, boolean aligned)
	{
		super(openBracket,
			TextUtilities.getComplementaryBracket(openBracket,null));
		this.aligned = aligned;
	}
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/gui/TaskMonitor.java" startline="65" endline="72">
public void tableChanged(TableModelEvent e)
			{
				if (e.getType() == TableModelEvent.INSERT ||
					e.getType() == TableModelEvent.DELETE)
				{
					updateTasksCount();
				}
			}
</source>
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="448" endline="456">
@EBHandler
	public void handleBufferUpdate(BufferUpdate bmsg)
	{
		if (bmsg.getWhat() == BufferUpdate.CREATED ||
			bmsg.getWhat() == BufferUpdate.CLOSED)
		{
			browserView.updateFileView();
		}
	}
</source>
    </clone>
    <clone nlines="10" distance="2">
        <source file="org/gjt/sp/jedit/gui/EnhancedButton.java" startline="93" endline="102">
public void mouseEntered(MouseEvent evt)
		{
			String msg = jEdit.getProperty(action + ".mouse-over");
			if(msg != null)
			{
				GUIUtilities.getView((Component)evt.getSource())
					.getStatus().setMessage(msg);
				msgSet = true;
			}
		}
</source>
        <source file="org/gjt/sp/jedit/menu/EnhancedCheckBoxMenuItem.java" startline="189" endline="199">
@Override
		public void mouseEntered(MouseEvent evt)
		{
			String msg = jEdit.getProperty(action + ".mouse-over");
			if(msg != null)
			{
				GUIUtilities.getView((Component)evt.getSource())
					.getStatus().setMessage(msg);
				msgSet = true;
			}
		}
</source>
    </clone>
    <clone nlines="17" distance="2">
        <source file="org/gjt/sp/jedit/gui/statusbar/OverwriteWidgetFactory.java" startline="86" endline="102">
public void update()
		{
			JEditTextArea textArea = view.getTextArea();
			if (textArea != null)
			{
				if (textArea.isOverwriteEnabled())
				{
					overwrite.setText("O");
					overwrite.setEnabled(true);
				}
				else
				{
					overwrite.setText("o");
					overwrite.setEnabled(false);
				}
			}
		}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/MultiSelectWidgetFactory.java" startline="81" endline="98">
@Override
		public void update()
		{
			JEditTextArea textArea = view.getTextArea();
			if (textArea != null)
			{
				if (textArea.isMultipleSelectionEnabled())
				{
					multiSelect.setText("M");
					multiSelect.setEnabled(true);
				}
				else
				{
					multiSelect.setText("m");
					multiSelect.setEnabled(false);
				}
			}
		}
</source>
    </clone>
    <clone nlines="17" distance="2">
        <source file="org/gjt/sp/jedit/gui/statusbar/RectSelectWidgetFactory.java" startline="82" endline="98">
public void update() 
	    {
		    JEditTextArea textArea = view.getTextArea();
		    if (textArea != null)
		    {
			    if (textArea.isRectangularSelectionEnabled())
			    {
				    rectSelect.setText("R");
				    rectSelect.setEnabled(true);
			    }
			    else
			    {
				    rectSelect.setText("r");
				    rectSelect.setEnabled(false);
			    }
		    }
	    }
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/MultiSelectWidgetFactory.java" startline="81" endline="98">
@Override
		public void update()
		{
			JEditTextArea textArea = view.getTextArea();
			if (textArea != null)
			{
				if (textArea.isMultipleSelectionEnabled())
				{
					multiSelect.setText("M");
					multiSelect.setEnabled(true);
				}
				else
				{
					multiSelect.setText("m");
					multiSelect.setEnabled(false);
				}
			}
		}
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/options/GutterOptionPane.java" startline="329" endline="335">
public static int getMinLineNumberDigits()
	{
		int n = jEdit.getIntegerProperty("view.gutter.minDigitCount", 2);
		if (n &lt; 0)
			n = 2;
		return n;
	}
</source>
        <source file="org/gjt/sp/jedit/options/GutterOptionPane.java" startline="353" endline="360">
public static int getSelectionAreaWidth()
	{
		int n = jEdit.getIntegerProperty("view.gutter.selectionAreaWidth",
			DEFAULT_SELECTION_GUTTER_WIDTH);
		if (n &lt; 0)
			n = DEFAULT_SELECTION_GUTTER_WIDTH;
		return n;
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="102" endline="110">
public static void setReplaceString(String replace)
	{
		if(replace.equals(SearchAndReplace.replace))
			return;

		SearchAndReplace.replace = replace;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
        <source file="org/gjt/sp/jedit/search/SearchAndReplace.java" startline="77" endline="86">
public static void setSearchString(String search)
	{
		if(search.equals(SearchAndReplace.search))
			return;

		SearchAndReplace.search = search;
		matcher = null;

		EditBus.send(new SearchSettingsChanged(null));
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/MiscUtilities.java" startline="859" endline="864">
public static void saveBackup(File file, int backups,
		 String backupPrefix, String backupSuffix,
		 String backupDirectory)
	{
		saveBackup(file,backups,backupPrefix,backupSuffix,backupDirectory,0);
	}
</source>
        <source file="org/gjt/sp/jedit/TextUtilities.java" startline="334" endline="339">
public static int findWordStart(String line, int pos, String noWordSep,
		boolean joinNonWordChars, boolean eatWhitespace)
	{
		return findWordStart(line, pos, noWordSep, joinNonWordChars,
			false, eatWhitespace);
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/MiscUtilities.java" startline="859" endline="864">
public static void saveBackup(File file, int backups,
		 String backupPrefix, String backupSuffix,
		 String backupDirectory)
	{
		saveBackup(file,backups,backupPrefix,backupSuffix,backupDirectory,0);
	}
</source>
        <source file="org/gjt/sp/jedit/TextUtilities.java" startline="551" endline="556">
public static int findWordEnd(String line, int pos, String noWordSep,
		boolean joinNonWordChars, boolean eatWhitespace)
	{
		return findWordEnd(line, pos, noWordSep, joinNonWordChars,
			false, eatWhitespace);
	}
</source>
    </clone>
    <clone nlines="34" distance="1">
        <source file="org/gjt/sp/jedit/TextUtilities.java" startline="972" endline="1005">
private static void formatParagraph(String text, int maxLineLength,
		int tabSize, StringBuilder buf)
	{
		// align everything to paragraph's leading indent
		int leadingWhitespaceCount = StandardUtilities.getLeadingWhiteSpace(text);
		String leadingWhitespace = text.substring(0,leadingWhitespaceCount);
		int leadingWhitespaceWidth = StandardUtilities.getLeadingWhiteSpaceWidth(text,tabSize);

		buf.append(leadingWhitespace);

		int lineLength = leadingWhitespaceWidth;
		StringTokenizer st = new StringTokenizer(text);
		while(st.hasMoreTokens())
		{
			String word = st.nextToken();
			if(lineLength == leadingWhitespaceWidth)
			{
				// do nothing
			}
			else if(lineLength + word.length() + 1 &gt; maxLineLength)
			{
				buf.append('\n');
				buf.append(leadingWhitespace);
				lineLength = leadingWhitespaceWidth;
			}
			else
			{
				buf.append(' ');
				lineLength++;
			}
			buf.append(word);
			lineLength += word.length();
		}
	}
</source>
        <source file="org/gjt/sp/jedit/TextUtilities.java" startline="1008" endline="1041">
public static void indexIgnoringWhitespace(String text, int maxLineLength,
		int tabSize, StringBuffer buf)
	{
		// align everything to paragraph's leading indent
		int leadingWhitespaceCount = StandardUtilities.getLeadingWhiteSpace(text);
		String leadingWhitespace = text.substring(0,leadingWhitespaceCount);
		int leadingWhitespaceWidth = StandardUtilities.getLeadingWhiteSpaceWidth(text,tabSize);

		buf.append(leadingWhitespace);

		int lineLength = leadingWhitespaceWidth;
		StringTokenizer st = new StringTokenizer(text);
		while(st.hasMoreTokens())
		{
			String word = st.nextToken();
			if(lineLength == leadingWhitespaceWidth)
			{
				// do nothing
			}
			else if(lineLength + word.length() + 1 &gt; maxLineLength)
			{
				buf.append('\n');
				buf.append(leadingWhitespace);
				lineLength = leadingWhitespaceWidth;
			}
			else
			{
				buf.append(' ');
				lineLength++;
			}
			buf.append(word);
			lineLength += word.length();
		}
	}
</source>
    </clone>
    <clone nlines="7" distance="3">
        <source file="org/gjt/sp/jedit/pluginmgr/PluginList.java" startline="504" endline="510">
Dependency(String what, String from, String to, String pluginName)
		{
			this.what = what;
			this.from = from;
			this.to = to;
			this.pluginName = pluginName;
		}
</source>
        <source file="org/gjt/sp/jedit/buffer/BufferSegment.java" startline="42" endline="51">
public BufferSegment(char[] data,
			      int offset,
			      int len,
			      BufferSegment next)
	{
		this.data = data;
		this.offset = offset;
		this.len = len;
		this.next = next;
	}
</source>
    </clone>
    <clone nlines="8" distance="3">
        <source file="org/gjt/sp/jedit/ServiceManager.java" startline="328" endline="335">
Descriptor(String clazz, String name, String code,
			PluginJAR plugin)
		{
			this.clazz  = clazz;
			this.name   = name;
			this.code   = code;
			this.plugin = plugin;
		}
</source>
        <source file="org/gjt/sp/jedit/buffer/BufferSegment.java" startline="42" endline="51">
public BufferSegment(char[] data,
			      int offset,
			      int len,
			      BufferSegment next)
	{
		this.data = data;
		this.offset = offset;
		this.len = len;
		this.next = next;
	}
</source>
    </clone>
    <clone nlines="7" distance="1">
        <source file="org/gjt/sp/jedit/pluginmgr/PluginList.java" startline="504" endline="510">
Dependency(String what, String from, String to, String pluginName)
		{
			this.what = what;
			this.from = from;
			this.to = to;
			this.pluginName = pluginName;
		}
</source>
        <source file="org/gjt/sp/jedit/gui/GrabKeyDialog.java" startline="324" endline="331">
public KeyBinding(String name, String label,
			String shortcut, boolean isPrefix)
		{
			this.name = name;
			this.label = label;
			this.shortcut = shortcut;
			this.isPrefix = isPrefix;
		}
</source>
    </clone>
    <clone nlines="7" distance="1">
        <source file="org/gjt/sp/jedit/pluginmgr/PluginList.java" startline="504" endline="510">
Dependency(String what, String from, String to, String pluginName)
		{
			this.what = what;
			this.from = from;
			this.to = to;
			this.pluginName = pluginName;
		}
</source>
        <source file="org/gjt/sp/jedit/syntax/Token.java" startline="148" endline="154">
public Token(byte id, int offset, int length, ParserRuleSet rules)
	{
		this.id = id;
		this.offset = offset;
		this.length = length;
		this.rules = rules;
	}
</source>
    </clone>
    <clone nlines="7" distance="1">
        <source file="org/gjt/sp/jedit/pluginmgr/PluginList.java" startline="504" endline="510">
Dependency(String what, String from, String to, String pluginName)
		{
			this.what = what;
			this.from = from;
			this.to = to;
			this.pluginName = pluginName;
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/Selection.java" startline="376" endline="382">
public Rect(int startLine, int start, int endLine, int end)
		{
			this.startLine = startLine;
			this.start = start;
			this.endLine = endLine;
			this.end = end;
		}
</source>
    </clone>
    <clone nlines="8" distance="1">
        <source file="org/gjt/sp/jedit/ServiceManager.java" startline="328" endline="335">
Descriptor(String clazz, String name, String code,
			PluginJAR plugin)
		{
			this.clazz  = clazz;
			this.name   = name;
			this.code   = code;
			this.plugin = plugin;
		}
</source>
        <source file="org/gjt/sp/jedit/gui/GrabKeyDialog.java" startline="324" endline="331">
public KeyBinding(String name, String label,
			String shortcut, boolean isPrefix)
		{
			this.name = name;
			this.label = label;
			this.shortcut = shortcut;
			this.isPrefix = isPrefix;
		}
</source>
    </clone>
    <clone nlines="7" distance="1">
        <source file="org/gjt/sp/jedit/ServiceManager.java" startline="328" endline="335">
Descriptor(String clazz, String name, String code,
			PluginJAR plugin)
		{
			this.clazz  = clazz;
			this.name   = name;
			this.code   = code;
			this.plugin = plugin;
		}
</source>
        <source file="org/gjt/sp/jedit/syntax/Token.java" startline="148" endline="154">
public Token(byte id, int offset, int length, ParserRuleSet rules)
	{
		this.id = id;
		this.offset = offset;
		this.length = length;
		this.rules = rules;
	}
</source>
    </clone>
    <clone nlines="7" distance="1">
        <source file="org/gjt/sp/jedit/ServiceManager.java" startline="328" endline="335">
Descriptor(String clazz, String name, String code,
			PluginJAR plugin)
		{
			this.clazz  = clazz;
			this.name   = name;
			this.code   = code;
			this.plugin = plugin;
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/Selection.java" startline="376" endline="382">
public Rect(int startLine, int start, int endLine, int end)
		{
			this.startLine = startLine;
			this.start = start;
			this.endLine = endLine;
			this.end = end;
		}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/bsh/Variable.java" startline="14" endline="19">
Variable( String name, Class type, LHS lhs ) 
	{
		this.name = name;
		this.lhs = lhs;
		this.type = type;
	}
</source>
        <source file="org/gjt/sp/jedit/syntax/KeywordMap.java" startline="236" endline="241">
Keyword(char[] keyword, byte id, Keyword next)
		{
			this.keyword = keyword;
			this.id = id;
			this.next = next;
		}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/buffer/UndoManager.java" startline="516" endline="521">
Replace(int offset, String strRemove, String strInsert)
		{
			this.offset = offset;
			this.strRemove = strRemove;
			this.strInsert = strInsert;
		}
</source>
        <source file="org/gjt/sp/jedit/syntax/KeywordMap.java" startline="236" endline="241">
Keyword(char[] keyword, byte id, Keyword next)
		{
			this.keyword = keyword;
			this.id = id;
			this.next = next;
		}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/EditBus.java" startline="308" endline="315">
EBMessageHandler(Object comp,
				 Method handler,
				 EBHandler source)
		{
			this.comp = comp;
			this.handler = handler;
			this.source = source;
		}
</source>
        <source file="org/gjt/sp/jedit/syntax/KeywordMap.java" startline="236" endline="241">
Keyword(char[] keyword, byte id, Keyword next)
		{
			this.keyword = keyword;
			this.id = id;
			this.next = next;
		}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/tray/JEditSwingTrayIcon.java" startline="174" endline="179">
MyActionListener(JMenuItem newViewItem, JMenuItem newPlainViewItem, JMenuItem exitItem)
		{
			this.newViewItem = newViewItem;
			this.newPlainViewItem = newPlainViewItem;
			this.exitItem = exitItem;
		}
</source>
        <source file="org/gjt/sp/jedit/syntax/KeywordMap.java" startline="236" endline="241">
Keyword(char[] keyword, byte id, Keyword next)
		{
			this.keyword = keyword;
			this.id = id;
			this.next = next;
		}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/help/HelpHistoryModel.java" startline="219" endline="224">
HistoryEntry(String url, String title, int scrollPosition)
		{
			this.url = url;
			this.title = title;
			this.scrollPosition = scrollPosition;
		}
</source>
        <source file="org/gjt/sp/jedit/syntax/KeywordMap.java" startline="236" endline="241">
Keyword(char[] keyword, byte id, Keyword next)
		{
			this.keyword = keyword;
			this.id = id;
			this.next = next;
		}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/jEdit.java" startline="4709" endline="4714">
DockingLayoutSetter(View view, ViewConfig config, int startupDoneIndex)
		{
			this.view = view;
			this.config = config;
			this.startupDoneIndex = startupDoneIndex;
		}
</source>
        <source file="org/gjt/sp/jedit/syntax/KeywordMap.java" startline="236" endline="241">
Keyword(char[] keyword, byte id, Keyword next)
		{
			this.keyword = keyword;
			this.id = id;
			this.next = next;
		}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/Marker.java" startline="73" endline="78">
Marker(Buffer buffer, char shortcut, int position)
	{
		this.buffer = buffer;
		this.shortcut = shortcut;
		this.pos = position;
	}
</source>
        <source file="org/gjt/sp/jedit/syntax/KeywordMap.java" startline="236" endline="241">
Keyword(char[] keyword, byte id, Keyword next)
		{
			this.keyword = keyword;
			this.id = id;
			this.next = next;
		}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/options/SyntaxHiliteOptionPane.java" startline="245" endline="250">
StyleChoice(String label, String property, SyntaxStyle style)
			{
				this.label = label;
				this.property = property;
				this.style = style;
			}
</source>
        <source file="org/gjt/sp/jedit/syntax/KeywordMap.java" startline="236" endline="241">
Keyword(char[] keyword, byte id, Keyword next)
		{
			this.keyword = keyword;
			this.id = id;
			this.next = next;
		}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/textarea/BufferHandler.java" startline="55" endline="62">
BufferHandler(DisplayManager displayManager,
		TextArea textArea,
		JEditBuffer buffer)
	{
		this.displayManager = displayManager;
		this.textArea = textArea;
		this.buffer = buffer;
	}
</source>
        <source file="org/gjt/sp/jedit/syntax/KeywordMap.java" startline="236" endline="241">
Keyword(char[] keyword, byte id, Keyword next)
		{
			this.keyword = keyword;
			this.id = id;
			this.next = next;
		}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="5788" endline="5793">
RectParams(int extraStartVirt, int extraEndVirt, int newCaret)
		{
			this.extraStartVirt = extraStartVirt;
			this.extraEndVirt = extraEndVirt;
			this.newCaret = newCaret;
		}
</source>
        <source file="org/gjt/sp/jedit/syntax/KeywordMap.java" startline="236" endline="241">
Keyword(char[] keyword, byte id, Keyword next)
		{
			this.keyword = keyword;
			this.id = id;
			this.next = next;
		}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/bsh/Variable.java" startline="14" endline="19">
Variable( String name, Class type, LHS lhs ) 
	{
		this.name = name;
		this.lhs = lhs;
		this.type = type;
	}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="231" endline="236">
protected VFS(String name, int caps, String[] extAttrs)
	{
		this.name = name;
		this.caps = caps;
		this.extAttrs = extAttrs;
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/buffer/UndoManager.java" startline="516" endline="521">
Replace(int offset, String strRemove, String strInsert)
		{
			this.offset = offset;
			this.strRemove = strRemove;
			this.strInsert = strInsert;
		}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="231" endline="236">
protected VFS(String name, int caps, String[] extAttrs)
	{
		this.name = name;
		this.caps = caps;
		this.extAttrs = extAttrs;
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/EditBus.java" startline="308" endline="315">
EBMessageHandler(Object comp,
				 Method handler,
				 EBHandler source)
		{
			this.comp = comp;
			this.handler = handler;
			this.source = source;
		}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="231" endline="236">
protected VFS(String name, int caps, String[] extAttrs)
	{
		this.name = name;
		this.caps = caps;
		this.extAttrs = extAttrs;
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/tray/JEditSwingTrayIcon.java" startline="174" endline="179">
MyActionListener(JMenuItem newViewItem, JMenuItem newPlainViewItem, JMenuItem exitItem)
		{
			this.newViewItem = newViewItem;
			this.newPlainViewItem = newPlainViewItem;
			this.exitItem = exitItem;
		}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="231" endline="236">
protected VFS(String name, int caps, String[] extAttrs)
	{
		this.name = name;
		this.caps = caps;
		this.extAttrs = extAttrs;
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/help/HelpHistoryModel.java" startline="219" endline="224">
HistoryEntry(String url, String title, int scrollPosition)
		{
			this.url = url;
			this.title = title;
			this.scrollPosition = scrollPosition;
		}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="231" endline="236">
protected VFS(String name, int caps, String[] extAttrs)
	{
		this.name = name;
		this.caps = caps;
		this.extAttrs = extAttrs;
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/jEdit.java" startline="4709" endline="4714">
DockingLayoutSetter(View view, ViewConfig config, int startupDoneIndex)
		{
			this.view = view;
			this.config = config;
			this.startupDoneIndex = startupDoneIndex;
		}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="231" endline="236">
protected VFS(String name, int caps, String[] extAttrs)
	{
		this.name = name;
		this.caps = caps;
		this.extAttrs = extAttrs;
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/Marker.java" startline="73" endline="78">
Marker(Buffer buffer, char shortcut, int position)
	{
		this.buffer = buffer;
		this.shortcut = shortcut;
		this.pos = position;
	}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="231" endline="236">
protected VFS(String name, int caps, String[] extAttrs)
	{
		this.name = name;
		this.caps = caps;
		this.extAttrs = extAttrs;
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/options/SyntaxHiliteOptionPane.java" startline="245" endline="250">
StyleChoice(String label, String property, SyntaxStyle style)
			{
				this.label = label;
				this.property = property;
				this.style = style;
			}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="231" endline="236">
protected VFS(String name, int caps, String[] extAttrs)
	{
		this.name = name;
		this.caps = caps;
		this.extAttrs = extAttrs;
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/textarea/BufferHandler.java" startline="55" endline="62">
BufferHandler(DisplayManager displayManager,
		TextArea textArea,
		JEditBuffer buffer)
	{
		this.displayManager = displayManager;
		this.textArea = textArea;
		this.buffer = buffer;
	}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="231" endline="236">
protected VFS(String name, int caps, String[] extAttrs)
	{
		this.name = name;
		this.caps = caps;
		this.extAttrs = extAttrs;
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="5788" endline="5793">
RectParams(int extraStartVirt, int extraEndVirt, int newCaret)
		{
			this.extraStartVirt = extraStartVirt;
			this.extraEndVirt = extraEndVirt;
			this.newCaret = newCaret;
		}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="231" endline="236">
protected VFS(String name, int caps, String[] extAttrs)
	{
		this.name = name;
		this.caps = caps;
		this.extAttrs = extAttrs;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Variable.java" startline="14" endline="19">
Variable( String name, Class type, LHS lhs ) 
	{
		this.name = name;
		this.lhs = lhs;
		this.type = type;
	}
</source>
        <source file="org/gjt/sp/jedit/io/LocalFileSaveTask.java" startline="41" endline="46">
public LocalFileSaveTask(File file, String body, String charset)
	{
		this.file = file;
		this.body = body;
		this.charset = charset;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Variable.java" startline="14" endline="19">
Variable( String name, Class type, LHS lhs ) 
	{
		this.name = name;
		this.lhs = lhs;
		this.type = type;
	}
</source>
        <source file="org/gjt/sp/jedit/search/DirectoryListSet.java" startline="41" endline="46">
public DirectoryListSet(String directory, String glob, boolean recurse)
	{
		this.directory = directory;
		this.glob = glob;
		this.recurse = recurse;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Variable.java" startline="14" endline="19">
Variable( String name, Class type, LHS lhs ) 
	{
		this.name = name;
		this.lhs = lhs;
		this.type = type;
	}
</source>
        <source file="org/gjt/sp/jedit/syntax/SyntaxStyle.java" startline="42" endline="47">
public SyntaxStyle(Color fgColor, Color bgColor, Font font)
	{
		this.fgColor = fgColor;
		this.bgColor = bgColor;
		this.font = font;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Variable.java" startline="14" endline="19">
Variable( String name, Class type, LHS lhs ) 
	{
		this.name = name;
		this.lhs = lhs;
		this.type = type;
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="121" endline="126">
public ColumnBlock(JEditBuffer buffer, int startLine, int endLine)
	{
		this.startLine = startLine;
		this.endLine = endLine;
		this.buffer = buffer;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Variable.java" startline="14" endline="19">
Variable( String name, Class type, LHS lhs ) 
	{
		this.name = name;
		this.lhs = lhs;
		this.type = type;
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlockLine.java" startline="31" endline="36">
public ColumnBlockLine(int line,int lineStartIndex,int lineEndIndex)
	{
		this.line = line;
		this.colEndIndex  = lineEndIndex;
		this.colStartIndex = lineStartIndex;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/bsh/Variable.java" startline="14" endline="19">
Variable( String name, Class type, LHS lhs ) 
	{
		this.name = name;
		this.lhs = lhs;
		this.type = type;
	}
</source>
        <source file="org/gjt/sp/util/SegmentCharSequence.java" startline="38" endline="43">
public SegmentCharSequence(Segment seg, int off, int len)
	{
		this.offset = off;
		this.length = len;
		this.seg = seg;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/buffer/UndoManager.java" startline="516" endline="521">
Replace(int offset, String strRemove, String strInsert)
		{
			this.offset = offset;
			this.strRemove = strRemove;
			this.strInsert = strInsert;
		}
</source>
        <source file="org/gjt/sp/jedit/io/LocalFileSaveTask.java" startline="41" endline="46">
public LocalFileSaveTask(File file, String body, String charset)
	{
		this.file = file;
		this.body = body;
		this.charset = charset;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/buffer/UndoManager.java" startline="516" endline="521">
Replace(int offset, String strRemove, String strInsert)
		{
			this.offset = offset;
			this.strRemove = strRemove;
			this.strInsert = strInsert;
		}
</source>
        <source file="org/gjt/sp/jedit/search/DirectoryListSet.java" startline="41" endline="46">
public DirectoryListSet(String directory, String glob, boolean recurse)
	{
		this.directory = directory;
		this.glob = glob;
		this.recurse = recurse;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/buffer/UndoManager.java" startline="516" endline="521">
Replace(int offset, String strRemove, String strInsert)
		{
			this.offset = offset;
			this.strRemove = strRemove;
			this.strInsert = strInsert;
		}
</source>
        <source file="org/gjt/sp/jedit/syntax/SyntaxStyle.java" startline="42" endline="47">
public SyntaxStyle(Color fgColor, Color bgColor, Font font)
	{
		this.fgColor = fgColor;
		this.bgColor = bgColor;
		this.font = font;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/buffer/UndoManager.java" startline="516" endline="521">
Replace(int offset, String strRemove, String strInsert)
		{
			this.offset = offset;
			this.strRemove = strRemove;
			this.strInsert = strInsert;
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="121" endline="126">
public ColumnBlock(JEditBuffer buffer, int startLine, int endLine)
	{
		this.startLine = startLine;
		this.endLine = endLine;
		this.buffer = buffer;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/buffer/UndoManager.java" startline="516" endline="521">
Replace(int offset, String strRemove, String strInsert)
		{
			this.offset = offset;
			this.strRemove = strRemove;
			this.strInsert = strInsert;
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlockLine.java" startline="31" endline="36">
public ColumnBlockLine(int line,int lineStartIndex,int lineEndIndex)
	{
		this.line = line;
		this.colEndIndex  = lineEndIndex;
		this.colStartIndex = lineStartIndex;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/buffer/UndoManager.java" startline="516" endline="521">
Replace(int offset, String strRemove, String strInsert)
		{
			this.offset = offset;
			this.strRemove = strRemove;
			this.strInsert = strInsert;
		}
</source>
        <source file="org/gjt/sp/util/SegmentCharSequence.java" startline="38" endline="43">
public SegmentCharSequence(Segment seg, int off, int len)
	{
		this.offset = off;
		this.length = len;
		this.seg = seg;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/EditBus.java" startline="308" endline="315">
EBMessageHandler(Object comp,
				 Method handler,
				 EBHandler source)
		{
			this.comp = comp;
			this.handler = handler;
			this.source = source;
		}
</source>
        <source file="org/gjt/sp/jedit/io/LocalFileSaveTask.java" startline="41" endline="46">
public LocalFileSaveTask(File file, String body, String charset)
	{
		this.file = file;
		this.body = body;
		this.charset = charset;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/EditBus.java" startline="308" endline="315">
EBMessageHandler(Object comp,
				 Method handler,
				 EBHandler source)
		{
			this.comp = comp;
			this.handler = handler;
			this.source = source;
		}
</source>
        <source file="org/gjt/sp/jedit/search/DirectoryListSet.java" startline="41" endline="46">
public DirectoryListSet(String directory, String glob, boolean recurse)
	{
		this.directory = directory;
		this.glob = glob;
		this.recurse = recurse;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/EditBus.java" startline="308" endline="315">
EBMessageHandler(Object comp,
				 Method handler,
				 EBHandler source)
		{
			this.comp = comp;
			this.handler = handler;
			this.source = source;
		}
</source>
        <source file="org/gjt/sp/jedit/syntax/SyntaxStyle.java" startline="42" endline="47">
public SyntaxStyle(Color fgColor, Color bgColor, Font font)
	{
		this.fgColor = fgColor;
		this.bgColor = bgColor;
		this.font = font;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/EditBus.java" startline="308" endline="315">
EBMessageHandler(Object comp,
				 Method handler,
				 EBHandler source)
		{
			this.comp = comp;
			this.handler = handler;
			this.source = source;
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="121" endline="126">
public ColumnBlock(JEditBuffer buffer, int startLine, int endLine)
	{
		this.startLine = startLine;
		this.endLine = endLine;
		this.buffer = buffer;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/EditBus.java" startline="308" endline="315">
EBMessageHandler(Object comp,
				 Method handler,
				 EBHandler source)
		{
			this.comp = comp;
			this.handler = handler;
			this.source = source;
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlockLine.java" startline="31" endline="36">
public ColumnBlockLine(int line,int lineStartIndex,int lineEndIndex)
	{
		this.line = line;
		this.colEndIndex  = lineEndIndex;
		this.colStartIndex = lineStartIndex;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/EditBus.java" startline="308" endline="315">
EBMessageHandler(Object comp,
				 Method handler,
				 EBHandler source)
		{
			this.comp = comp;
			this.handler = handler;
			this.source = source;
		}
</source>
        <source file="org/gjt/sp/util/SegmentCharSequence.java" startline="38" endline="43">
public SegmentCharSequence(Segment seg, int off, int len)
	{
		this.offset = off;
		this.length = len;
		this.seg = seg;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/gui/tray/JEditSwingTrayIcon.java" startline="174" endline="179">
MyActionListener(JMenuItem newViewItem, JMenuItem newPlainViewItem, JMenuItem exitItem)
		{
			this.newViewItem = newViewItem;
			this.newPlainViewItem = newPlainViewItem;
			this.exitItem = exitItem;
		}
</source>
        <source file="org/gjt/sp/jedit/io/LocalFileSaveTask.java" startline="41" endline="46">
public LocalFileSaveTask(File file, String body, String charset)
	{
		this.file = file;
		this.body = body;
		this.charset = charset;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/gui/tray/JEditSwingTrayIcon.java" startline="174" endline="179">
MyActionListener(JMenuItem newViewItem, JMenuItem newPlainViewItem, JMenuItem exitItem)
		{
			this.newViewItem = newViewItem;
			this.newPlainViewItem = newPlainViewItem;
			this.exitItem = exitItem;
		}
</source>
        <source file="org/gjt/sp/jedit/search/DirectoryListSet.java" startline="41" endline="46">
public DirectoryListSet(String directory, String glob, boolean recurse)
	{
		this.directory = directory;
		this.glob = glob;
		this.recurse = recurse;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/gui/tray/JEditSwingTrayIcon.java" startline="174" endline="179">
MyActionListener(JMenuItem newViewItem, JMenuItem newPlainViewItem, JMenuItem exitItem)
		{
			this.newViewItem = newViewItem;
			this.newPlainViewItem = newPlainViewItem;
			this.exitItem = exitItem;
		}
</source>
        <source file="org/gjt/sp/jedit/syntax/SyntaxStyle.java" startline="42" endline="47">
public SyntaxStyle(Color fgColor, Color bgColor, Font font)
	{
		this.fgColor = fgColor;
		this.bgColor = bgColor;
		this.font = font;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/gui/tray/JEditSwingTrayIcon.java" startline="174" endline="179">
MyActionListener(JMenuItem newViewItem, JMenuItem newPlainViewItem, JMenuItem exitItem)
		{
			this.newViewItem = newViewItem;
			this.newPlainViewItem = newPlainViewItem;
			this.exitItem = exitItem;
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="121" endline="126">
public ColumnBlock(JEditBuffer buffer, int startLine, int endLine)
	{
		this.startLine = startLine;
		this.endLine = endLine;
		this.buffer = buffer;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/gui/tray/JEditSwingTrayIcon.java" startline="174" endline="179">
MyActionListener(JMenuItem newViewItem, JMenuItem newPlainViewItem, JMenuItem exitItem)
		{
			this.newViewItem = newViewItem;
			this.newPlainViewItem = newPlainViewItem;
			this.exitItem = exitItem;
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlockLine.java" startline="31" endline="36">
public ColumnBlockLine(int line,int lineStartIndex,int lineEndIndex)
	{
		this.line = line;
		this.colEndIndex  = lineEndIndex;
		this.colStartIndex = lineStartIndex;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/gui/tray/JEditSwingTrayIcon.java" startline="174" endline="179">
MyActionListener(JMenuItem newViewItem, JMenuItem newPlainViewItem, JMenuItem exitItem)
		{
			this.newViewItem = newViewItem;
			this.newPlainViewItem = newPlainViewItem;
			this.exitItem = exitItem;
		}
</source>
        <source file="org/gjt/sp/util/SegmentCharSequence.java" startline="38" endline="43">
public SegmentCharSequence(Segment seg, int off, int len)
	{
		this.offset = off;
		this.length = len;
		this.seg = seg;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/help/HelpHistoryModel.java" startline="219" endline="224">
HistoryEntry(String url, String title, int scrollPosition)
		{
			this.url = url;
			this.title = title;
			this.scrollPosition = scrollPosition;
		}
</source>
        <source file="org/gjt/sp/jedit/io/LocalFileSaveTask.java" startline="41" endline="46">
public LocalFileSaveTask(File file, String body, String charset)
	{
		this.file = file;
		this.body = body;
		this.charset = charset;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/help/HelpHistoryModel.java" startline="219" endline="224">
HistoryEntry(String url, String title, int scrollPosition)
		{
			this.url = url;
			this.title = title;
			this.scrollPosition = scrollPosition;
		}
</source>
        <source file="org/gjt/sp/jedit/search/DirectoryListSet.java" startline="41" endline="46">
public DirectoryListSet(String directory, String glob, boolean recurse)
	{
		this.directory = directory;
		this.glob = glob;
		this.recurse = recurse;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/help/HelpHistoryModel.java" startline="219" endline="224">
HistoryEntry(String url, String title, int scrollPosition)
		{
			this.url = url;
			this.title = title;
			this.scrollPosition = scrollPosition;
		}
</source>
        <source file="org/gjt/sp/jedit/syntax/SyntaxStyle.java" startline="42" endline="47">
public SyntaxStyle(Color fgColor, Color bgColor, Font font)
	{
		this.fgColor = fgColor;
		this.bgColor = bgColor;
		this.font = font;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/help/HelpHistoryModel.java" startline="219" endline="224">
HistoryEntry(String url, String title, int scrollPosition)
		{
			this.url = url;
			this.title = title;
			this.scrollPosition = scrollPosition;
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="121" endline="126">
public ColumnBlock(JEditBuffer buffer, int startLine, int endLine)
	{
		this.startLine = startLine;
		this.endLine = endLine;
		this.buffer = buffer;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/help/HelpHistoryModel.java" startline="219" endline="224">
HistoryEntry(String url, String title, int scrollPosition)
		{
			this.url = url;
			this.title = title;
			this.scrollPosition = scrollPosition;
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlockLine.java" startline="31" endline="36">
public ColumnBlockLine(int line,int lineStartIndex,int lineEndIndex)
	{
		this.line = line;
		this.colEndIndex  = lineEndIndex;
		this.colStartIndex = lineStartIndex;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/help/HelpHistoryModel.java" startline="219" endline="224">
HistoryEntry(String url, String title, int scrollPosition)
		{
			this.url = url;
			this.title = title;
			this.scrollPosition = scrollPosition;
		}
</source>
        <source file="org/gjt/sp/util/SegmentCharSequence.java" startline="38" endline="43">
public SegmentCharSequence(Segment seg, int off, int len)
	{
		this.offset = off;
		this.length = len;
		this.seg = seg;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/jEdit.java" startline="4709" endline="4714">
DockingLayoutSetter(View view, ViewConfig config, int startupDoneIndex)
		{
			this.view = view;
			this.config = config;
			this.startupDoneIndex = startupDoneIndex;
		}
</source>
        <source file="org/gjt/sp/jedit/io/LocalFileSaveTask.java" startline="41" endline="46">
public LocalFileSaveTask(File file, String body, String charset)
	{
		this.file = file;
		this.body = body;
		this.charset = charset;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/jEdit.java" startline="4709" endline="4714">
DockingLayoutSetter(View view, ViewConfig config, int startupDoneIndex)
		{
			this.view = view;
			this.config = config;
			this.startupDoneIndex = startupDoneIndex;
		}
</source>
        <source file="org/gjt/sp/jedit/search/DirectoryListSet.java" startline="41" endline="46">
public DirectoryListSet(String directory, String glob, boolean recurse)
	{
		this.directory = directory;
		this.glob = glob;
		this.recurse = recurse;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/jEdit.java" startline="4709" endline="4714">
DockingLayoutSetter(View view, ViewConfig config, int startupDoneIndex)
		{
			this.view = view;
			this.config = config;
			this.startupDoneIndex = startupDoneIndex;
		}
</source>
        <source file="org/gjt/sp/jedit/syntax/SyntaxStyle.java" startline="42" endline="47">
public SyntaxStyle(Color fgColor, Color bgColor, Font font)
	{
		this.fgColor = fgColor;
		this.bgColor = bgColor;
		this.font = font;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/jEdit.java" startline="4709" endline="4714">
DockingLayoutSetter(View view, ViewConfig config, int startupDoneIndex)
		{
			this.view = view;
			this.config = config;
			this.startupDoneIndex = startupDoneIndex;
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="121" endline="126">
public ColumnBlock(JEditBuffer buffer, int startLine, int endLine)
	{
		this.startLine = startLine;
		this.endLine = endLine;
		this.buffer = buffer;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/jEdit.java" startline="4709" endline="4714">
DockingLayoutSetter(View view, ViewConfig config, int startupDoneIndex)
		{
			this.view = view;
			this.config = config;
			this.startupDoneIndex = startupDoneIndex;
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlockLine.java" startline="31" endline="36">
public ColumnBlockLine(int line,int lineStartIndex,int lineEndIndex)
	{
		this.line = line;
		this.colEndIndex  = lineEndIndex;
		this.colStartIndex = lineStartIndex;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/jEdit.java" startline="4709" endline="4714">
DockingLayoutSetter(View view, ViewConfig config, int startupDoneIndex)
		{
			this.view = view;
			this.config = config;
			this.startupDoneIndex = startupDoneIndex;
		}
</source>
        <source file="org/gjt/sp/util/SegmentCharSequence.java" startline="38" endline="43">
public SegmentCharSequence(Segment seg, int off, int len)
	{
		this.offset = off;
		this.length = len;
		this.seg = seg;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/Marker.java" startline="73" endline="78">
Marker(Buffer buffer, char shortcut, int position)
	{
		this.buffer = buffer;
		this.shortcut = shortcut;
		this.pos = position;
	}
</source>
        <source file="org/gjt/sp/jedit/io/LocalFileSaveTask.java" startline="41" endline="46">
public LocalFileSaveTask(File file, String body, String charset)
	{
		this.file = file;
		this.body = body;
		this.charset = charset;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/Marker.java" startline="73" endline="78">
Marker(Buffer buffer, char shortcut, int position)
	{
		this.buffer = buffer;
		this.shortcut = shortcut;
		this.pos = position;
	}
</source>
        <source file="org/gjt/sp/jedit/search/DirectoryListSet.java" startline="41" endline="46">
public DirectoryListSet(String directory, String glob, boolean recurse)
	{
		this.directory = directory;
		this.glob = glob;
		this.recurse = recurse;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/Marker.java" startline="73" endline="78">
Marker(Buffer buffer, char shortcut, int position)
	{
		this.buffer = buffer;
		this.shortcut = shortcut;
		this.pos = position;
	}
</source>
        <source file="org/gjt/sp/jedit/syntax/SyntaxStyle.java" startline="42" endline="47">
public SyntaxStyle(Color fgColor, Color bgColor, Font font)
	{
		this.fgColor = fgColor;
		this.bgColor = bgColor;
		this.font = font;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/Marker.java" startline="73" endline="78">
Marker(Buffer buffer, char shortcut, int position)
	{
		this.buffer = buffer;
		this.shortcut = shortcut;
		this.pos = position;
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="121" endline="126">
public ColumnBlock(JEditBuffer buffer, int startLine, int endLine)
	{
		this.startLine = startLine;
		this.endLine = endLine;
		this.buffer = buffer;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/Marker.java" startline="73" endline="78">
Marker(Buffer buffer, char shortcut, int position)
	{
		this.buffer = buffer;
		this.shortcut = shortcut;
		this.pos = position;
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlockLine.java" startline="31" endline="36">
public ColumnBlockLine(int line,int lineStartIndex,int lineEndIndex)
	{
		this.line = line;
		this.colEndIndex  = lineEndIndex;
		this.colStartIndex = lineStartIndex;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/Marker.java" startline="73" endline="78">
Marker(Buffer buffer, char shortcut, int position)
	{
		this.buffer = buffer;
		this.shortcut = shortcut;
		this.pos = position;
	}
</source>
        <source file="org/gjt/sp/util/SegmentCharSequence.java" startline="38" endline="43">
public SegmentCharSequence(Segment seg, int off, int len)
	{
		this.offset = off;
		this.length = len;
		this.seg = seg;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/options/SyntaxHiliteOptionPane.java" startline="245" endline="250">
StyleChoice(String label, String property, SyntaxStyle style)
			{
				this.label = label;
				this.property = property;
				this.style = style;
			}
</source>
        <source file="org/gjt/sp/jedit/io/LocalFileSaveTask.java" startline="41" endline="46">
public LocalFileSaveTask(File file, String body, String charset)
	{
		this.file = file;
		this.body = body;
		this.charset = charset;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/options/SyntaxHiliteOptionPane.java" startline="245" endline="250">
StyleChoice(String label, String property, SyntaxStyle style)
			{
				this.label = label;
				this.property = property;
				this.style = style;
			}
</source>
        <source file="org/gjt/sp/jedit/search/DirectoryListSet.java" startline="41" endline="46">
public DirectoryListSet(String directory, String glob, boolean recurse)
	{
		this.directory = directory;
		this.glob = glob;
		this.recurse = recurse;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/options/SyntaxHiliteOptionPane.java" startline="245" endline="250">
StyleChoice(String label, String property, SyntaxStyle style)
			{
				this.label = label;
				this.property = property;
				this.style = style;
			}
</source>
        <source file="org/gjt/sp/jedit/syntax/SyntaxStyle.java" startline="42" endline="47">
public SyntaxStyle(Color fgColor, Color bgColor, Font font)
	{
		this.fgColor = fgColor;
		this.bgColor = bgColor;
		this.font = font;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/options/SyntaxHiliteOptionPane.java" startline="245" endline="250">
StyleChoice(String label, String property, SyntaxStyle style)
			{
				this.label = label;
				this.property = property;
				this.style = style;
			}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="121" endline="126">
public ColumnBlock(JEditBuffer buffer, int startLine, int endLine)
	{
		this.startLine = startLine;
		this.endLine = endLine;
		this.buffer = buffer;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/options/SyntaxHiliteOptionPane.java" startline="245" endline="250">
StyleChoice(String label, String property, SyntaxStyle style)
			{
				this.label = label;
				this.property = property;
				this.style = style;
			}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlockLine.java" startline="31" endline="36">
public ColumnBlockLine(int line,int lineStartIndex,int lineEndIndex)
	{
		this.line = line;
		this.colEndIndex  = lineEndIndex;
		this.colStartIndex = lineStartIndex;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/options/SyntaxHiliteOptionPane.java" startline="245" endline="250">
StyleChoice(String label, String property, SyntaxStyle style)
			{
				this.label = label;
				this.property = property;
				this.style = style;
			}
</source>
        <source file="org/gjt/sp/util/SegmentCharSequence.java" startline="38" endline="43">
public SegmentCharSequence(Segment seg, int off, int len)
	{
		this.offset = off;
		this.length = len;
		this.seg = seg;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/textarea/BufferHandler.java" startline="55" endline="62">
BufferHandler(DisplayManager displayManager,
		TextArea textArea,
		JEditBuffer buffer)
	{
		this.displayManager = displayManager;
		this.textArea = textArea;
		this.buffer = buffer;
	}
</source>
        <source file="org/gjt/sp/jedit/io/LocalFileSaveTask.java" startline="41" endline="46">
public LocalFileSaveTask(File file, String body, String charset)
	{
		this.file = file;
		this.body = body;
		this.charset = charset;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/textarea/BufferHandler.java" startline="55" endline="62">
BufferHandler(DisplayManager displayManager,
		TextArea textArea,
		JEditBuffer buffer)
	{
		this.displayManager = displayManager;
		this.textArea = textArea;
		this.buffer = buffer;
	}
</source>
        <source file="org/gjt/sp/jedit/search/DirectoryListSet.java" startline="41" endline="46">
public DirectoryListSet(String directory, String glob, boolean recurse)
	{
		this.directory = directory;
		this.glob = glob;
		this.recurse = recurse;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/textarea/BufferHandler.java" startline="55" endline="62">
BufferHandler(DisplayManager displayManager,
		TextArea textArea,
		JEditBuffer buffer)
	{
		this.displayManager = displayManager;
		this.textArea = textArea;
		this.buffer = buffer;
	}
</source>
        <source file="org/gjt/sp/jedit/syntax/SyntaxStyle.java" startline="42" endline="47">
public SyntaxStyle(Color fgColor, Color bgColor, Font font)
	{
		this.fgColor = fgColor;
		this.bgColor = bgColor;
		this.font = font;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/textarea/BufferHandler.java" startline="55" endline="62">
BufferHandler(DisplayManager displayManager,
		TextArea textArea,
		JEditBuffer buffer)
	{
		this.displayManager = displayManager;
		this.textArea = textArea;
		this.buffer = buffer;
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="121" endline="126">
public ColumnBlock(JEditBuffer buffer, int startLine, int endLine)
	{
		this.startLine = startLine;
		this.endLine = endLine;
		this.buffer = buffer;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/textarea/BufferHandler.java" startline="55" endline="62">
BufferHandler(DisplayManager displayManager,
		TextArea textArea,
		JEditBuffer buffer)
	{
		this.displayManager = displayManager;
		this.textArea = textArea;
		this.buffer = buffer;
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlockLine.java" startline="31" endline="36">
public ColumnBlockLine(int line,int lineStartIndex,int lineEndIndex)
	{
		this.line = line;
		this.colEndIndex  = lineEndIndex;
		this.colStartIndex = lineStartIndex;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/textarea/BufferHandler.java" startline="55" endline="62">
BufferHandler(DisplayManager displayManager,
		TextArea textArea,
		JEditBuffer buffer)
	{
		this.displayManager = displayManager;
		this.textArea = textArea;
		this.buffer = buffer;
	}
</source>
        <source file="org/gjt/sp/util/SegmentCharSequence.java" startline="38" endline="43">
public SegmentCharSequence(Segment seg, int off, int len)
	{
		this.offset = off;
		this.length = len;
		this.seg = seg;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="5788" endline="5793">
RectParams(int extraStartVirt, int extraEndVirt, int newCaret)
		{
			this.extraStartVirt = extraStartVirt;
			this.extraEndVirt = extraEndVirt;
			this.newCaret = newCaret;
		}
</source>
        <source file="org/gjt/sp/jedit/io/LocalFileSaveTask.java" startline="41" endline="46">
public LocalFileSaveTask(File file, String body, String charset)
	{
		this.file = file;
		this.body = body;
		this.charset = charset;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="5788" endline="5793">
RectParams(int extraStartVirt, int extraEndVirt, int newCaret)
		{
			this.extraStartVirt = extraStartVirt;
			this.extraEndVirt = extraEndVirt;
			this.newCaret = newCaret;
		}
</source>
        <source file="org/gjt/sp/jedit/search/DirectoryListSet.java" startline="41" endline="46">
public DirectoryListSet(String directory, String glob, boolean recurse)
	{
		this.directory = directory;
		this.glob = glob;
		this.recurse = recurse;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="5788" endline="5793">
RectParams(int extraStartVirt, int extraEndVirt, int newCaret)
		{
			this.extraStartVirt = extraStartVirt;
			this.extraEndVirt = extraEndVirt;
			this.newCaret = newCaret;
		}
</source>
        <source file="org/gjt/sp/jedit/syntax/SyntaxStyle.java" startline="42" endline="47">
public SyntaxStyle(Color fgColor, Color bgColor, Font font)
	{
		this.fgColor = fgColor;
		this.bgColor = bgColor;
		this.font = font;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="5788" endline="5793">
RectParams(int extraStartVirt, int extraEndVirt, int newCaret)
		{
			this.extraStartVirt = extraStartVirt;
			this.extraEndVirt = extraEndVirt;
			this.newCaret = newCaret;
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="121" endline="126">
public ColumnBlock(JEditBuffer buffer, int startLine, int endLine)
	{
		this.startLine = startLine;
		this.endLine = endLine;
		this.buffer = buffer;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="5788" endline="5793">
RectParams(int extraStartVirt, int extraEndVirt, int newCaret)
		{
			this.extraStartVirt = extraStartVirt;
			this.extraEndVirt = extraEndVirt;
			this.newCaret = newCaret;
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlockLine.java" startline="31" endline="36">
public ColumnBlockLine(int line,int lineStartIndex,int lineEndIndex)
	{
		this.line = line;
		this.colEndIndex  = lineEndIndex;
		this.colStartIndex = lineStartIndex;
	}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="5788" endline="5793">
RectParams(int extraStartVirt, int extraEndVirt, int newCaret)
		{
			this.extraStartVirt = extraStartVirt;
			this.extraEndVirt = extraEndVirt;
			this.newCaret = newCaret;
		}
</source>
        <source file="org/gjt/sp/util/SegmentCharSequence.java" startline="38" endline="43">
public SegmentCharSequence(Segment seg, int off, int len)
	{
		this.offset = off;
		this.length = len;
		this.seg = seg;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/bsh/Variable.java" startline="14" endline="19">
Variable( String name, Class type, LHS lhs ) 
	{
		this.name = name;
		this.lhs = lhs;
		this.type = type;
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/LHS.java" startline="95" endline="101">
LHS( NameSpace nameSpace, String varName, boolean localVar )
	{
		type = VARIABLE;
		this.localVar = localVar;
		this.varName = varName;
		this.nameSpace = nameSpace;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/buffer/UndoManager.java" startline="516" endline="521">
Replace(int offset, String strRemove, String strInsert)
		{
			this.offset = offset;
			this.strRemove = strRemove;
			this.strInsert = strInsert;
		}
</source>
        <source file="org/gjt/sp/jedit/bsh/LHS.java" startline="95" endline="101">
LHS( NameSpace nameSpace, String varName, boolean localVar )
	{
		type = VARIABLE;
		this.localVar = localVar;
		this.varName = varName;
		this.nameSpace = nameSpace;
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/EditBus.java" startline="308" endline="315">
EBMessageHandler(Object comp,
				 Method handler,
				 EBHandler source)
		{
			this.comp = comp;
			this.handler = handler;
			this.source = source;
		}
</source>
        <source file="org/gjt/sp/jedit/bsh/LHS.java" startline="95" endline="101">
LHS( NameSpace nameSpace, String varName, boolean localVar )
	{
		type = VARIABLE;
		this.localVar = localVar;
		this.varName = varName;
		this.nameSpace = nameSpace;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/tray/JEditSwingTrayIcon.java" startline="174" endline="179">
MyActionListener(JMenuItem newViewItem, JMenuItem newPlainViewItem, JMenuItem exitItem)
		{
			this.newViewItem = newViewItem;
			this.newPlainViewItem = newPlainViewItem;
			this.exitItem = exitItem;
		}
</source>
        <source file="org/gjt/sp/jedit/bsh/LHS.java" startline="95" endline="101">
LHS( NameSpace nameSpace, String varName, boolean localVar )
	{
		type = VARIABLE;
		this.localVar = localVar;
		this.varName = varName;
		this.nameSpace = nameSpace;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/help/HelpHistoryModel.java" startline="219" endline="224">
HistoryEntry(String url, String title, int scrollPosition)
		{
			this.url = url;
			this.title = title;
			this.scrollPosition = scrollPosition;
		}
</source>
        <source file="org/gjt/sp/jedit/bsh/LHS.java" startline="95" endline="101">
LHS( NameSpace nameSpace, String varName, boolean localVar )
	{
		type = VARIABLE;
		this.localVar = localVar;
		this.varName = varName;
		this.nameSpace = nameSpace;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/jEdit.java" startline="4709" endline="4714">
DockingLayoutSetter(View view, ViewConfig config, int startupDoneIndex)
		{
			this.view = view;
			this.config = config;
			this.startupDoneIndex = startupDoneIndex;
		}
</source>
        <source file="org/gjt/sp/jedit/bsh/LHS.java" startline="95" endline="101">
LHS( NameSpace nameSpace, String varName, boolean localVar )
	{
		type = VARIABLE;
		this.localVar = localVar;
		this.varName = varName;
		this.nameSpace = nameSpace;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/Marker.java" startline="73" endline="78">
Marker(Buffer buffer, char shortcut, int position)
	{
		this.buffer = buffer;
		this.shortcut = shortcut;
		this.pos = position;
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/LHS.java" startline="95" endline="101">
LHS( NameSpace nameSpace, String varName, boolean localVar )
	{
		type = VARIABLE;
		this.localVar = localVar;
		this.varName = varName;
		this.nameSpace = nameSpace;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/options/SyntaxHiliteOptionPane.java" startline="245" endline="250">
StyleChoice(String label, String property, SyntaxStyle style)
			{
				this.label = label;
				this.property = property;
				this.style = style;
			}
</source>
        <source file="org/gjt/sp/jedit/bsh/LHS.java" startline="95" endline="101">
LHS( NameSpace nameSpace, String varName, boolean localVar )
	{
		type = VARIABLE;
		this.localVar = localVar;
		this.varName = varName;
		this.nameSpace = nameSpace;
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/textarea/BufferHandler.java" startline="55" endline="62">
BufferHandler(DisplayManager displayManager,
		TextArea textArea,
		JEditBuffer buffer)
	{
		this.displayManager = displayManager;
		this.textArea = textArea;
		this.buffer = buffer;
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/LHS.java" startline="95" endline="101">
LHS( NameSpace nameSpace, String varName, boolean localVar )
	{
		type = VARIABLE;
		this.localVar = localVar;
		this.varName = varName;
		this.nameSpace = nameSpace;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="5788" endline="5793">
RectParams(int extraStartVirt, int extraEndVirt, int newCaret)
		{
			this.extraStartVirt = extraStartVirt;
			this.extraEndVirt = extraEndVirt;
			this.newCaret = newCaret;
		}
</source>
        <source file="org/gjt/sp/jedit/bsh/LHS.java" startline="95" endline="101">
LHS( NameSpace nameSpace, String varName, boolean localVar )
	{
		type = VARIABLE;
		this.localVar = localVar;
		this.varName = varName;
		this.nameSpace = nameSpace;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/jedit/keymap/KeymapImpl.java" startline="88" endline="93">
@Override
	public String getShortcut(String name)
	{
		String property = props.getProperty(name);
		return property;
	}
</source>
        <source file="org/gjt/sp/jedit/ServiceManager.java" startline="398" endline="403">
@Override
		public FoldHandler getFoldHandler(String name)
		{
			FoldHandler handler = (FoldHandler) getService(SERVICE,name);
			return handler;
		}
</source>
    </clone>
    <clone nlines="8" distance="2">
        <source file="org/gjt/sp/jedit/textarea/Selection.java" startline="234" endline="241">
@Override
		public int getStart(JEditBuffer buffer, int line)
		{
			if(line == startLine)
				return start;
			else
				return buffer.getLineStartOffset(line);
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/Selection.java" startline="244" endline="251">
@Override
		public int getEnd(JEditBuffer buffer, int line)
		{
			if(line == endLine)
				return end;
			else
				return buffer.getLineEndOffset(line) - 1;
		}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="119" endline="124">
@EBHandler
	public void handleRegisterChanged(RegisterChanged msg)
	{
		if (msg.getRegisterName() != '%')
			refreshList();
	}
</source>
        <source file="org/gjt/sp/jedit/options/AbbrevsOptionPane.java" startline="251" endline="256">
@Override
		public void mouseClicked(MouseEvent evt)
		{
			if(evt.getClickCount() == 2)
				edit();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="119" endline="124">
@EBHandler
	public void handleRegisterChanged(RegisterChanged msg)
	{
		if (msg.getRegisterName() != '%')
			refreshList();
	}
</source>
        <source file="org/gjt/sp/jedit/gui/DockableWindowManager.java" startline="448" endline="453">
@EBHandler
	public void handleDockableWindowUpdate(DockableWindowUpdate msg)
	{
		if(msg.getWhat() == DockableWindowUpdate.PROPERTIES_CHANGED)
			propertiesChanged();
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/RegisterViewer.java" startline="119" endline="124">
@EBHandler
	public void handleRegisterChanged(RegisterChanged msg)
	{
		if (msg.getRegisterName() != '%')
			refreshList();
	}
</source>
        <source file="org/gjt/sp/jedit/gui/DockableWindowManagerImpl.java" startline="678" endline="683">
@EBHandler
	public void handleDockableWindowUpdate(DockableWindowUpdate msg)
	{
		if (msg.getWhat() == DockableWindowUpdate.PROPERTIES_CHANGED)
			propertiesChanged();
	}
</source>
    </clone>
    <clone nlines="7" distance="3">
        <source file="org/gjt/sp/jedit/View.java" startline="611" endline="617">
@Override
	public void processKeyEvent(KeyEvent evt)
	{
		inputHandler.processKeyEvent(evt,VIEW, false);
		if(!evt.isConsumed())
			super.processKeyEvent(evt);
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="4736" endline="4743">
@Override
	public void processKeyEvent(KeyEvent evt)
	{
		getInputHandler().processKeyEvent(evt, 1 /* source=TEXTAREA (1) */, false);
		if(!evt.isConsumed())
			super.processKeyEvent(evt);

	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/options/ShortcutsOptionPane.java" startline="141" endline="146">
@Override
			public void actionPerformed(ActionEvent arg0)
			{
				filterTF.setText("");
				filterTF.requestFocus();
			}
</source>
        <source file="org/gjt/sp/jedit/gui/LogViewer.java" startline="537" endline="542">
@Override
						public void actionPerformed(ActionEvent ae)
						{
							LogSettings.this.setVisible(false);
							LogSettings.this.dispose();
						}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/options/ShortcutsOptionPane.java" startline="141" endline="146">
@Override
			public void actionPerformed(ActionEvent arg0)
			{
				filterTF.setText("");
				filterTF.requestFocus();
			}
</source>
        <source file="org/gjt/sp/jedit/syntax/DisplayTokenHandler.java" startline="545" endline="550">
@Override
		public void setText(CharacterIterator newText)
		{
			base.setText(newText);
			baseOrNext(base.first());
		}
</source>
    </clone>
    <clone nlines="10" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="885" endline="894">
@Test
	public void read_charArray_ShouldConvertEscapeSequenceThatFollowsTwoBackslashes() throws IOException
	{
		int c = getReader("\\\\\\u21aF").read(bufferArray);
		assertThat(c, is(equalTo(3)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('\u21aF')));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="896" endline="905">
@Test
	public void read_charArray_int_int_ShouldConvertEscapeSequenceThatFollowsTwoBackslashes() throws IOException
	{
		int c = getReader("\\\\\\u21aF").read(bufferArray, 0, 3);
		assertThat(c, is(equalTo(3)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('\u21af')));
	}
</source>
    </clone>
    <clone nlines="8" distance="2">
        <source file="org/gjt/sp/jedit/gui/GrabKeyDialog.java" startline="324" endline="331">
public KeyBinding(String name, String label,
			String shortcut, boolean isPrefix)
		{
			this.name = name;
			this.label = label;
			this.shortcut = shortcut;
			this.isPrefix = isPrefix;
		}
</source>
        <source file="org/gjt/sp/jedit/buffer/BufferSegment.java" startline="42" endline="51">
public BufferSegment(char[] data,
			      int offset,
			      int len,
			      BufferSegment next)
	{
		this.data = data;
		this.offset = offset;
		this.len = len;
		this.next = next;
	}
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/syntax/Token.java" startline="148" endline="154">
public Token(byte id, int offset, int length, ParserRuleSet rules)
	{
		this.id = id;
		this.offset = offset;
		this.length = length;
		this.rules = rules;
	}
</source>
        <source file="org/gjt/sp/jedit/buffer/BufferSegment.java" startline="42" endline="51">
public BufferSegment(char[] data,
			      int offset,
			      int len,
			      BufferSegment next)
	{
		this.data = data;
		this.offset = offset;
		this.len = len;
		this.next = next;
	}
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/textarea/Selection.java" startline="376" endline="382">
public Rect(int startLine, int start, int endLine, int end)
		{
			this.startLine = startLine;
			this.start = start;
			this.endLine = endLine;
			this.end = end;
		}
</source>
        <source file="org/gjt/sp/jedit/buffer/BufferSegment.java" startline="42" endline="51">
public BufferSegment(char[] data,
			      int offset,
			      int len,
			      BufferSegment next)
	{
		this.data = data;
		this.offset = offset;
		this.len = len;
		this.next = next;
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/Macros.java" startline="537" endline="543">
public Macro(Handler handler, String name, String label, String path)
		{
			super(name);
			this.handler = handler;
			this.label = label;
			this.path = path;
		}
</source>
        <source file="org/gjt/sp/jedit/gui/GrabKeyDialog.java" startline="324" endline="331">
public KeyBinding(String name, String label,
			String shortcut, boolean isPrefix)
		{
			this.name = name;
			this.label = label;
			this.shortcut = shortcut;
			this.isPrefix = isPrefix;
		}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/Macros.java" startline="537" endline="543">
public Macro(Handler handler, String name, String label, String path)
		{
			super(name);
			this.handler = handler;
			this.label = label;
			this.path = path;
		}
</source>
        <source file="org/gjt/sp/jedit/syntax/Token.java" startline="148" endline="154">
public Token(byte id, int offset, int length, ParserRuleSet rules)
	{
		this.id = id;
		this.offset = offset;
		this.length = length;
		this.rules = rules;
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/Macros.java" startline="537" endline="543">
public Macro(Handler handler, String name, String label, String path)
		{
			super(name);
			this.handler = handler;
			this.label = label;
			this.path = path;
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/Selection.java" startline="376" endline="382">
public Rect(int startLine, int start, int endLine, int end)
		{
			this.startLine = startLine;
			this.start = start;
			this.endLine = endLine;
			this.end = end;
		}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="1144" endline="1149">
public DirectoryEntryCompare(boolean sortMixFilesAndDirs,
			boolean sortIgnoreCase)
		{
			this.sortMixFilesAndDirs = sortMixFilesAndDirs;
			this.sortIgnoreCase = sortIgnoreCase;
		}
</source>
        <source file="org/gjt/sp/jedit/gui/DockableWindowManagerImpl.java" startline="1021" endline="1030">
Entry(DockableWindowFactory.Window factory, String position)
		{
			this.factory = factory;
			this.position = position;

			// get the title here, not in the factory constructor,
			// since the factory might be created before a plugin's
			// props are loaded

		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/FontSelectorDialog.java" startline="217" endline="222">
public void paintComponent(Graphics g)
			{
				if(fontSelector != null)
					fontSelector.setAntiAliasEnabled(g);
				super.paintComponent(g);
			}
</source>
        <source file="org/gjt/sp/jedit/bsh/NameSpace.java" startline="440" endline="446">
public This getSuper( Interpreter declaringInterpreter )
    {
        if ( parent != null )
            return parent.getThis( declaringInterpreter );
        else
            return getThis( declaringInterpreter );
    }
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/FontSelectorDialog.java" startline="217" endline="222">
public void paintComponent(Graphics g)
			{
				if(fontSelector != null)
					fontSelector.setAntiAliasEnabled(g);
				super.paintComponent(g);
			}
</source>
        <source file="org/gjt/sp/jedit/bsh/NameSpace.java" startline="453" endline="459">
public This getGlobal( Interpreter declaringInterpreter )
    {
        if ( parent != null )
            return parent.getGlobal( declaringInterpreter );
        else
            return getThis( declaringInterpreter );
    }
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/MiscUtilities.java" startline="203" endline="208">
public static String abbreviate(String path)
	{
		if (svc == null)
			svc = new VarCompressor();
		return svc.compress(path);
	}
</source>
        <source file="org/gjt/sp/jedit/bsh/Modifiers.java" startline="51" endline="56">
public boolean hasModifier( String name ) 
	{
		if ( modifiers == null )
			modifiers = new Hashtable();
		return modifiers.get(name) != null;
	}
</source>
    </clone>
    <clone nlines="7" distance="2">
        <source file="org/gjt/sp/jedit/browser/RenameBrowserTask.java" startline="51" endline="57">
RenameBrowserTask(VFSBrowser browser,
			  Object session, VFS vfs, String path1, String path2,
			 Runnable awtRunnable)
	{
		super(browser, session, vfs, path1, awtRunnable);
		this.path2 = path2;
	}
</source>
        <source file="org/gjt/sp/jedit/browser/ListDirectoryBrowserTask.java" startline="51" endline="57">
ListDirectoryBrowserTask(VFSBrowser browser,
		Object session, VFS vfs, String path,
		Object[] loadInfo, Runnable awtRunnable)
	{
		super(browser, session, vfs, path, awtRunnable);
		this.loadInfo = loadInfo;
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/statusbar/ErrorsWidgetFactory.java" startline="57" endline="62">
@Override
	public Widget getWidget(View view)
	{
		Widget errorWidget = new ErrorWidget(view);
		return errorWidget;
	}
</source>
        <source file="org/jedit/keymap/KeymapImpl.java" startline="88" endline="93">
@Override
	public String getShortcut(String name)
	{
		String property = props.getProperty(name);
		return property;
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/statusbar/MultiSelectWidgetFactory.java" startline="45" endline="50">
@Override
	public Widget getWidget(View view)
	{
		Widget multiSelect = new MultiSelectWidget(view);
		return multiSelect;
	}
</source>
        <source file="org/jedit/keymap/KeymapImpl.java" startline="88" endline="93">
@Override
	public String getShortcut(String name)
	{
		String property = props.getProperty(name);
		return property;
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="org/gjt/sp/jedit/gui/MarkerViewer.java" startline="134" endline="142">
@EBHandler
	public void handleViewUpdate(ViewUpdate vu)
	{
		if (vu.getView().equals(view) &amp;&amp;
			vu.getWhat().equals(ViewUpdate.EDIT_PANE_CHANGED))
		{
			refreshList();
		}
	}
</source>
        <source file="org/gjt/sp/jedit/gui/MarkerViewer.java" startline="123" endline="131">
@EBHandler
	public void handleEditPaneUpdate(EditPaneUpdate epu)
	{
		if (epu.getEditPane().getView().equals(view) &amp;&amp;
			epu.getWhat().equals(EditPaneUpdate.BUFFER_CHANGED))
		{
			refreshList();
		}
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/pluginmgr/PluginManagerProgress.java" startline="195" endline="200">
@Override
		public void windowClosing(WindowEvent evt)
		{
			thread.stop();
			dispose();
		}
</source>
        <source file="org/gjt/sp/jedit/options/ShortcutsOptionPane.java" startline="141" endline="146">
@Override
			public void actionPerformed(ActionEvent arg0)
			{
				filterTF.setText("");
				filterTF.requestFocus();
			}
</source>
    </clone>
    <clone nlines="12" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="515" endline="526">
@Test
	public void read_charArray_ShouldCorrectlyHandleLessThan5NonEscapeCharactersAfterBackslash() throws IOException
	{
		int c = getReader("\\asdf").read(bufferArray);
		assertThat(c, is(equalTo(5)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('s')));
		assertThat(bufferArray[i++], is(equalTo('d')));
		assertThat(bufferArray[i++], is(equalTo('f')));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="528" endline="540">
@Test
	public void read_charArray_int_int_ShouldCorrectlyHandleLessThan5NonEscapeCharactersAfterBackslash()
		throws IOException
	{
		int c = getReader("\\asdf").read(bufferArray, 0, 5);
		assertThat(c, is(equalTo(5)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('s')));
		assertThat(bufferArray[i++], is(equalTo('d')));
		assertThat(bufferArray[i++], is(equalTo('f')));
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/ExtendedGridLayout.java" startline="1216" endline="1221">
public String toString()
	{
		return getClass().getName() + "[hgap=" + hgap + ",vgap=" + vgap
			+ ",distanceToBorders=" + distanceToBorders
			+ ",comptable=" + comptable + "]";
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/Selection.java" startline="126" endline="132">
@Override
	public String toString()
	{
		return getClass().getName() + "[start=" + start
			+ ",end=" + end + ",startLine=" + startLine
			+ ",endLine=" + endLine + ']';
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/msg/VFSPathSelected.java" startline="17" endline="22">
public VFSPathSelected(View source, String path, boolean isDirectory)
	{
		super(source);
		this.path = path;
		this.isDir = isDirectory;
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/StandaloneTextArea.java" startline="599" endline="604">
public StandaloneActionSet(IPropertyManager iPropertyManager, TextArea textArea, URL url)
		{
			super(null, url);
			this.iPropertyManager = iPropertyManager;
			this.textArea = textArea;
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/msg/VFSPathSelected.java" startline="17" endline="22">
public VFSPathSelected(View source, String path, boolean isDirectory)
	{
		super(source);
		this.path = path;
		this.isDir = isDirectory;
	}
</source>
        <source file="org/gjt/sp/jedit/io/LocalFileSaveTask.java" startline="41" endline="46">
public LocalFileSaveTask(File file, String body, String charset)
	{
		this.file = file;
		this.body = body;
		this.charset = charset;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/msg/VFSPathSelected.java" startline="17" endline="22">
public VFSPathSelected(View source, String path, boolean isDirectory)
	{
		super(source);
		this.path = path;
		this.isDir = isDirectory;
	}
</source>
        <source file="org/gjt/sp/jedit/search/DirectoryListSet.java" startline="41" endline="46">
public DirectoryListSet(String directory, String glob, boolean recurse)
	{
		this.directory = directory;
		this.glob = glob;
		this.recurse = recurse;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/msg/VFSPathSelected.java" startline="17" endline="22">
public VFSPathSelected(View source, String path, boolean isDirectory)
	{
		super(source);
		this.path = path;
		this.isDir = isDirectory;
	}
</source>
        <source file="org/gjt/sp/jedit/syntax/SyntaxStyle.java" startline="42" endline="47">
public SyntaxStyle(Color fgColor, Color bgColor, Font font)
	{
		this.fgColor = fgColor;
		this.bgColor = bgColor;
		this.font = font;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/msg/VFSPathSelected.java" startline="17" endline="22">
public VFSPathSelected(View source, String path, boolean isDirectory)
	{
		super(source);
		this.path = path;
		this.isDir = isDirectory;
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="121" endline="126">
public ColumnBlock(JEditBuffer buffer, int startLine, int endLine)
	{
		this.startLine = startLine;
		this.endLine = endLine;
		this.buffer = buffer;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/msg/VFSPathSelected.java" startline="17" endline="22">
public VFSPathSelected(View source, String path, boolean isDirectory)
	{
		super(source);
		this.path = path;
		this.isDir = isDirectory;
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlockLine.java" startline="31" endline="36">
public ColumnBlockLine(int line,int lineStartIndex,int lineEndIndex)
	{
		this.line = line;
		this.colEndIndex  = lineEndIndex;
		this.colStartIndex = lineStartIndex;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/msg/VFSPathSelected.java" startline="17" endline="22">
public VFSPathSelected(View source, String path, boolean isDirectory)
	{
		super(source);
		this.path = path;
		this.isDir = isDirectory;
	}
</source>
        <source file="org/gjt/sp/util/SegmentCharSequence.java" startline="38" endline="43">
public SegmentCharSequence(Segment seg, int off, int len)
	{
		this.offset = off;
		this.length = len;
		this.seg = seg;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/BeanShellAction.java" startline="177" endline="182">
public CachedBshMethod(String name, String source)
		{
			this.name = name;
			this.source = source;
			this.cache = null;
		}
</source>
        <source file="org/gjt/sp/jedit/io/LocalFileSaveTask.java" startline="41" endline="46">
public LocalFileSaveTask(File file, String body, String charset)
	{
		this.file = file;
		this.body = body;
		this.charset = charset;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/BeanShellAction.java" startline="177" endline="182">
public CachedBshMethod(String name, String source)
		{
			this.name = name;
			this.source = source;
			this.cache = null;
		}
</source>
        <source file="org/gjt/sp/jedit/search/DirectoryListSet.java" startline="41" endline="46">
public DirectoryListSet(String directory, String glob, boolean recurse)
	{
		this.directory = directory;
		this.glob = glob;
		this.recurse = recurse;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/BeanShellAction.java" startline="177" endline="182">
public CachedBshMethod(String name, String source)
		{
			this.name = name;
			this.source = source;
			this.cache = null;
		}
</source>
        <source file="org/gjt/sp/jedit/syntax/SyntaxStyle.java" startline="42" endline="47">
public SyntaxStyle(Color fgColor, Color bgColor, Font font)
	{
		this.fgColor = fgColor;
		this.bgColor = bgColor;
		this.font = font;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/BeanShellAction.java" startline="177" endline="182">
public CachedBshMethod(String name, String source)
		{
			this.name = name;
			this.source = source;
			this.cache = null;
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="121" endline="126">
public ColumnBlock(JEditBuffer buffer, int startLine, int endLine)
	{
		this.startLine = startLine;
		this.endLine = endLine;
		this.buffer = buffer;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/BeanShellAction.java" startline="177" endline="182">
public CachedBshMethod(String name, String source)
		{
			this.name = name;
			this.source = source;
			this.cache = null;
		}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlockLine.java" startline="31" endline="36">
public ColumnBlockLine(int line,int lineStartIndex,int lineEndIndex)
	{
		this.line = line;
		this.colEndIndex  = lineEndIndex;
		this.colStartIndex = lineStartIndex;
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/BeanShellAction.java" startline="177" endline="182">
public CachedBshMethod(String name, String source)
		{
			this.name = name;
			this.source = source;
			this.cache = null;
		}
</source>
        <source file="org/gjt/sp/util/SegmentCharSequence.java" startline="38" endline="43">
public SegmentCharSequence(Segment seg, int off, int len)
	{
		this.offset = off;
		this.length = len;
		this.seg = seg;
	}
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/pluginmgr/PluginManagerProgress.java" startline="169" endline="176">
public void actionPerformed(ActionEvent evt)
		{
			if(evt.getSource() == stop)
			{
				thread.stop();
				dispose();
			}
		}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/MemoryStatusWidgetFactory.java" startline="241" endline="249">
@Override
			public void mousePressed(MouseEvent evt)
			{
				if(evt.getClickCount() == 2)
				{
					jEdit.showMemoryDialog(view);
					repaint();
				}
			}
</source>
    </clone>
    <clone nlines="25" distance="2">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="2790" endline="2815">
public void goToPrevLine(boolean select)
	{
		Selection s = getSelectionAtOffset(caret);
		boolean rectSelect = s == null ? rectangularSelectionMode
			: s instanceof Selection.Rect;
		int magic = getMagicCaretPosition();

		int newCaret = chunkCache.getAbovePosition(caretLine,
			caret - buffer.getLineStartOffset(caretLine),magic + 1,
			rectSelect &amp;&amp; select);
		if(newCaret == -1)
		{
			int start = getLineStartOffset(caretLine);
			if(caret == start)
			{
				getToolkit().beep();
				return;
			}
			else
				newCaret = start;
		}

		_changeLine(select, newCaret);

		setMagicCaretPosition(magic);
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="2494" endline="2518">
public void goToNextLine(boolean select)
	{
		Selection s = getSelectionAtOffset(caret);
		boolean rectSelect = s == null ? rectangularSelectionMode
			: s instanceof Selection.Rect;
		int magic = getMagicCaretPosition();
		int newCaret = chunkCache.getBelowPosition(caretLine,
			caret - buffer.getLineStartOffset(caretLine),magic + 1,
			rectSelect &amp;&amp; select);
		if(newCaret == -1)
		{
			int end = getLineEndOffset(caretLine) - 1;
			if(caret == end)
			{
				getToolkit().beep();
				return;
			}
			else
				newCaret = end;
		}

		_changeLine(select, newCaret);

		setMagicCaretPosition(magic);
	}
</source>
    </clone>
    <clone nlines="11" distance="2">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="3087" endline="3097">
public void goToStartOfLine(boolean select)
	{
		Selection s = getSelectionAtOffset(caret);
		int line = select || s == null ? caretLine : s.startLine;
		int newCaret = getLineStartOffset(line);
		if(select)
			extendSelection(caret,newCaret);
		else if(!multi)
			selectNone();
		moveCaretPosition(newCaret);
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="3105" endline="3119">
public void goToEndOfLine(boolean select)
	{
		Selection s = getSelectionAtOffset(caret);
		int line = select || s == null ? caretLine : s.endLine;
		int newCaret = getLineEndOffset(line) - 1;
		if(select)
			extendSelection(caret,newCaret);
		else if(!multi)
			selectNone();
		moveCaretPosition(newCaret);

		// so that end followed by up arrow will always put caret at
		// the end of the previous line, for example
		//setMagicCaretPosition(Integer.MAX_VALUE);
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="438" endline="443">
public void updateMiscStatus()
	{
		multiSelectWidget.update();
		rectSelectWidget.update();
		overwriteWidget.update();
	}
</source>
        <source file="installer/SwingInstall.java" startline="413" endline="418">
public void run()
								{
									parent.add(message,pos);
									parent.revalidate();
									parent.repaint();
								}
</source>
    </clone>
    <clone nlines="6" distance="1">
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="438" endline="443">
public void updateMiscStatus()
	{
		multiSelectWidget.update();
		rectSelectWidget.update();
		overwriteWidget.update();
	}
</source>
        <source file="installer/SwingInstall.java" startline="398" endline="403">
public void run()
								{
									parent.remove(message);
									parent.revalidate();
									parent.repaint();
								}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="438" endline="443">
public void updateMiscStatus()
	{
		multiSelectWidget.update();
		rectSelectWidget.update();
		overwriteWidget.update();
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/DisplayManager.java" startline="638" endline="643">
void invalidateScreenLineCounts()
	{
		screenLineMgr.invalidateScreenLineCounts();
		firstLine.setCallReset(true);
		scrollLineCount.setCallReset(true);
	}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="438" endline="443">
public void updateMiscStatus()
	{
		multiSelectWidget.update();
		rectSelectWidget.update();
		overwriteWidget.update();
	}
</source>
        <source file="org/gjt/sp/jedit/search/SearchDialog.java" startline="98" endline="107">
public void run() 
			{
				dialog.toFront();
				dialog.requestFocus();
					// Ensure that the dialog gets the focus. Just bringing
					// it to front just not necessarily give it the focus.
				dialog.find.requestFocus();
					// Given that the dialog has the focus, set the focus
					// to the 'find' field.
			}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/StatusBar.java" startline="438" endline="443">
public void updateMiscStatus()
	{
		multiSelectWidget.update();
		rectSelectWidget.update();
		overwriteWidget.update();
	}
</source>
        <source file="org/gjt/sp/jedit/browser/BrowserView.java" startline="327" endline="332">
public void propertiesChanged()
	{
		showIcons = jEdit.getBooleanProperty("vfs.browser.showIcons");
		table.propertiesChanged();
		splitPane.setBorder(null);
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/statusbar/EncodingWidgetFactory.java" startline="77" endline="82">
public void update() 
		{
			Buffer buffer = view.getBuffer();
			if (buffer.isLoaded())
				encoding.setText(buffer.getStringProperty("encoding"));
		}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/ModeWidgetFactory.java" startline="77" endline="82">
public void update() 
	    {
		    Buffer buffer = view.getBuffer();
		    if (buffer.isLoaded())
			    mode.setText(buffer.getMode().toString());
	    }
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/statusbar/ModeWidgetFactory.java" startline="77" endline="82">
public void update() 
	    {
		    Buffer buffer = view.getBuffer();
		    if (buffer.isLoaded())
			    mode.setText(buffer.getMode().toString());
	    }
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/FoldWidgetFactory.java" startline="78" endline="83">
public void update() 
		{
			Buffer buffer = view.getBuffer();
			if (buffer.isLoaded())
				fold.setText((String)view.getBuffer().getProperty("folding"));
		}
</source>
    </clone>
    <clone nlines="17" distance="2">
        <source file="org/gjt/sp/jedit/textarea/StandaloneTextArea.java" startline="367" endline="383">
private int getIntegerProperty(String name, int def)
	{
		String value = getProperty(name);
		if(value == null)
			return def;
		else
		{
			try
			{
				return Integer.parseInt(value.trim());
			}
			catch(NumberFormatException nf)
			{
				return def;
			}
		}
	}
</source>
        <source file="org/gjt/sp/jedit/jEdit.java" startline="765" endline="781">
public static int getIntegerProperty(String name, int def)
	{
		String value = getProperty(name);
		if(value == null)
			return def;
		else
		{
			try
			{
				return Integer.parseInt(value.trim());
			}
			catch(NumberFormatException nf)
			{
				return def;
			}
		}
	}
</source>
    </clone>
    <clone nlines="17" distance="2">
        <source file="org/gjt/sp/jedit/textarea/StandaloneTextArea.java" startline="367" endline="383">
private int getIntegerProperty(String name, int def)
	{
		String value = getProperty(name);
		if(value == null)
			return def;
		else
		{
			try
			{
				return Integer.parseInt(value.trim());
			}
			catch(NumberFormatException nf)
			{
				return def;
			}
		}
	}
</source>
        <source file="org/gjt/sp/jedit/jEdit.java" startline="784" endline="800">
public static double getDoubleProperty(String name, double def)
	{
		String value = getProperty(name);
		if(value == null)
			return def;
		else
		{
			try
			{
				return Double.parseDouble(value.trim());
			}
			catch(NumberFormatException nf)
			{
				return def;
			}
		}
	}
</source>
    </clone>
    <clone nlines="8" distance="2">
        <source file="org/gjt/sp/jedit/textarea/StandaloneTextArea.java" startline="470" endline="477">
private Color getColorProperty(String name, Color def)
	{
		String value = getProperty(name);
		if(value == null)
			return def;
		else
			return SyntaxUtilities.parseColor(value, def);
	}
</source>
        <source file="org/gjt/sp/jedit/jEdit.java" startline="889" endline="896">
public static Color getColorProperty(String name, Color def)
	{
		String value = getProperty(name);
		if(value == null)
			return def;
		else
			return SyntaxUtilities.parseColor(value, def);
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/options/AbbrevsOptionPane.java" startline="251" endline="256">
@Override
		public void mouseClicked(MouseEvent evt)
		{
			if(evt.getClickCount() == 2)
				edit();
		}
</source>
        <source file="org/gjt/sp/jedit/gui/DockableWindowManager.java" startline="448" endline="453">
@EBHandler
	public void handleDockableWindowUpdate(DockableWindowUpdate msg)
	{
		if(msg.getWhat() == DockableWindowUpdate.PROPERTIES_CHANGED)
			propertiesChanged();
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/options/AbbrevsOptionPane.java" startline="251" endline="256">
@Override
		public void mouseClicked(MouseEvent evt)
		{
			if(evt.getClickCount() == 2)
				edit();
		}
</source>
        <source file="org/gjt/sp/jedit/gui/DockableWindowManagerImpl.java" startline="678" endline="683">
@EBHandler
	public void handleDockableWindowUpdate(DockableWindowUpdate msg)
	{
		if (msg.getWhat() == DockableWindowUpdate.PROPERTIES_CHANGED)
			propertiesChanged();
	}
</source>
    </clone>
    <clone nlines="13" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1042" endline="1054">
@Test
	public void read_charArray_ShouldIgnoreIncompleteEscapeSequenceThatFollowsOneBackslash() throws IOException
	{
		int c = getReader("\\\\u21a").read(bufferArray);
		assertThat(c, is(equalTo(6)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('u')));
		assertThat(bufferArray[i++], is(equalTo('2')));
		assertThat(bufferArray[i++], is(equalTo('1')));
		assertThat(bufferArray[i++], is(equalTo('a')));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1056" endline="1069">
@Test
	public void read_charArray_int_int_ShouldIgnoreIncompleteEscapeSequenceThatFollowsOneBackslash()
		throws IOException
	{
		int c = getReader("\\\\u21a").read(bufferArray, 0, 6);
		assertThat(c, is(equalTo(6)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('u')));
		assertThat(bufferArray[i++], is(equalTo('2')));
		assertThat(bufferArray[i++], is(equalTo('1')));
		assertThat(bufferArray[i++], is(equalTo('a')));
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/search/HyperSearchOperationNode.java" startline="53" endline="58">
public HyperSearchOperationNode(String searchString, SearchMatcher searchMatcher)
	{
		this.searchString = searchString;
		this.searchMatcher = searchMatcher;
		noWordSep = searchMatcher.getNoWordSep();
	}
</source>
        <source file="org/gjt/sp/jedit/gui/DockableWindowManager.java" startline="172" endline="178">
public DockableWindowManager(View view, DockableWindowFactory instance,
			ViewConfig config)
	{
		this.view = view;
		this.factory = instance;
		alternateLayout = jEdit.getBooleanProperty(ALTERNATE_LAYOUT_PROP);
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/search/HyperSearchOperationNode.java" startline="53" endline="58">
public HyperSearchOperationNode(String searchString, SearchMatcher searchMatcher)
	{
		this.searchString = searchString;
		this.searchMatcher = searchMatcher;
		noWordSep = searchMatcher.getNoWordSep();
	}
</source>
        <source file="org/gjt/sp/jedit/syntax/KeywordMap.java" startline="58" endline="63">
public KeywordMap(boolean ignoreCase, int mapLength)
	{
		this.mapLength = mapLength;
		this.ignoreCase = ignoreCase;
		map = new Keyword[mapLength];
	}
</source>
    </clone>
    <clone nlines="8" distance="1">
        <source file="org/gjt/sp/jedit/MiscUtilities.java" startline="482" endline="489">
public static String getCompleteBaseName(String path)
	{
		String name = getFileName(path);
		int index = name.lastIndexOf('.');
		if (index == -1)
			return name;
		return name.substring(0, index);
	}
</source>
        <source file="org/gjt/sp/jedit/MiscUtilities.java" startline="502" endline="510">
public static String getBaseName(String path)
	{
		String name = getFileName(path);
		int index = name.indexOf('.');
		if(index == -1)
			return name;
		else
			return name.substring(0,index);
	}
</source>
    </clone>
    <clone nlines="13" distance="4">
        <source file="org/gjt/sp/jedit/pluginmgr/InstallPanel.java" startline="1429" endline="1441">
@Override
		public Component getTableCellRendererComponent(JTable table, Object value,
							       boolean isSelected, boolean hasFocus,
							       int row, int column)
		{
			JLabel l = (JLabel)tcr.getTableCellRendererComponent(table,value,isSelected,hasFocus,row,column);
			PluginTableModel model = (PluginTableModel) table.getModel();
			Icon icon = (column == model.sortType)
				? (model.sortDirection == 1) ? ASC_ICON : DESC_ICON
				: null;
			l.setIcon(icon);
			return l;
		}
</source>
        <source file="org/gjt/sp/jedit/pluginmgr/ManagePanel.java" startline="1428" endline="1440">
@Override
		public Component getTableCellRendererComponent(JTable table, Object value,
							       boolean isSelected, boolean hasFocus,
							       int row, int column)
		{
			JLabel l = (JLabel)tcr.getTableCellRendererComponent(table,value,isSelected,hasFocus,row,column);
			PluginTableModel model = (PluginTableModel) table.getModel();
			Icon icon = (column == model.sortType)
				? (model.sortDirection == 1) ? InstallPanel.ASC_ICON : InstallPanel.DESC_ICON
				: null;
			l.setIcon(icon);
			return l;
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/DockableWindowManager.java" startline="448" endline="453">
@EBHandler
	public void handleDockableWindowUpdate(DockableWindowUpdate msg)
	{
		if(msg.getWhat() == DockableWindowUpdate.PROPERTIES_CHANGED)
			propertiesChanged();
	}
</source>
        <source file="org/gjt/sp/jedit/View.java" startline="2168" endline="2173">
@Override
		public void caretUpdate(CaretEvent evt)
		{
			if(evt.getSource() == getTextArea())
				status.updateCaretStatus();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/gui/DockableWindowManagerImpl.java" startline="678" endline="683">
@EBHandler
	public void handleDockableWindowUpdate(DockableWindowUpdate msg)
	{
		if (msg.getWhat() == DockableWindowUpdate.PROPERTIES_CHANGED)
			propertiesChanged();
	}
</source>
        <source file="org/gjt/sp/jedit/View.java" startline="2168" endline="2173">
@Override
		public void caretUpdate(CaretEvent evt)
		{
			if(evt.getSource() == getTextArea())
				status.updateCaretStatus();
		}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/bufferset/BufferSetManager.java" startline="219" endline="224">
@Override
					public void visit(EditPane editPane)
					{
						BufferSet bfs = editPane.getBufferSet();
						bfs.addBuffer(buffer);
					}
</source>
        <source file="org/gjt/sp/jedit/gui/statusbar/IndentWidgetFactory.java" startline="64" endline="70">
@Override
				public void mouseClicked(MouseEvent evt)
				{	
					Buffer buffer = view.getBuffer();
					buffer.toggleAutoIndent(view);
					update();
				}
</source>
    </clone>
    <clone nlines="14" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="647" endline="660">
@Test
	public void read_charArray_ShouldReadBackslashWithoutFollowingUAsBackslash() throws IOException
	{
		int c = getReader("\\nu21aF").read(bufferArray);
		assertThat(c, is(equalTo(7)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('n')));
		assertThat(bufferArray[i++], is(equalTo('u')));
		assertThat(bufferArray[i++], is(equalTo('2')));
		assertThat(bufferArray[i++], is(equalTo('1')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('F')));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="662" endline="675">
@Test
	public void read_charArray_int_int_ShouldReadBackslashWithoutFollowingUAsBackslash() throws IOException
	{
		int c = getReader("\\nu21aF").read(bufferArray, 0, 7);
		assertThat(c, is(equalTo(7)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('n')));
		assertThat(bufferArray[i++], is(equalTo('u')));
		assertThat(bufferArray[i++], is(equalTo('2')));
		assertThat(bufferArray[i++], is(equalTo('1')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('F')));
	}
</source>
    </clone>
    <clone nlines="14" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="647" endline="660">
@Test
	public void read_charArray_ShouldReadBackslashWithoutFollowingUAsBackslash() throws IOException
	{
		int c = getReader("\\nu21aF").read(bufferArray);
		assertThat(c, is(equalTo(7)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('n')));
		assertThat(bufferArray[i++], is(equalTo('u')));
		assertThat(bufferArray[i++], is(equalTo('2')));
		assertThat(bufferArray[i++], is(equalTo('1')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('F')));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="844" endline="857">
@Test
	public void read_charArray_int_int_ShouldIgnoreEscapeSequenceThatFollowsOneBackslash() throws IOException
	{
		int c = getReader("\\\\u21aF").read(bufferArray, 0, 7);
		assertThat(c, is(equalTo(7)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('u')));
		assertThat(bufferArray[i++], is(equalTo('2')));
		assertThat(bufferArray[i++], is(equalTo('1')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('F')));
	}
</source>
    </clone>
    <clone nlines="14" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="829" endline="842">
@Test
	public void read_charArray_ShouldIgnoreEscapeSequenceThatFollowsOneBackslash() throws IOException
	{
		int c = getReader("\\\\u21aF").read(bufferArray);
		assertThat(c, is(equalTo(7)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('u')));
		assertThat(bufferArray[i++], is(equalTo('2')));
		assertThat(bufferArray[i++], is(equalTo('1')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('F')));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="662" endline="675">
@Test
	public void read_charArray_int_int_ShouldReadBackslashWithoutFollowingUAsBackslash() throws IOException
	{
		int c = getReader("\\nu21aF").read(bufferArray, 0, 7);
		assertThat(c, is(equalTo(7)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('n')));
		assertThat(bufferArray[i++], is(equalTo('u')));
		assertThat(bufferArray[i++], is(equalTo('2')));
		assertThat(bufferArray[i++], is(equalTo('1')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('F')));
	}
</source>
    </clone>
    <clone nlines="14" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="829" endline="842">
@Test
	public void read_charArray_ShouldIgnoreEscapeSequenceThatFollowsOneBackslash() throws IOException
	{
		int c = getReader("\\\\u21aF").read(bufferArray);
		assertThat(c, is(equalTo(7)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('u')));
		assertThat(bufferArray[i++], is(equalTo('2')));
		assertThat(bufferArray[i++], is(equalTo('1')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('F')));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="844" endline="857">
@Test
	public void read_charArray_int_int_ShouldIgnoreEscapeSequenceThatFollowsOneBackslash() throws IOException
	{
		int c = getReader("\\\\u21aF").read(bufferArray, 0, 7);
		assertThat(c, is(equalTo(7)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('u')));
		assertThat(bufferArray[i++], is(equalTo('2')));
		assertThat(bufferArray[i++], is(equalTo('1')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('F')));
	}
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/JEditActionContext.java" startline="124" endline="131">
public F getAction(String name)
	{
		E set = actionHash.get(name);
		if(set == null)
			return null;
		else
			return set.getAction(name);
	}
</source>
        <source file="org/gjt/sp/jedit/gui/DockableWindowManagerImpl.java" startline="441" endline="448">
public boolean isDockableWindowDocked(String name)
	{
		Entry entry = windows.get(name);
		if(entry == null)
			return false;
		else
			return !entry.position.equals(FLOATING);
	}
</source>
    </clone>
    <clone nlines="7" distance="3">
        <source file="org/gjt/sp/jedit/browser/VFSFileChooserDialog.java" startline="69" endline="75">
public VFSFileChooserDialog(View view, String path,
		int mode, boolean multipleSelection, boolean autoshow)
	{
		super(view,getTitle(mode),true);
		setFocusTraversalPolicy(new LayoutFocusTraversalPolicy());
		_init(view,path,mode,multipleSelection,autoshow);
	}
</source>
        <source file="org/gjt/sp/jedit/browser/VFSFileChooserDialog.java" startline="84" endline="90">
public VFSFileChooserDialog(Dialog parent, View view, String path,
		int mode, boolean multipleSelection, boolean autoshow)
	{
		super(parent,getTitle(mode),true);
		setFocusTraversalPolicy(new LayoutFocusTraversalPolicy());		
		_init(view,path,mode,multipleSelection,autoshow);
	}
</source>
    </clone>
    <clone nlines="7" distance="3">
        <source file="org/gjt/sp/jedit/browser/VFSFileChooserDialog.java" startline="69" endline="75">
public VFSFileChooserDialog(View view, String path,
		int mode, boolean multipleSelection, boolean autoshow)
	{
		super(view,getTitle(mode),true);
		setFocusTraversalPolicy(new LayoutFocusTraversalPolicy());
		_init(view,path,mode,multipleSelection,autoshow);
	}
</source>
        <source file="org/gjt/sp/jedit/browser/VFSFileChooserDialog.java" startline="99" endline="105">
public VFSFileChooserDialog(Frame parent, View view, String path,
		int mode, boolean multipleSelection, boolean autoshow)
	{
		super(parent,getTitle(mode),true);
		setFocusTraversalPolicy(new LayoutFocusTraversalPolicy());		
		_init(view,path,mode,multipleSelection,autoshow);
	}
</source>
    </clone>
    <clone nlines="8" distance="3">
        <source file="org/gjt/sp/jedit/textarea/StructureMatcher.java" startline="116" endline="124">
public Match(StructureMatcher matcher, int startLine,
			int start, int endLine, int end)
		{
			this(matcher);
			this.startLine = startLine;
			this.start = start;
			this.endLine = endLine;
			this.end = end;
		}
</source>
        <source file="org/gjt/sp/jedit/BufferHistory.java" startline="65" endline="72">
public Entry(String path, int caret, String selection, String encoding, String mode)
		{
			this.path = path;
			this.caret = caret;
			this.selection = selection;
			this.encoding = encoding;
			this.mode = mode;
		}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/textarea/Gutter.java" startline="906" endline="911">
public void mouseExited(MouseEvent evt)
		{
			ToolTipManager ttm = ToolTipManager.sharedInstance();
			ttm.setInitialDelay(toolTipInitialDelay);
			ttm.setReshowDelay(toolTipReshowDelay);
		}
</source>
        <source file="org/gjt/sp/jedit/options/TextAreaOptionPane.java" startline="105" endline="110">
public void actionPerformed(ActionEvent evt)
				{
					int idx = antiAlias.getSelectedIndex();
					font.setAntiAliasEnabled(idx &gt; 0);
					font.repaint();
				}
</source>
    </clone>
    <clone nlines="6" distance="2">
        <source file="org/gjt/sp/jedit/textarea/Gutter.java" startline="906" endline="911">
public void mouseExited(MouseEvent evt)
		{
			ToolTipManager ttm = ToolTipManager.sharedInstance();
			ttm.setInitialDelay(toolTipInitialDelay);
			ttm.setReshowDelay(toolTipReshowDelay);
		}
</source>
        <source file="org/gjt/sp/jedit/syntax/ModeProvider.java" startline="254" endline="263">
public void addMode(Mode mode)
	{
		String name = mode.getName();

		// The removal makes the "insertion order" in modes
		// (LinkedHashMap) follow the order of addMode() calls.
		modes.remove(name);

		modes.put(name, mode);
	}
</source>
    </clone>
    <clone nlines="10" distance="2">
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="3318" endline="3327">
public void goToBufferStart(boolean select)
	{
		int start = buffer.getLineStartOffset(
			displayManager.getFirstVisibleLine());
		if(select)
			extendSelection(caret,start);
		else if(!multi)
			selectNone();
		moveCaretPosition(start);
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/TextArea.java" startline="3335" endline="3344">
public void goToBufferEnd(boolean select)
	{
		int end = buffer.getLineEndOffset(
			displayManager.getLastVisibleLine()) - 1;
		if(select)
			extendSelection(caret,end);
		else if(!multi)
			selectNone();
		moveCaretPosition(end);
	}
</source>
    </clone>
    <clone nlines="16" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="976" endline="991">
@Test
	public void read_charArray_ShouldIgnoreEscapeSequenceThatFollowsThreeBackslashes() throws IOException
	{
		int c = getReader("\\\\\\\\u21aF").read(bufferArray);
		assertThat(c, is(equalTo(9)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('u')));
		assertThat(bufferArray[i++], is(equalTo('2')));
		assertThat(bufferArray[i++], is(equalTo('1')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('F')));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="993" endline="1008">
@Test
	public void read_charArray_int_int_ShouldIgnoreEscapeSequenceThatFollowsThreeBackslashes() throws IOException
	{
		int c = getReader("\\\\\\\\u21aF").read(bufferArray, 0, 9);
		assertThat(c, is(equalTo(9)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('u')));
		assertThat(bufferArray[i++], is(equalTo('2')));
		assertThat(bufferArray[i++], is(equalTo('1')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('F')));
	}
</source>
    </clone>
    <clone nlines="11" distance="2">
        <source file="org/gjt/sp/jedit/syntax/ParserRule.java" startline="235" endline="245">
public static ParserRule createRegexpEOLSpanRule(
		String hashChar, int posMatch, String seq, ParserRuleSet delegate,
		byte id, byte matchType, boolean ignoreCase)
		throws PatternSyntaxException
	{
		int ruleAction = EOL_SPAN | REGEXP | NO_LINE_BREAK;

		return new ParserRule(ruleAction, hashChar, posMatch,
			null, Pattern.compile(seq,(ignoreCase ? Pattern.CASE_INSENSITIVE : 0)),
			0, null, null, delegate, id, matchType, null);
	}
</source>
        <source file="org/gjt/sp/jedit/syntax/ParserRule.java" startline="248" endline="258">
public static ParserRule createRegexpEOLSpanRule(
		int posMatch, char[] hashChars, String seq, ParserRuleSet delegate,
		byte id, byte matchType, boolean ignoreCase)
		throws PatternSyntaxException
	{
		int ruleAction = EOL_SPAN | REGEXP | NO_LINE_BREAK;

		return new ParserRule(hashChars, ruleAction, posMatch,
			null, Pattern.compile(seq,(ignoreCase ? Pattern.CASE_INSENSITIVE : 0)),
			0, null, null, delegate, id, matchType, null);
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="org/gjt/sp/jedit/syntax/ParserRule.java" startline="121" endline="129">
public static ParserRule createRegexpSequenceRule(
		String hashChar, int posMatch, String seq,
		ParserRuleSet delegate, byte id, boolean ignoreCase)
		throws PatternSyntaxException
	{
		return new ParserRule(SEQ | REGEXP, hashChar, posMatch,
			null, Pattern.compile(seq,(ignoreCase ? Pattern.CASE_INSENSITIVE : 0)),
			0, null, null, delegate, id, MATCH_TYPE_CONTEXT, null);
	}
</source>
        <source file="org/gjt/sp/jedit/syntax/ParserRule.java" startline="132" endline="140">
public static ParserRule createRegexpSequenceRule(
		int posMatch, char[] hashChars, String seq,
		ParserRuleSet delegate, byte id, boolean ignoreCase)
		throws PatternSyntaxException
	{
		return new ParserRule(hashChars, SEQ | REGEXP, posMatch,
			null, Pattern.compile(seq,(ignoreCase ? Pattern.CASE_INSENSITIVE : 0)),
			0, null, null, delegate, id, MATCH_TYPE_CONTEXT, null);
	}
</source>
    </clone>
    <clone nlines="9" distance="4">
        <source file="org/gjt/sp/jedit/browser/VFSBrowser.java" startline="448" endline="456">
@EBHandler
	public void handleBufferUpdate(BufferUpdate bmsg)
	{
		if (bmsg.getWhat() == BufferUpdate.CREATED ||
			bmsg.getWhat() == BufferUpdate.CLOSED)
		{
			browserView.updateFileView();
		}
	}
</source>
        <source file="org/gjt/sp/jedit/gui/MarkerViewer.java" startline="289" endline="298">
@Override
		public void keyPressed(KeyEvent evt)
		{			
			if(evt.getKeyCode() == KeyEvent.VK_SPACE
			   || evt.getKeyCode() == KeyEvent.VK_ENTER)
			{
				evt.consume();
				goToSelectedMarker();
			}
		}
</source>
    </clone>
    <clone nlines="9" distance="3">
        <source file="org/gjt/sp/jedit/gui/MarkerViewer.java" startline="289" endline="298">
@Override
		public void keyPressed(KeyEvent evt)
		{			
			if(evt.getKeyCode() == KeyEvent.VK_SPACE
			   || evt.getKeyCode() == KeyEvent.VK_ENTER)
			{
				evt.consume();
				goToSelectedMarker();
			}
		}
</source>
        <source file="org/gjt/sp/jedit/pluginmgr/InstallPanel.java" startline="163" endline="171">
@Override
			public void keyPressed(KeyEvent e)
			{
				if (e.getKeyCode() == KeyEvent.VK_DOWN || e.getKeyCode() == KeyEvent.VK_UP)
				{
					table.dispatchEvent(e);
					table.requestFocus();
				}
			}
</source>
    </clone>
    <clone nlines="19" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="757" endline="775">
@Test
	public void read_charArray_shouldReadOnAfterCollapsingEscapeSequences() throws IOException
	{
		int c = getReader("asdf\\: \\u21aFasdf").read(bufferArray);
		assertThat(c, is(equalTo(12)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('s')));
		assertThat(bufferArray[i++], is(equalTo('d')));
		assertThat(bufferArray[i++], is(equalTo('f')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo(':')));
		assertThat(bufferArray[i++], is(equalTo(' ')));
		assertThat(bufferArray[i++], is(equalTo('\u21aF')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('s')));
		assertThat(bufferArray[i++], is(equalTo('d')));
		assertThat(bufferArray[i++], is(equalTo('f')));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="777" endline="795">
@Test
	public void read_charArray_int_int_shouldReadOnAfterCollapsingEscapeSequences() throws IOException
	{
		int c = getReader("asdf\\: \\u21aFasdf").read(bufferArray, 0, 12);
		assertThat(c, is(equalTo(12)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('s')));
		assertThat(bufferArray[i++], is(equalTo('d')));
		assertThat(bufferArray[i++], is(equalTo('f')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo(':')));
		assertThat(bufferArray[i++], is(equalTo(' ')));
		assertThat(bufferArray[i++], is(equalTo('\u21aF')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('s')));
		assertThat(bufferArray[i++], is(equalTo('d')));
		assertThat(bufferArray[i++], is(equalTo('f')));
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/bsh/TargetError.java" startline="57" endline="64">
public TargetError(
		String msg, Throwable t, SimpleNode node, CallStack callstack, 
		boolean inNativeCode )
	{
		super( msg, node, callstack );
		target = t;
		this.inNativeCode = inNativeCode;
	}
</source>
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="113" endline="118">
public ColumnBlock(JEditBuffer buffer, int startLine, int startColumn, int endLine,
		int endColumn)
	{
		super(buffer, startLine, startColumn, endLine, endColumn);
		this.buffer = buffer;
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/io/LocalFileSaveTask.java" startline="41" endline="46">
public LocalFileSaveTask(File file, String body, String charset)
	{
		this.file = file;
		this.body = body;
		this.charset = charset;
	}
</source>
        <source file="org/gjt/sp/jedit/syntax/KeywordMap.java" startline="236" endline="241">
Keyword(char[] keyword, byte id, Keyword next)
		{
			this.keyword = keyword;
			this.id = id;
			this.next = next;
		}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/search/DirectoryListSet.java" startline="41" endline="46">
public DirectoryListSet(String directory, String glob, boolean recurse)
	{
		this.directory = directory;
		this.glob = glob;
		this.recurse = recurse;
	}
</source>
        <source file="org/gjt/sp/jedit/syntax/KeywordMap.java" startline="236" endline="241">
Keyword(char[] keyword, byte id, Keyword next)
		{
			this.keyword = keyword;
			this.id = id;
			this.next = next;
		}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/syntax/SyntaxStyle.java" startline="42" endline="47">
public SyntaxStyle(Color fgColor, Color bgColor, Font font)
	{
		this.fgColor = fgColor;
		this.bgColor = bgColor;
		this.font = font;
	}
</source>
        <source file="org/gjt/sp/jedit/syntax/KeywordMap.java" startline="236" endline="241">
Keyword(char[] keyword, byte id, Keyword next)
		{
			this.keyword = keyword;
			this.id = id;
			this.next = next;
		}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="121" endline="126">
public ColumnBlock(JEditBuffer buffer, int startLine, int endLine)
	{
		this.startLine = startLine;
		this.endLine = endLine;
		this.buffer = buffer;
	}
</source>
        <source file="org/gjt/sp/jedit/syntax/KeywordMap.java" startline="236" endline="241">
Keyword(char[] keyword, byte id, Keyword next)
		{
			this.keyword = keyword;
			this.id = id;
			this.next = next;
		}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/textarea/ColumnBlockLine.java" startline="31" endline="36">
public ColumnBlockLine(int line,int lineStartIndex,int lineEndIndex)
	{
		this.line = line;
		this.colEndIndex  = lineEndIndex;
		this.colStartIndex = lineStartIndex;
	}
</source>
        <source file="org/gjt/sp/jedit/syntax/KeywordMap.java" startline="236" endline="241">
Keyword(char[] keyword, byte id, Keyword next)
		{
			this.keyword = keyword;
			this.id = id;
			this.next = next;
		}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/util/SegmentCharSequence.java" startline="38" endline="43">
public SegmentCharSequence(Segment seg, int off, int len)
	{
		this.offset = off;
		this.length = len;
		this.seg = seg;
	}
</source>
        <source file="org/gjt/sp/jedit/syntax/KeywordMap.java" startline="236" endline="241">
Keyword(char[] keyword, byte id, Keyword next)
		{
			this.keyword = keyword;
			this.id = id;
			this.next = next;
		}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/io/LocalFileSaveTask.java" startline="41" endline="46">
public LocalFileSaveTask(File file, String body, String charset)
	{
		this.file = file;
		this.body = body;
		this.charset = charset;
	}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="231" endline="236">
protected VFS(String name, int caps, String[] extAttrs)
	{
		this.name = name;
		this.caps = caps;
		this.extAttrs = extAttrs;
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/search/DirectoryListSet.java" startline="41" endline="46">
public DirectoryListSet(String directory, String glob, boolean recurse)
	{
		this.directory = directory;
		this.glob = glob;
		this.recurse = recurse;
	}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="231" endline="236">
protected VFS(String name, int caps, String[] extAttrs)
	{
		this.name = name;
		this.caps = caps;
		this.extAttrs = extAttrs;
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/syntax/SyntaxStyle.java" startline="42" endline="47">
public SyntaxStyle(Color fgColor, Color bgColor, Font font)
	{
		this.fgColor = fgColor;
		this.bgColor = bgColor;
		this.font = font;
	}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="231" endline="236">
protected VFS(String name, int caps, String[] extAttrs)
	{
		this.name = name;
		this.caps = caps;
		this.extAttrs = extAttrs;
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="121" endline="126">
public ColumnBlock(JEditBuffer buffer, int startLine, int endLine)
	{
		this.startLine = startLine;
		this.endLine = endLine;
		this.buffer = buffer;
	}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="231" endline="236">
protected VFS(String name, int caps, String[] extAttrs)
	{
		this.name = name;
		this.caps = caps;
		this.extAttrs = extAttrs;
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/jedit/textarea/ColumnBlockLine.java" startline="31" endline="36">
public ColumnBlockLine(int line,int lineStartIndex,int lineEndIndex)
	{
		this.line = line;
		this.colEndIndex  = lineEndIndex;
		this.colStartIndex = lineStartIndex;
	}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="231" endline="236">
protected VFS(String name, int caps, String[] extAttrs)
	{
		this.name = name;
		this.caps = caps;
		this.extAttrs = extAttrs;
	}
</source>
    </clone>
    <clone nlines="6" distance="3">
        <source file="org/gjt/sp/util/SegmentCharSequence.java" startline="38" endline="43">
public SegmentCharSequence(Segment seg, int off, int len)
	{
		this.offset = off;
		this.length = len;
		this.seg = seg;
	}
</source>
        <source file="org/gjt/sp/jedit/io/VFS.java" startline="231" endline="236">
protected VFS(String name, int caps, String[] extAttrs)
	{
		this.name = name;
		this.caps = caps;
		this.extAttrs = extAttrs;
	}
</source>
    </clone>
    <clone nlines="30" distance="2">
        <source file="org/gjt/sp/jedit/syntax/ParserRule.java" startline="159" endline="188">
public static ParserRule createRegexpSpanRule(
		String hashChar, int startPosMatch, String start,
		int endPosMatch, String end, ParserRuleSet delegate, byte id,
		byte matchType, boolean noLineBreak, boolean noWordBreak,
		boolean ignoreCase, String escape, boolean endRegexp)
		throws PatternSyntaxException
	{
		int ruleAction = SPAN | REGEXP |
			((noLineBreak) ? NO_LINE_BREAK : 0) |
			((noWordBreak) ? NO_WORD_BREAK : 0);
			
		Pattern endRegexpPattern;
		char[] endArray;
		if (endRegexp)
		{
			ruleAction |= END_REGEXP;
			endRegexpPattern = Pattern.compile(end, (ignoreCase ? Pattern.CASE_INSENSITIVE : 0));
			endArray = null;
		}
		else
		{
			endRegexpPattern = null;
			endArray = end.toCharArray();
		}

		return new ParserRule(ruleAction, hashChar, startPosMatch, null,
			Pattern.compile(start,(ignoreCase ? Pattern.CASE_INSENSITIVE : 0)),
			endPosMatch, endArray, endRegexpPattern, delegate, id, matchType,
			escape);
	}
</source>
        <source file="org/gjt/sp/jedit/syntax/ParserRule.java" startline="191" endline="220">
public static ParserRule createRegexpSpanRule(
		int startPosMatch, char[] hashChars, String start,
		int endPosMatch, String end, ParserRuleSet delegate, byte id,
		byte matchType, boolean noLineBreak, boolean noWordBreak,
		boolean ignoreCase, String escape, boolean endRegexp)
		throws PatternSyntaxException
	{
		int ruleAction = SPAN | REGEXP |
			((noLineBreak) ? NO_LINE_BREAK : 0) |
			((noWordBreak) ? NO_WORD_BREAK : 0);
			
		Pattern endRegexpPattern;
		char[] endArray;
		if (endRegexp)
		{
			ruleAction |= END_REGEXP;
			endRegexpPattern = Pattern.compile(end, (ignoreCase ? Pattern.CASE_INSENSITIVE : 0));
			endArray = null;
		}
		else
		{
			endRegexpPattern = null;
			endArray = end.toCharArray();
		}

		return new ParserRule(hashChars, ruleAction, startPosMatch, null,
			Pattern.compile(start,(ignoreCase ? Pattern.CASE_INSENSITIVE : 0)),
			endPosMatch, endArray, endRegexpPattern, delegate, id,
			matchType, escape);
	}
</source>
    </clone>
    <clone nlines="8" distance="3">
        <source file="org/gjt/sp/jedit/TextUtilities.java" startline="374" endline="382">
public static int findWordStart(CharSequence line,
					int pos,
					String noWordSep,
					boolean joinNonWordChars,
					boolean camelCasedWords,
					boolean eatWhitespace)
	{
		return findWordStart(line, pos, noWordSep, joinNonWordChars, camelCasedWords, eatWhitespace, false);
	}
</source>
        <source file="org/gjt/sp/jedit/TextUtilities.java" startline="353" endline="360">
public static int findWordStart(String line, int pos, String noWordSep,
		boolean joinNonWordChars, boolean camelCasedWords,
		boolean eatWhitespace)
	{
		return findWordStart((CharSequence) line, pos, noWordSep,
				     joinNonWordChars, camelCasedWords,
				     eatWhitespace);
	}
</source>
    </clone>
    <clone nlines="8" distance="3">
        <source file="org/gjt/sp/jedit/TextUtilities.java" startline="374" endline="382">
public static int findWordStart(CharSequence line,
					int pos,
					String noWordSep,
					boolean joinNonWordChars,
					boolean camelCasedWords,
					boolean eatWhitespace)
	{
		return findWordStart(line, pos, noWordSep, joinNonWordChars, camelCasedWords, eatWhitespace, false);
	}
</source>
        <source file="org/gjt/sp/jedit/TextUtilities.java" startline="570" endline="577">
public static int findWordEnd(String line, int pos, String noWordSep,
		boolean joinNonWordChars, boolean camelCasedWords,
		boolean eatWhitespace)
	{
		return findWordEnd((CharSequence)line, pos, noWordSep,
				   joinNonWordChars, camelCasedWords,
				   eatWhitespace);
	}
</source>
    </clone>
    <clone nlines="24" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="368" endline="391">
@Test
	public void permissiveRead_charArray_ShouldAcceptMalformedInput() throws IOException
	{
		int c = getPermissiveReader("asdf\\: \\u21a/asdf").read(bufferArray);
		assertThat(c, is(equalTo(17)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('s')));
		assertThat(bufferArray[i++], is(equalTo('d')));
		assertThat(bufferArray[i++], is(equalTo('f')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo(':')));
		assertThat(bufferArray[i++], is(equalTo(' ')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('u')));
		assertThat(bufferArray[i++], is(equalTo('2')));
		assertThat(bufferArray[i++], is(equalTo('1')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('/')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('s')));
		assertThat(bufferArray[i++], is(equalTo('d')));
		assertThat(bufferArray[i++], is(equalTo('f')));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="393" endline="416">
@Test
	public void permissiveRead_charArray_int_int_ShouldAcceptMalformedInput() throws IOException
	{
		int c = getPermissiveReader("asdf\\: \\u21a/asdf").read(bufferArray, 0, 17);
		assertThat(c, is(equalTo(17)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('s')));
		assertThat(bufferArray[i++], is(equalTo('d')));
		assertThat(bufferArray[i++], is(equalTo('f')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo(':')));
		assertThat(bufferArray[i++], is(equalTo(' ')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('u')));
		assertThat(bufferArray[i++], is(equalTo('2')));
		assertThat(bufferArray[i++], is(equalTo('1')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('/')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('s')));
		assertThat(bufferArray[i++], is(equalTo('d')));
		assertThat(bufferArray[i++], is(equalTo('f')));
	}
</source>
    </clone>
    <clone nlines="25" distance="4">
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1127" endline="1151">
@Test
	public void read_charArray_ShouldIgnoreMalformedEscapeSequenceThatFollowsOneBackslash() throws IOException
	{
		int c = getReader("asdf\\: \\\\u21alasdf").read(bufferArray);
		assertThat(c, is(equalTo(18)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('s')));
		assertThat(bufferArray[i++], is(equalTo('d')));
		assertThat(bufferArray[i++], is(equalTo('f')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo(':')));
		assertThat(bufferArray[i++], is(equalTo(' ')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('u')));
		assertThat(bufferArray[i++], is(equalTo('2')));
		assertThat(bufferArray[i++], is(equalTo('1')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('l')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('s')));
		assertThat(bufferArray[i++], is(equalTo('d')));
		assertThat(bufferArray[i++], is(equalTo('f')));
	}
</source>
        <source file="test/org/jedit/io/Native2ASCIIEncodingTest.java" startline="1153" endline="1178">
@Test
	public void read_charArray_int_int_ShouldIgnoreMalformedEscapeSequenceThatFollowsOneBackslash()
		throws IOException
	{
		int c = getReader("asdf\\: \\\\u21alasdf").read(bufferArray, 0, 18);
		assertThat(c, is(equalTo(18)));
		int i = 0;
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('s')));
		assertThat(bufferArray[i++], is(equalTo('d')));
		assertThat(bufferArray[i++], is(equalTo('f')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo(':')));
		assertThat(bufferArray[i++], is(equalTo(' ')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('\\')));
		assertThat(bufferArray[i++], is(equalTo('u')));
		assertThat(bufferArray[i++], is(equalTo('2')));
		assertThat(bufferArray[i++], is(equalTo('1')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('l')));
		assertThat(bufferArray[i++], is(equalTo('a')));
		assertThat(bufferArray[i++], is(equalTo('s')));
		assertThat(bufferArray[i++], is(equalTo('d')));
		assertThat(bufferArray[i++], is(equalTo('f')));
	}
</source>
    </clone>
    <clone nlines="6" distance="4">
        <source file="org/gjt/sp/jedit/textarea/ColumnBlock.java" startline="113" endline="118">
public ColumnBlock(JEditBuffer buffer, int startLine, int startColumn, int endLine,
		int endColumn)
	{
		super(buffer, startLine, startColumn, endLine, endColumn);
		this.buffer = buffer;
	}
</source>
        <source file="org/gjt/sp/jedit/browser/RenameBrowserTask.java" startline="51" endline="57">
RenameBrowserTask(VFSBrowser browser,
			  Object session, VFS vfs, String path1, String path2,
			 Runnable awtRunnable)
	{
		super(browser, session, vfs, path1, awtRunnable);
		this.path2 = path2;
	}
</source>
    </clone>
    <clone nlines="7" distance="4">
        <source file="org/gjt/sp/jedit/gui/KeyEventTranslator.java" startline="510" endline="516">
public Key(String modifiers, int key, char input)
		{
			this.modifiers = modifiers;
			this.key = key;
			this.input = input;
			hashCode = key + input;
		}
</source>
        <source file="org/gjt/sp/jedit/Macros.java" startline="889" endline="895">
public Recorder(View view, Buffer buffer, boolean temporary)
		{
			this.view = view;
			this.buffer = buffer;
			this.temporary = temporary;
			EditBus.addToBus(this);
		}
</source>
    </clone>
    <clone nlines="17" distance="2">
        <source file="org/jedit/options/TabbedOptionDialog.java" startline="140" endline="156">
public void actionPerformed(ActionEvent evt)
	{
		Object source = evt.getSource();

		if (source == ok)
		{
			ok();
		}
		else if (source == cancel)
		{
			cancel();
		}
		else if (source == apply)
		{
			ok(false);
		}
	}
</source>
        <source file="org/gjt/sp/jedit/gui/OptionsDialog.java" startline="141" endline="158">
@Override
	public void actionPerformed(ActionEvent evt)
	{
		Object source = evt.getSource();

		if(source == ok)
		{
			ok();
		}
		else if(source == cancel)
		{
			cancel();
		}
		else if(source == apply)
		{
			ok(false);
		}
	}
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/gui/BufferOptions.java" startline="126" endline="133">
public void actionPerformed(ActionEvent evt)
		{
			Object source = evt.getSource();
			if(source == ok)
				ok();
			else if(source == cancel)
				cancel();
		}
</source>
        <source file="org/gjt/sp/jedit/gui/FilePropertiesDialog.java" startline="340" endline="353">
public void actionPerformed(ActionEvent evt)
		{
			Object source = evt.getSource();


			if(source == okButton)
			{
				ok();
			}
			else if(source == cancelButton)
			{
				cancel();
			}
		}
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/gui/PasteFromListDialog.java" startline="288" endline="295">
public void actionPerformed(ActionEvent evt)
		{
			Object source = evt.getSource();
			if(source == insert)
				ok();
			else if(source == cancel)
				cancel();
		}
</source>
        <source file="org/gjt/sp/jedit/gui/FilePropertiesDialog.java" startline="340" endline="353">
public void actionPerformed(ActionEvent evt)
		{
			Object source = evt.getSource();


			if(source == okButton)
			{
				ok();
			}
			else if(source == cancelButton)
			{
				cancel();
			}
		}
</source>
    </clone>
    <clone nlines="8" distance="4">
        <source file="org/gjt/sp/jedit/gui/SelectLineRange.java" startline="125" endline="132">
public void actionPerformed(ActionEvent evt)
	{
		Object source = evt.getSource();
		if(source == ok)
			ok();
		else if(source == cancel)
			cancel();
	}
</source>
        <source file="org/gjt/sp/jedit/gui/FilePropertiesDialog.java" startline="340" endline="353">
public void actionPerformed(ActionEvent evt)
		{
			Object source = evt.getSource();


			if(source == okButton)
			{
				ok();
			}
			else if(source == cancelButton)
			{
				cancel();
			}
		}
</source>
    </clone>
</clones>
